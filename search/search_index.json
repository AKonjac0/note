{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome","text":""},{"location":"#akonjac_","title":"AKonjac_","text":""},{"location":"#note","title":"Note","text":""},{"location":"about/","title":"About","text":"<p>github</p> <p>blog</p>"},{"location":"my%20past/MCU/51/","title":"51\u5355\u7247\u673a","text":""},{"location":"my%20past/MCU/51/#uart","title":"\u4e32\u53e3\u901a\u4fe1UART","text":"<ol> <li> <p>\u4e32\u53e3\u6ce2\u7279\u7387\u4f7f\u7528\u5b9a\u65f6\u56681\uff0c\u8fd9\u91cc\u53ea\u9700\u8981\u5b9a\u65f6\u56681\u6ea2\u51fa\uff0c\u4e0d\u9700\u8981\u4ea7\u751f\u4e2d\u65ad,\u800c\u901a\u8fc7\u8bbe\u7f6e\u5b9a\u65f6\u56681\u7684TL\u548cTH\u521d\u59cb\u503c\u63a7\u5236T1\u6ea2\u51fa\u7387\uff0c\u6765\u63a7\u5236\u6ce2\u7279\u7387\u3002</p> </li> <li> <p>\u6ce2\u7279\u7387\uff1a\u4e32\u53e3\u901a\u4fe1\u7684\u901f\u7387(\u53d1\u9001\u4e0e\u63a5\u6536\u5404\u6570\u636e\u4f4d\u7684\u95f4\u9694\u65f6\u95f4)\u3002\u6ce2\u7279\u7387\u8bef\u5dee\u8fc7\u5927\u4f1a\u5bfc\u81f4\u6570\u636e\u51fa\u9519\u3002(\u53ef\u4ee5\u7406\u89e3\u4e3a\u8fc7\u56fa\u5b9a\u65f6\u95f4\u53d6\u4e00\u4e2a\u533a\u95f4\u5185\u7684\u7535\u5e73\u6765\u786e\u5b9a0\u548c1)</p> </li> </ol>"},{"location":"my%20past/MCU/51/#q1-10xf4110592mhz12000mhz","title":"Q1 \u4e3a\u4ec0\u4e48\u5b9a\u65f6\u56681\u521d\u503c\u4e3a0xf4\u65f6\u624d\u80fd\u6b63\u5e38\u63a5\u6536\u6570\u636e\uff0c\u4e3a\u4ec0\u4e48\u53ea\u6709\u4e32\u53e3\u901a\u4fe1\u65f6\u752811.0592MHZ\u6676\u632f,\u7ea2\u5916\u7684\u4ee3\u7801\u91cc\u663e\u793a\u7528\u7684\u662f12.000MHZ\u6676\u632f","text":""},{"location":"my%20past/MCU/51/#q2","title":"Q2 \u5916\u90e8\u6676\u632f\u5982\u4f55\u8c03\u7528","text":""},{"location":"my%20past/OI/0.9loop%3D1/","title":"0.999...=1","text":""},{"location":"my%20past/OI/0.9loop%3D1/#_1","title":"\u76f4\u63a5\u8ba1\u7b97","text":"\\[\\frac19=0.111... \\\\ 9 * \\frac19=0.999... \\\\ 9 * \\frac19=1 \\\\ \\therefore 0.999...=1 $$ ## \u8bbe\u6570 $$x=0.999...\\\\ 10 * x=9.999... \\\\10 * x-1 * x=9 * x=9 \\\\x=1 \\\\\\therefore 0.999...=1 $$ ## \u6781\u9650 $$ 0.999...=\\lim_{n\\to\\infty}1-\\frac1{10^n}\\\\ \\lim_{n\\to\\infty}\\frac1{10^n}=0 \\\\\\therefore0.999...=1 \\] <p>\u7136\u800c\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u591f\u4e25\u8c28</p>"},{"location":"my%20past/OI/0.9loop%3D1/#dedekind","title":"\u6234\u5fb7\u91d1\u5206\u5272\uff08Dedekind\uff09","text":"\\[ \u8bbe t=0.999......\uff0c\u4f5c\u4e24\u4e2a\u6709\u7406\u6570\u96c6\u7684\u5206\u5272 \\\\ A={ [x|x&lt;t,x\u6709\u7406\u6570 ]}\uff0cB={[x|x&gt;=t,x\u6709\u7406\u6570]} \\\\ C={[x|x&lt;1,x\u6709\u7406\u6570]}\uff0cD={[x|x&gt;=1,x\u6709\u7406\u6570]} \\\\ \u5206\u5272A/B\u786e\u5b9a\u4e86\u5b9e\u6570t=0.999......(\u6211\u4eec\u6682\u65f6\u4e0d\u77e5\u9053t=0.999...\u662f\u6709\u7406\u6570\u8fd8\u662f\u65e0\u7406\u6570) \\\\ \u5206\u5272C/D\u786e\u5b9a\u4e86\u6709\u7406\u65701 \\\\ \u4e3a\u8bc1\u660e t=1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u660e\u8fd9\u4e24\u4e2a\u5206\u5272\u662f\u76f8\u540c\u7684\uff0c\u5373\u8bc1\u660e A=C \\\\ \u82e5\u6709\u7406\u6570 x\u2208A\uff0c\u5219\u663e\u7136\u6709 x&lt;1\uff0c\u4e8e\u662f x\u2208C \\\\ \u82e5\u6709\u7406\u6570 x\u2208C\uff0c\u5219 x&lt;1\uff0c\u4e0d\u59a8\u8bbe x&gt;0 \\\\ \u6839\u636e\u6709\u7406\u6570\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u628ax\u7528\u5206\u6570\u7684\u5f62\u5f0f\u8868\u793a\u4e3a \\\\ x=\\frac pq\uff0c(p\uff0cq\u4e3a\u6b63\u6574\u6570) \\\\ \u65e2\u71360&lt;x&lt;1\uff0c\u5219\u5fc5\u6709p&lt; q \\\\ \u4e8e\u662f\u75311-\\frac pq&gt;=\\frac 1q&gt;0\uff0c\u53ef\u5f97\u5b58\u5728\u6b63\u6574\u6570n(\\frac{p+1}q&lt;=1 \u53ef\u4ee5\u8bc1\u660e\uff0c\u56e0\u4e3ap,q\u90fd\u662f\u6b63\u6574\u6570)\uff0c\u4f7f\u5f97 \\\\ \\frac 1q&gt;\\frac1{10^n}&gt;0(x\u662f\u786e\u5b9a\u7684\u6570\uff0c\u5219q\u5b58\u5728\uff0c\u5219\u6bd4\u5b83\u9ad8\u9636\u7684n\u4e00\u5b9a\u5b58\u5728\uff0c\u4e0d\u7528\u7ea0\u7ed3\u65e0\u7a77\u5927\u7684\u4e8b) \\\\ x=\\frac pq&lt;=1-\\frac 1q&lt;1-\\frac1{10^n}=0.99...9(n\u4e2a9)&lt; t \\\\ \u65e2\u7136x&lt;t\uff0c\u8fd9\u5c31\u8bf4\u660ex\u2208A \\\\ \u7531\u4e0a\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86A=C\uff0c\u4ece\u800c\uff0cA/B\u548cC/D\u662f\u4e24\u4e2a\u76f8\u540c\u7684\u5206\u5272\uff0c\u56e0\u6b64\uff0c 0.999...=t=1 \\] <p>Orz</p>"},{"location":"my%20past/OI/01%E5%BA%8F%E5%88%97/","title":"\u5c06\u590d\u6742\u5e8f\u5217\u95ee\u9898\u8f6c\u6362\u621001\u5e8f\u5217\u6c42\u89e3\u7684\u4f18\u5316","text":"<p>\u6709\u4e9b\u9898\u770b\u4f3c\u590d\u6742\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u7b80\u5316\u4e3a01\u5e8f\u5217\u8fd9\u79cd\u7b80\u5355\u7684\u5f62\u5f0f\uff0c\u6b64\u65f6\u89e3\u51b301\u5e8f\u5217\u5341\u5206\u7b80\u5355\uff0c\u6211\u4eec\u53ef\u4ee5\u5c1d\u8bd5\u5c06\u8be5\u95ee\u9898\u541101\u5e8f\u5217\u8f6c\u5316\u3002</p> <p>\u4f8b\u9898\uff1aP1627,SP2713_GGS4\uff0cP2824</p>"},{"location":"my%20past/OI/2022%E6%95%B0%E8%81%94%E6%B8%B8%E8%AE%B0/","title":"2022\u6570\u8054\u6e38\u8bb0","text":"<ol> <li> <p>\u5c45\u7136\u8981\u6c4224\u5c0f\u65f6\u5185\u6838\u9178\uff0c\u4f46\u6211\u4e0b\u53485\uff1a30\u624d\u505a\u5b8c\u6838\u9178\uff0c\u5bfc\u81f4\u524d\u4e00\u5929\u665a\u4e0a\u4e00\u76f4\u5fd0\u5fd1\u4f1a\u4e0d\u4f1a\u51fa\u4e0d\u4e86\u6838\u9178\u7ed3\u679c\u91cd\u8e48\u4e0a\u4e00\u6b21\u7684\u8986\u8f99( ~~\u4e0a\u6b21\u662f\u54ea\u4e2aSB\u8003TACA\u6ca1\u670972\u5c0f\u65f6\u6838\u9178\u5bfc\u81f4\u4e00\u79d1\u90fd\u6ca1\u8003\uff0c\u6211\u4e0d\u8bf4~~ )\uff0c\u6253\u7403\u90fd\u6ca1\u6253\u75db\u5feb\uff0c\u54ed</p> </li> <li> <p>\u8003\u8bd5\u524d\u7b2c\u4e00\u4e2a\u5230\u8003\u573a\uff0c\u7ed3\u679c\u7ad9\u5728\u8003\u573a\u5916\u9762\u5199\u4e86\u628a\u534a\u4e2a\u5c0f\u65f6\u4f18\u5316\u63a2\u7a76\uff0c\u4e50</p> </li> <li> <p>\u5934\u4e00\u6b21\u542c\u89c1\u5e7f\u64ad\u6ce8\u610f\u4e8b\u9879\u8fd8TM\u5e26\u8bed\u6c14\u8bcd\u7684\uff0c\u7b11</p> </li> <li> <p>\u867d\u7136\u60f3\u7740\u57fa\u7840\u586b\u7a7a\u4e0d\u80fd\u51fa\u9519\uff0c\u7ed3\u679c\u8fd8\u662f\u6709\u9053\u7acb\u4f53\u51e0\u4f55\u5c11\u7b97\u4e86\u4e00\u79cd\u60c5\u51b5\uff0c\u60b2</p> </li> <li> <p>\u7ed3\u679c\u6700\u540e\u4e00\u9053\u586b\u7a7a\u8fd8\u662f\u7b97\u9519\u4e86\u3002\u4e8b\u5b9e\u8bc1\u660e\uff0c\u5982\u679c\u8003\u573a\u4e0a\u7ed9\u6211\u4e00\u53f0\u5e26DEV C++\u7684\u7535\u8111\uff0c\u8fd9\u9898\u5c31\u79d2\u4e86\uff0c\u6de6</p> </li> </ol>"},{"location":"my%20past/OI/AC%E8%87%AA%E5%8A%A8%E6%9C%BA/","title":"AC\u81ea\u52a8\u673a","text":"<ul> <li>\u6ce8\u610f:\u4e3a\u4ec0\u4e48\u5728get_fail\u4e2d\u8981\u5c06\u4e0d\u5b58\u5728\u7684\u513f\u5b50\u6307\u5411fail\u6307\u9488\u5bf9\u5e94\u7684\u513f\u5b50\uff1f\u56e0\u4e3a\u8fd9\u6837\u5904\u7406\uff0c\u7531\u4e8ebfs\u4ece\u4e0a\u5230\u4e0b\uff0c\u6240\u4ee5\u8fd9\u4e9b\u513f\u5b50\u7684\u66f4\u65b0\u4e5f\u662f\u4ece\u4e0a\u5230\u4e0b\uff0c\u53ef\u4ee5\u76f4\u63a5\u6307\u5230\u7b2c\u4e00\u4e2a\u5b58\u5728\u7684fail\u4e0a\uff0c\u800c\u4e0d\u9700\u8981\u5faa\u73af\u67e5\u627e\uff0c\u907f\u514d\u8d85\u65f6\u3002</li> </ul>"},{"location":"my%20past/OI/CF1896D/","title":"CF1896D","text":"<p>CF1896D</p> <p>\u63d0\u4f9b\u4e00\u79cd ~~\u5de8\u9ebb\u70e6~~ \u7684 bitset \u505a\u6cd5\u3002</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u4e32\uff0c\u6211\u4eec\u5199\u4e00\u4e2a\u524d\u7f00\u548c\uff0c\u7528\u6811\u72b6\u6570\u7ec4\u52a8\u6001\u7ef4\u62a4\uff0c\u5219\u4f4d\u7f6e \\(1\\leq i &lt; j \\leq n\\) \u5bf9\u5e94\u5b50\u4e32\u7684\u548c\u53ef\u4ee5\u8868\u793a\u6210 \\(s_j-s_{i-1}\\) \uff0c\u539f\u9898\u5c31\u662f\u6c42 \\(s_j-s_{i-1}=s\\) \u662f\u5426\u53ef\u4ee5\u6ee1\u8db3\u3002</p> <p>\u53d7 \u8fd9\u9053\u9898 \u7684\u542f\u53d1\uff0c\u8fd9\u9053\u9898\u91cc\u6211\u4eec\u53ef\u4ee5\u7528 bitset \u7ef4\u62a4\u8fd9\u4e2a\u524d\u7f00\u548c\u6570\u7ec4\uff0c\u5bf9\u4e8e\u4e00\u4e2a <code>bitset&lt;N&gt; f</code> \uff0c\u901a\u8fc7\u4f4d\u8fd0\u7b97\u5224\u65ad <code>f&amp;(f&gt;&gt;s)</code> \uff0c\u82e5\u7ed3\u679c\u4e0d\u4e3a\u96f6\uff0c\u5219\u8bf4\u660e\u5b58\u5728\u8fd9\u6837\u7684\u5b50\u4e32\u3002</p> <p>\u5bf9\u4e8e\u4fee\u6539\uff0c\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u4fee\u6539\u5bf9\u4e8e bitset \u4e2d \\(s_j-1\\) \u4f4d\u7f6e\u4e4b\u524d\u7684\u4f4d\u65e0\u5f71\u54cd\uff0c\u5bf9\u4e8e \\(s_j\\) \u4e4b\u540e\u7684\u4f4d\u7f6e\uff0c\u53f3\u79fb\u6216\u5de6\u79fb\u4e00\u4f4d\u5373\u53ef\u3002</p> <p>\u6211\u4eec\u6784\u9020\u4e24\u4e2a bitset \u4e32\uff0c\u4e00\u4e2a\u4e32\u6ee1\u8db3\u524d \\(s_j-1\\) \u4f4d\u90fd\u4e3a \\(1\\) \uff0c\u53e6\u4e00\u4e2a\u4e32\u4e3a\u524d\u4e00\u4e2a\u4e32\u6309\u4f4d\u53d6\u53cd\u3002\u5c06\u539f\u4e32\u4e0e\u8fd9\u4e24\u4e2a\u4e32\u5206\u522b\u4e0e\u4e00\u4e0b\uff0c\u540e\u4e00\u4e2a\u4e32\u5de6/\u53f3\u79fb\u4e00\u4f4d\uff0c\u518d\u6216\u5728\u4e00\u8d77\uff0c\u5c31\u5b8c\u6210\u4e86\u4fee\u6539\u3002</p> <p>\u73b0\u5728\u7684\u95ee\u9898\u5728\u4e8e\uff0c\u5982\u4f55\u5feb\u901f\u6784\u9020\u8fd9\u6837\u7684\u4e24\u4e2a\u4e32\u3002</p> <p>\u66b4\u529b\u4e0d\u884c\uff0c\u6211\u4eec\u5c31\u7528\u7a7a\u95f4\u6362\u65f6\u95f4\u3002\u6211\u4eec\u91c7\u53d6\u5206\u5757\u7684\u601d\u60f3\uff0c\u8bbe\u5757\u957f\u4e3a \\(k\\) \uff0c\u6784\u9020 \\(\\frac N k\\) \u4e2a\u4e32\uff0c\u6bcf\u4e2a\u4e32\u4f9d\u6b21\u589e\u52a0 \\(k\\) \u4e2a \\(1\\)\u3002\u6bcf\u6b21\u6839\u636e \\(s_j\\) \u66b4\u529b\u4fee\u6539\u79bb\u4ed6\u6700\u201c\u8fd1\u201d\u7684\u4e32\uff0c\u5c31\u53ef\u4ee5\u5728 \\(O(k)\\) \u7684\u65f6\u95f4\u5185\u6784\u9020\u51fa\u6211\u4eec\u8981\u7684\u4e32\u3002</p> <p>\u534f\u8c03\u4e00\u4e0b\u65f6\u95f4\u7a7a\u95f4\uff0c\u53d6 \\(k=N^{\\frac 13}\\) \uff0c\u518d\u7a0d\u7a0d\u5361\u5e38\u5c31\u53ef\u4ee5\u901a\u8fc7\u672c\u9898\u4e86\u3002</p> <pre><code>#pragma GCC optimize(2)\n#include&lt;iostream&gt;\n#include&lt;bitset&gt;\n#include&lt;cmath&gt;\nusing namespace std;\nconst int N=2e5+10,K=4e3;\nint T,n,q,len;\nbitset&lt;N&gt; s[K];\nbitset&lt;N&gt; f,tmp,ttmp,g,h;\nint k[N],a[N],t[N];\nint read1() {\n    int x=0;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0') ch=getchar();\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0') x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nvoid write1(int x) {\n    if(x&gt;9) write1(x/10);\n    putchar(x%10+'0');\n}\nint lowbit(int x){\n    return x&amp;(-x);\n}\nvoid change(int x,int d){\n    while(x&lt;=n) t[x]+=d,x+=lowbit(x);\n}\n\nint sum(int x){\n    int ans=0;\n    while(x&gt;0) ans+=t[x],x-=lowbit(x);\n    return ans;\n}\nvoid init() {\n    s[0].set(0);\n    len=pow(N,0.33);\n    for(int i=1; i&lt;N; ++i) k[i]=(i-1)/len+1;\n    for(int i=1; i&lt;=k[N-1]; ++i) {\n        s[i]=s[i-1];\n        for(int j=(i-1)*len+1; j&lt;=min(i*len,N-1); ++j) s[i].set(j);\n    }\n\n}\nvoid solve() {\n    n=read1(),q=read1();\n    f=s[0];\n    int ssum=0;\n    for(int i=1;i&lt;=n+n;++i) t[i]=0;\n    for(int i=1; i&lt;=n; ++i) {\n        a[i]=read1();\n        ssum+=a[i];\n        f.set(ssum);\n        change(i,a[i]);\n    }\n    for(int i=1,op,j,v; i&lt;=q; ++i) {\n        op=read1();\n        if(op==1) {\n            j=read1();\n            if((f&amp;(f&gt;&gt;j)).any()) putchar('Y'),putchar('E'),putchar('S'),putchar('\\n');\n            else putchar('N'),putchar('O'),putchar('\\n');\n        } else {\n            j=read1(),v=read1();\n            if(v==a[j]) continue;\n            int sumj=sum(j);\n            int tmpk=k[sumj-1];\n            tmp=s[tmpk];\n            for(int t=min(N-1,tmpk*len); t&gt;=sumj; --t) tmp.reset(t);\n            ttmp=tmp;\n            ttmp.flip();\n            g=tmp&amp;f,h=ttmp&amp;f;\n            if(v-a[j]==1) f=(g)|(h&lt;&lt;1);\n            else f=(g)|(h&gt;&gt;1);\n            change(j,v-a[j]);\n            a[j]=v;\n        }\n    }\n}\nint main() {\n    T=read1();\n    init();\n    while(T--) solve();\n\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/CRT/","title":"\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406","text":"<p>\u7528\u6765\u6c42\u89e3\u8fd9\u6837\u7684\u65b9\u7a0b\u7ec4\uff1a</p> <p>$$ \\left { \\begin{aligned}     x\\equiv a_1 \\pmod {m_1}\\     x\\equiv a_2 \\pmod {m_2}\\      ...\\     x\\equiv a_k \\pmod {m_k} \\end{aligned} \\right. $$ \u6240\u6709\\(m\\)\u4e92\u8d28\u3002</p>"},{"location":"my%20past/OI/CRT/#_2","title":"\u505a\u6cd5","text":"<p>\u5b9a\u4e49\\(M=\\prod_{i=1}^k m_i,M_i=\\frac M {m_i}\\),\u5219</p> <p>\\(\\gcd(M_i,m_i)=1\\),\u56e0\u4e3a\u6240\u6709\u7684\\(m\\)\u90fd\u4e92\u8d28\u3002</p> <p>\u6b64\u65f6\uff0c\u5b9a\u4e49\\(M_it_i\\equiv 1\\pmod {m_i},t_i=M_i^{-1}\\pmod {m_i}\\)</p> <p>\\(t_i\\)\u53ef\u4ee5\u7528\u6269\u6b27\u6c42\u51fa\u3002</p> <p>\u6240\u4ee5\uff1a\\(a_iM_it_i\\equiv a_i\\pmod{m_i}\\)</p> <p>\u53c8\u56e0\u4e3a\u5bf9\u4e8e\\(i\\not = j,M_i=km_j\\),\u6240\u4ee5\\(a_iM_it_i\\equiv 0\\pmod {m_j}\\)</p> <p>\u56e0\u6b64\u53ef\u884c\u89e3\u4e3a\\(\\sum_{i=1}^ka_iM_it_i\\)</p> <p>P1495</p> <p>\u6a21\u677f\u9898\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=1e4+10;\nint n,M,_M,g,x,y,t,ans;\nint a[N],m[N];\nvoid exgcd(int a,int b,int &amp;d,int &amp;x,int &amp;y);   \nsigned main(){\n    M=1;scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld%lld\",&amp;m[i],&amp;a[i]),M*=m[i];\n    for(int i=1;i&lt;=n;++i){\n        _M=M/m[i];\n        exgcd(_M,m[i],g,x,y);\n        t=x;\n        ans=(ans+t*_M*a[i])%M;\n    }\n    printf(\"%lld\",(ans+M)%M);\n    return 0;\n}\nvoid exgcd(int a,int b,int &amp;d,int &amp;x,int &amp;y){\n    if(!b)d=a,x=1,y=0;\n    else exgcd(b,a%b,d,y,x),y-=a/b*x;\n}\n</code></pre> <p>P8178</p> <p>\u975e\u5e38\u5999\u7684\u4e00\u9053\u9898\uff0c\u867d\u7136\u505a\u6cd5\u4e2d\u6ca1\u6709\\(CRT\\)\uff0c\u4f46\u662f\u6709\u4e00\u6761\u91cd\u8981\u6027\u8d28\u3002</p> <p>\u9996\u5148\u9898\u610f\u53ef\u4ee5\u8f6c\u5316\u4e3a\\(A_if_0+B_i\\equiv 0\\pmod {p_i}\\).</p> <p>\u5b9a\u4e49\\(A_i=\\prod_{i=1}^ka_i,B_i=\\sum_{i=1}^k(\\prod_{j=i+1}^ka_j)b_i\\)</p> <p>\u5219\u6709\\(A_i=a_iA_{i-1},B_i=a_iB_{i-1}+b_i\\)</p> <p>\u5219\u4ee4\\(B=B_i\\mod p_i,A=A_i\\mod p_i\\)</p> <p>\u8fd9\u6837\uff0c\u5176\u4e2d\u4e00\u4e2a\u65b9\u7a0b\u7684\u89e3\u53ef\u4ee5\u8868\u793a\u4e3a\\(f_0=(p_i-B)* A^{-1}\\mod p_i\\)(1) \uff0c\\(A^{-1}\\)\u4e3a\u9006\u5143\u3002</p> <p>\u4f46\u662f\uff0c\u8fd9\u6837\u7684\u8bdd\uff0c\u6bcf\u4e2a\u65b9\u7a0b\u90fd\u53ef\u80fd\u6709\u4e00\u4e2a\u4e0d\u540c\u7684\u89e3\uff0c\u600e\u4e48\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u5408\u5e76\u4e3a\u4e00\u4e2a\u89e3\u5462\uff1f</p> <p>\u7b54\u6848\u662f\u4e2d\u56fd\u5269\u4f59\u5b9a\u7406\uff0c\u5bf9\u4e8e\\(x_i\\not = x_j\\)\u4e14\\(p_i=p_j\\)\u65f6\u65e0\u89e3\uff0c\u56e0\u6b64\u53ea\u8981\u4e0d\u5b58\u5728\u8fd9\u79cd\u60c5\u51b5\u90fd\u6709\u89e3\u3002</p> <p>\u5177\u4f53\u5730\uff0c\u7531 (1) \u53ef\u77e5\uff0c\u4efb\u4f55\u65b9\u7a0b\u53ef\u4ee5\u8868\u793a\u4e3a\\(f_0\\equiv (p_i-B)* A^{-1} \\pmod {p_i}\\to x\\equiv a_i\\pmod{m_i}\\),\u56e0\u6b64\u53ef\u4ee5\u7528\\(CRT\\)\u6c42\u89e3\u3002</p> <p>\u6ce8\u610f\u7279\u5224\\(A=0\\).</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;map&gt;\n#define int long long \nusing namespace std;\nconst int N=2e3+10;\nint T,k,_A,_B,A,B;\nint a[N],b[N],p[N],vis[N];\nmap&lt;int,int&gt; M;\nint kp(int x,int p,int P){\n    if(p==0)return 1;\n    if(p==1)return x;\n    if(p&amp;1)return x*kp(x*x%P,p&gt;&gt;1,P)%P;\n    else return kp(x*x%P,p&gt;&gt;1,P)%P;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;T);\n    while(T--){\n        bool flag=true;memset(vis,0,sizeof vis);\n        M.clear();\n        scanf(\"%lld\",&amp;k);\n        for(int i=1;i&lt;=k;++i)scanf(\"%lld\",&amp;a[i]);\n        for(int i=1;i&lt;=k;++i)scanf(\"%lld\",&amp;b[i]);\n        for(int i=1;i&lt;=k;++i)scanf(\"%lld\",&amp;p[i]);\n        for(int i=1;i&lt;=k;++i){\n            A=1,B=0;\n            for(int j=1;j&lt;=i;++j) A=(A*a[j])%p[i],B=(B*a[j]%p[i]+b[j])%p[i];\n            if(A==0 &amp;&amp; B!=0){flag=false;break;}\n            if(A==0 &amp;&amp; B==0)continue;\n            int tmp=(p[i]-B)*kp(A,p[i]-2,p[i])%p[i];\n            if(M.find(p[i])==M.end())M[p[i]]=tmp;\n            else if(M[p[i]]!=tmp){flag=false;break;}    \n        }\n        if(flag)printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/CSP-S%202021/","title":"CSP-S 2021","text":"<p>P7913 \u5eca\u6865\u5206\u914d</p> <p>\u5e76\u67e5\u96c6+\u8d2a\u5fc3</p> <p>\u5c06\u4e24\u7ec4\u6570\u636e\u6309\u8fdb\u5165\u673a\u573a\u7684\u65f6\u95f4\u6392\u5e8f\uff0c\u6bcf\u6b21\u9009\u6700\u5c0f\u4e14\u6ca1\u6709\u8bbf\u95ee\u8fc7\u7684\u822a\u73ed\uff0c\u5e76\u4e14\u901a\u8fc7lower_bound\u6c42\u51fa\u6574\u4e2a\u4e00\u6761\u94fe\uff0c\u5c06\u4ed6\u4eec\u90fd\u6253\u4e0a\u6807\u8bb0\u3002\u4e4b\u540e\u5c06\u6240\u6709\u94fe\u4e0a\u7684\u70b9\u5e76\u5728\u4e00\u8d77\u3002</p> <p>\u590d\u6742\u5ea6\\(\\Theta (nlogn+k),k=1-n^2\\),k\u662f\u5c06\u5df2\u7ecf\u641c\u8fc7\u7684\u70b9\u8df3\u8fc7\u7684\u641c\u7d22\u6b21\u6570\uff0c~~\u4e8b\u5b9e\u8bc1\u660eCCF\u7684\u6570\u636e\u662f\u771f\u7684\u6c34~~</p> <p>~~\u8fd9\u4e0d\u662f\u8bf4\u660e\u6211rp\u597d\u5417~~</p> <p>P7915 \u56de\u6587</p> <p>1.40pts (\u66b4\u529b)dfs+\u526a\u679d</p> <p>\u526a\u679d\u662f\u6307\u5728\u641c\u5230n+1~2n\u4e2a\u6570\u65f6\uff0c\u4e0e\u524d\u9762\u7684\u5e8f\u5217\u5224\u65ad\u662f\u5426\u56de\u6587\uff0c\u4e0d\u5408\u6cd5\u76f4\u63a5\u56de\u6eaf\uff1b\u5e76\u4e14\u56e0\u4e3a\u65f6\u6309\u7167\u5148\u5de6\u540e\u53f3\u7684\u987a\u5e8f\u641c\u7d22\uff0c\u6240\u4ee5\u7b2c\u4e00\u6b21\u641c\u5230\u7684\u4e00\u5b9a\u662f\u5de6\u53f3\u7686\uff0c\u540e\u9762\u7684\u90fd\u4e0d\u7528\u641c\uff0c\u7a0b\u5e8f\u76f4\u63a5\u7ed3\u675f\u3002</p> <p>\u5bf9\u4e8en&lt;=20\u5b8c\u5168ok</p> <p>\u5bf9\u4e8en&lt;=100\u770brp</p> <p>~~CCF\u6570\u636e\u592a\u5783\u573e\uff0c20min\u6c34\u8fc740pts~~</p> <p>~~\u8fd9\u4e0d\u662f\u8bf4\u660e\u6211rp\u633a\u597d\u5417 :)~~</p> <p>2.100pts \u6211\u4eec\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u4e2d\u95f4\u5f62\u6001\uff0c\u5373\u5b50\u5e8f\u5217\uff0c\u5b83\u80fd\u62d3\u5c55\u7684\u70b9\u53ea\u6709\u5e8f\u5217\u5de6\u8fb9\u548c\u53f3\u8fb9\u4e00\u4e2a\uff0c\u56e0\u6b64\u67094\u4e2a\u6307\u9488\uff0c\u4e3a\u5e8f\u5217\u5de6\u53f3\u7684\u5f85\u53d6\u6307\u9488\u548c\u5b50\u5e8f\u5217\u7684\u5de6\u53f3\u6307\u9488\u3002\u6b64\u65f6\u5de6\u8fb9\u4e0d\u884c\u53d6\u53f3\u8fb9\uff0c\u53f3\u8fb9\u4e0d\u884c\u53d6\u5de6\u8fb9\uff0c\u90fd\u4e0d\u884c-1\uff0c\u90fd\u884c\u5c31\u53d6\u5de6\u8fb9\u3002 \u6ce8\u610f\u5224\u65ad\u6307\u9488\u662f\u5426\u91cd\u5408\u3002</p>"},{"location":"my%20past/OI/DLX/","title":"Dancing Links X","text":""},{"location":"my%20past/OI/DLX/#_1","title":"\u5e94\u7528\uff1a\u89e3\u51b3\u7cbe\u786e\u8986\u76d6\u95ee\u9898\u3002","text":"<p>\u4f8b\u5982\u6570\u72ec\uff0ck\u7687\u540e\u7b49\u6d89\u53ca\u540c\u4e00\u4e2a\u6570\u5728\u4e00\u5b9a\u8303\u56f4\u5185\u503c\u51fa\u73b0\u4e00\u6b21\u7684\u95ee\u9898\u53ef\u4ee5\u7528DLX\u89e3\u51b3\u3002</p>"},{"location":"my%20past/OI/DLX/#_2","title":"\u6a21\u677f","text":"<p>P4929</p> <ul> <li>\u6ce8\u610f\uff1a</li> </ul> <p>1.\u6bcf\u6b21\u5220\u9664\u548c\u6062\u590d\u7684\u90fd\u662f\u8868\u5934\u4e0b\u9762\u7684\u4e00\u6574\u5217\u4ee5\u53ca\u542b\u67091\u7684\u4e00\u6574\u884c\uff0c\u800c\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u66f4\u6539\u7684\u53ea\u6709\u8868\u5934\u5de6\u53f3\u6307\u9488\u548c\u4e0d\u662f\u8868\u5934\u90a3\u5217\u76841\u7684\u4e0a\u4e0b\u6307\u9488</p> <p>\uff08\u56e0\u4e3a\u6062\u590d\u8981\u4ece\u8868\u5934\u5411\u4e0b\u8bbf\u95ee\uff0c\u518d\u4ece\u884c\u5934\u5411\u53f3\u8bbf\u95ee\uff09\u3002</p> <p>\u53ea\u6709\u8fd9\u6837\u624d\u80fd\u5b9e\u73b0\u8bbf\u95ee\u5230\u5df2\u5220\u9664\u76841\u3002</p> <p>2.\u5341\u5b57\u94fe\u8868\u4e2d\u4e0a\u4e0b\uff0c\u5de6\u53f3\u7684\u987a\u5e8f\u65e0\u6240\u8c13\uff0c\u4f46\u5fc5\u987b\u7edf\u4e00\u3002</p> <p>3.\u6ce8\u610f\u6240\u6709\u94fe\u8868\u90fd\u662f\u53cc\u5411\uff0c\u5373\u662f\u4e00\u4e2a\u73af\u3002\u5f53\u81ea\u5df1\u6307\u5411\u81ea\u5df1\u65f6\u4e3a\u7a7a\u3002</p> <p>4.\u7b97\u6cd5\u5224\u5b9a\u7ed3\u679c\u9519\u8bef\u7684\u4f9d\u636e\u662f\u8868\u5934\u8fd8\u6709\u5269\u4f59\uff0c\u4f46\u5143\u7d20\u90fd\u5220\u5b8c\u4e86\uff0c\u8bf4\u660e\u4e4b\u524d\u6709\u4e24\u4e2a\u4ee5\u4e0a\u76841\u51b2\u7a81\u3002</p> <p>5.\u5220\u9664\u65f6\u66f4\u6539\u4e0a\u4e0b\u5143\u7d20\u7684\u4e4b\u4e2d\u5462\u4e00\u5b9a\u6ce8\u610f\u987a\u5e8f\u3002</p> <pre><code>    f[++cnt].u=C;\n    f[cnt].d=f[C].d;\n    f[f[C].d].u=cnt;\n    f[C].d=cnt;\n    f[cnt].row=R;\n    f[cnt].col=C; \n</code></pre> <p>6.\u6bcf\u6b21\u9009\u75281\u4e2a\u6570\u6700\u5c0f\u7684\u5217\u5b9e\u9645\u4e5f\u662f\u526a\u679d\u4f18\u5316\uff0c\u4e3a\u4e86\u8ba9\u66f4\u591a\u76841\u5728\u5f53\u524d\u56de\u5408\u5c31\u88ab\u7b5b\u6389\uff0c\u4ee5\u51cf\u5c11\u641c\u7d22\u6b21\u6570\u3002</p> <p>7.\u53bb\u9664\u5143\u7d20\u65f6\u662f\u53bb\u9664\u9664\u4e86\u8868\u5934\u5143\u7d20\u610f\u5916\u6240\u6709\u4e0b\u9762\u76841\uff0c\u548c\u9664\u4e86\u884c\u5934\u5916\u6240\u67091.\u4e3a\u4e86\u4e0b\u6b21\u4ece\u8868\u5934\uff0c\u884c\u5934\u8bbf\u95ee\u5230\u88ab\u5220\u9664\u7684\u70b9\u3002 code time:</p> <p>1) \u6570\u7ec4\u7248\uff1a <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=550,M=N*N+N;\nint n,m,cnt;\nint d[M],u[M],l[M],r[M],row[M],col[M];\nint s[M],h[M],ans[M];\n\n\nvoid init(){\n    for(int i=0;i&lt;=m;++i){\n        l[i]=i-1;\n        r[i]=i+1;\n        u[i]=d[i]=i;\n    }\n    r[m]=0;\n    l[0]=m;//\u94fe\u8868\u5934\u5c3e\u7279\u5224\n    memset(h,-1,sizeof h);\n    memset(s,0,sizeof s);\n    cnt=m+1;\n}\n\nvoid add(int R,int C){\n    s[C]++;\n    row[cnt]=R;\n    col[cnt]=C;\n    u[cnt]=C;\n    d[cnt]=d[C];\n    u[d[C]]=cnt;\n    d[C]=cnt;//\u6ce8\u610f\u987a\u5e8f\uff01\n\n    if(h[R]==-1){\n        h[R]=l[cnt]=r[cnt]=cnt;\n    }else{\n        r[cnt]=h[R];\n        l[cnt]=l[h[R]];\n        r[l[h[R]]]=cnt;\n        l[h[R]]=cnt;//\u987a\u5e8f\n    }\n    cnt++;\n}\n\nvoid remove(int C){\n    r[l[C]]=r[C],l[r[C]]=l[C];\n    for(int i=d[C];i!=C;i=d[i]){\n        for(int j=r[i];j!=i;j=r[j]){\n            u[d[j]]=u[j];\n            d[u[j]]=d[j];//\u53ea\u66f4\u6539\u4e0a\u4e0b\u6307\u9488\uff0c\u4e3a\u4e86\u4e0b\u6b21\u8fd8\u80fd\u8bbf\u95ee\u5230\u5e76\u6062\u590d\n            s[col[j]]--;\n        }\n    }\n}\nvoid resume(int C){\n    for(int i=d[C];i!=C;i=d[i]){\n        for(int j=r[i];j!=i;j=r[j]){\n            u[d[j]]=j;\n            d[u[j]]=j;//\u518d\u63a5\u56de\u6765\n            s[col[j]]++;\n        }\n    }\n    l[r[C]]=C,r[l[C]]=C;\n}\n\nvoid print1(int tot){\n    for(int i=0;i&lt;tot;++i)printf(\"%d \",ans[i]);\n}\nint dfs(int dep){\n    if(r[0]==0){\n        print1(dep);\n        return 1;//\u4e00\u4e2a\u89e3\u5c31\u9000\u51fa\n    }\n    int c=r[0];\n    for(int i=r[0];i!=0;i=r[i]){\n        if(s[i]&lt;s[c])c=i;\n    }//\u526a\u679d\u4f18\u5316\n    remove(c);//\u53bb\u9664\u5f53\u524d\u8868\u5934\u4e0b\u90a3\u5217\uff08C'\uff09\u7684\u6240\u67091\uff0c\u8868\u793a\u5df2\u7ecf\u88ab\u7eb3\u5165\u9009\u62e9\u3002\n    for(int i=d[c];i!=c;i=d[i]){\n        ans[dep]=row[i];//\u9009\u62e9\u5f53\u524d\u884c\u3002\n        for(int j=r[i];j!=i;j=r[j])remove(col[j]);//\u53bb\u9664\u9664\u4e86C'\u4ee5\u5916\u7684\u5f53\u524d\u884c\u76841\n        if(dfs(dep+1))return 1;\n        for(int j=r[i];j!=i;j=r[j])resume(col[j]);\n    }\n    resume(c);//\u56de\u6eaf\n    return 0;//\u65e0\u89e3\n}\nint read1(){\n    int x=0;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        ch=getchar();\n    }\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x;\n}\nint main(){\n    n=read1(),m=read1();\n    init();\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1,tmp;j&lt;=m;++j){\n            tmp=read1();\n            if(tmp)add(i,j);\n        }\n    }\n    if(!dfs(0))printf(\"No Solution!\");\n    return 0;\n}\n</code></pre> 2) \u7ed3\u6784\u4f53\u7248\uff1a <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=550,M=N*N;\nint n,m,cnt;\nint s[M],h[M],ans[M];\nstruct node{\n    int u,d,l,r,row,col;\n}f[M];\nvoid init(){\n    for(int i=0;i&lt;=m;++i){\n        f[i].l=i-1;\n        f[i].r=i+1;\n        f[i].u=f[i].d=i;\n    }\n    f[m].r=0;\n    f[0].l=m;\n    cnt=m;\n    memset(h,-1,sizeof h);\n    memset(s,0,sizeof s);\n}\nvoid link(int R,int C){\n    s[C]++;\n    f[++cnt].u=C;\n    f[cnt].d=f[C].d;\n    f[f[C].d].u=cnt;\n    f[C].d=cnt;\n    f[cnt].row=R;\n    f[cnt].col=C; \n\n    if(h[R]==-1){\n        h[R]=f[cnt].l=f[cnt].r=cnt;\n    }else{\n        f[cnt].l=h[R];\n        f[cnt].r=f[h[R]].r;\n        f[f[h[R]].r].l=cnt;\n        f[h[R]].r=cnt;\n    }\n\n}\nvoid remove(int C){\n    f[f[C].r].l=f[C].l,f[f[C].l].r=f[C].r;\n    for(int i=f[C].d;i!=C;i=f[i].d){\n        for(int j=f[i].r;j!=i;j=f[j].r){\n            f[f[j].d].u=f[j].u;\n            f[f[j].u].d=f[j].d;\n            s[f[j].col]--;\n        }\n    }\n}\nvoid resume(int C){\n    for(int i=f[C].d;i!=C;i=f[i].d){\n        for(int j=f[i].r;j!=i;j=f[j].r){\n            f[f[j].d].u=j;\n            f[f[j].u].d=j;\n            s[f[j].col]++;\n        }\n    }\n    f[f[C].l].r=C,f[f[C].r].l=C;\n}\nvoid print1(int tot){\n    for(int i=1;i&lt;=tot;++i)printf(\"%d \",ans[i]);\n}\nint dfs(int dep){\n    if(f[0].r==0){\n        print1(dep-1);\n        return 1;\n    }\n    int c=f[0].r;\n    for(int i=f[0].r;i!=0;i=f[i].r)if(s[i]&lt;s[c])c=i;\n    remove(c);\n    for(int i=f[c].d;i!=c;i=f[i].d){\n        ans[dep]=f[i].row;\n        for(int j=f[i].r;j!=i;j=f[j].r)remove(f[j].col);\n        if(dfs(dep+1))return 1;\n        for(int j=f[i].r;j!=i;j=f[j].r)resume(f[j].col);\n    }\n    resume(c);\n    return 0;\n}\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    init();\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1,tmp;j&lt;=m;++j){\n            scanf(\"%d\",&amp;tmp);\n            if(tmp)link(i,j);\n        }\n    }   \n    if(!dfs(1))printf(\"No Solution!\");\n    return 0;\n}\n</code></pre></p>"},{"location":"my%20past/OI/FFT/","title":"\u5feb\u901f\u5085\u91cc\u53f6\u53d8\u6362 FFT","text":"<p>~~\u4f17\u6240\u5468\u77e5\uff0cFFT\u5168\u79f0\u662fFast Fast TLE~~</p> <p>\u8fd9\u662f\u4e00\u4e2a\u5341\u5206\u5de7\u5999\u4e14\u4f18\u7f8e\u7684\u7b97\u6cd5\uff0c\u5305\u62ec\u4e86\u5206\u6cbb\u8fed\u4ee3\u7b49\u91cd\u8981\u601d\u60f3\u3002</p>"},{"location":"my%20past/OI/FFT/#_1","title":"\u524d\u7f6e\u77e5\u8bc6","text":"<p>\u5177\u4f53\u53c2\u8003\u8fd9\u7bc7\u6587\u7ae0,\u91cc\u9762\u8bb2\u7684\u5f88\u8be6\u7ec6\uff0c\u5305\u62ec\u591a\u9879\u5f0f\u4e58\u6cd5(\u5377\u79ef)\uff0c\u7cfb\u6570\u8868\u793a\u6cd5\u4e0e\u70b9\u503c\u8868\u793a\u6cd5\uff0c\u6734\u7d20\u7b97\u6cd5(\u79bb\u6563\u5085\u91cc\u53f6\u53d8\u6362DFT) \uff0c\u590d\u6570\u52a0\u6cd5\u4e58\u6cd5\uff0c\u5355\u4f4d\u6839\u53ca\u5176\u6027\u8d28\u7b49\u8bf8\u591a\u77e5\u8bc6\u70b9\u3002</p>"},{"location":"my%20past/OI/FFT/#fft_1","title":"FFT","text":"<p>\u8fd9\u91cc\u53ea\u8bb2\u4e00\u4e9b\u5177\u4f53\u7684\uff0c\u539f\u6587\u6ca1\u8bb2\u6e05\u695a\u7684\u7ec6\u8282\u3002</p> <ol> <li>\u9996\u5148\uff0c\u5047\u8bbe\u539f\u6765\u7684\u7cfb\u6570\u662f\\(a_0,a_1,...,a_n\\),\u6c42\u51fa\u6765\u7684\u70b9\u503c\u8868\u793a\u4e3a\\((x_0,y_0),(x_1,y_1),...,(x_n,y_n)\\),\u518d\u5c06\\(y_0,y_1,...,y_n\\)\u4f5c\u4e3a\u7cfb\u6570\u9006\u53d8\u6362\u51fa\u70b9\u503c\u8868\u793a\\((x_0',c_0),(x_1',c_1),...,(x_n',c_n)\\),\u5219\u6b64\u65f6\u6ee1\u8db3\\(a_n=\\frac{c_n}{k}\\)</li> </ol> <p>~~\u4f5c\u4e3a\u849f\u84bb\u770b\u539f\u6587\u7adf\u7136\u770b\u4e86\u4e09\u5929\u624d\u770b\u61c2\uff0c\u6240\u4ee5\u89e3\u91ca\u4e00\u4e0b~~</p> <ol> <li> <p>\u5047\u8bbe\u591a\u9879\u5f0f\\(a,b\\)\u4e3a\\(n,m\\)\u6b21\u591a\u9879\u5f0f\uff0c\u5219\u5377\u79ef\u5377\u51fa\u6765\u7684\u591a\u9879\u5f0f\u4e3a\\(n+m\\)\u6b21\uff0c\u56e0\u6b64\u5728\u7b97\u6cd5\u4e2d\uff0c\u9700\u8981\u5c06\\(a,b\\)\u4e24\u4e2a\u591a\u9879\u5f0f\u7684\u7cfb\u6570\u8865\u5230\\(n+m\\)\u6b21\u3002\u5c31\u7b97\u7cfb\u6570\u662f\\(0\\)\u4e5f\u6ca1\u4e8b\u3002</p> </li> <li> <p>\u539f\u6587\u4e2d\"\u95ee\u9898\u7f29\u5c0f\u4e00\u534a\uff0c\u53ef\u4ee5\u5206\u6cbb\"\u4f53\u73b0\u4e3a\uff1a\u5047\u8bbe\u7b97\u6cd5\u8fdb\u884c\u4e2d\u5df2\u7ecf\u7b97\u51fa\\(a_1,a_2\\)\u4e24\u4e2a\u5b50\u591a\u9879\u5f0f\u7684\u70b9\u503c\u8868\u793a\uff0c\u4e14\u4ed6\u4eec\u7684\u70b9\u503c\u5206\u522b\u5bf9\u5e94\u591a\u9879\u5f0f\\(a_1,a_2\\)\u53d6\\(W_n^0 ,W_n^1,...,W_n^k\\)\u65f6\u7684\u503c\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\u8fd9\u4e9b\u503c\u7b97\u51fa\u591a\u9879\u5f0f\\(a\\)\u53d6\\(W_n^0 ,W_n^1,...,W_n^{2k}\\)\u7684\u503c\uff0c\u8fd9\u6837\u4ece\\(k=1\\)\u4e00\u76f4\u5230\\(k=n\\)\uff0c\u6211\u4eec\u7528\\(O(n\\log n)\\)\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u7b97\u51fa\u4e86\u6574\u4e2a\u591a\u9879\u5f0f\u7684\u70b9\u503c\u8868\u793a\u3002</p> </li> </ol> <p>\u53e6\u5916\uff0c\u56e0\u4e3a\u9012\u5f52\u7684\u7a7a\u95f4\u5f00\u9500\u8fc7\u9ad8\uff0c\u6240\u4ee5\u8981\u91c7\u7528\u8fed\u4ee3(\u9012\u63a8)\u7684\u65b9\u5f0f\u5b9e\u73b0\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\nusing namespace std;\ntypedef double db;\nconst int N=4e6+10;\nconst db Pi=acos(-1.0);\nstruct c{\n    db x,y;\n    c(db xx=0,db yy=0){x=xx,y=yy;}\n}a[N],b[N];\nc operator +(c a,c b){return c(a.x+b.x,a.y+b.y);}\nc operator -(c a,c b){return c(a.x-b.x,a.y-b.y);}\nc operator *(c a,c b){return c(a.x*b.x-a.y*b.y,a.y*b.x+b.y*a.x);}\nint n,m,k,l;\nint r[N];\nvoid init(){\n    l=0,k=1;while(k&lt;=n+m)k&lt;&lt;=1,++l;\n    for(int i=0;i&lt;k;++i) r[i]=(r[i&gt;&gt;1]&gt;&gt;1)|((i&amp;1)&lt;&lt;(l-1));//\u627e\u89c4\u5f8b\u7684\u4e1c\u897f\u5c31\u80cc\u4e00\u80cc\u597d\u4e86\n}\nvoid FFT(c* a,int t){\n    for(int i=0;i&lt;k;++i)if(i&lt;r[i])swap(a[i],a[r[i]]);//\u5f97\u5230\u6700\u5e95\u5c42\u7684\u591a\u9879\u5f0f\u7cfb\u6570\n    for(int mid=1;mid&lt;k;mid&lt;&lt;=1){//\u679a\u4e3e\u4e2d\u70b9\uff0c\u5373\u533a\u95f4\u957f\u7684\u4e00\u534a\n        c Wn(cos(Pi/mid),t*sin(Pi/mid));//\u5355\u4f4d\u6839\n        for(int L=mid&lt;&lt;1,j=0;j&lt;k;j+=L){//L\u4e3a\u533a\u95f4\u957f\uff0cj\u4e3a\u533a\u95f4\u8d77\u70b9\n            c w(1,0);//p=0\u7684\u521d\u59cb\u72b6\u6001\n            for(int p=0;p&lt;mid;++p,w=w*Wn){//\u8fd9\u91cc\u7684p\u5c31\u662f\u5355\u4f4d\u6839\u7684\u5e42\u6b21\uff0c\u4e3a0~mid\n                c x=a[j+p],y=a[j+mid+p]*w;//\u8774\u8776\u64cd\u4f5c\n                a[j+p]=x+y;//\u524d\u534a\n                a[j+mid+p]=x-y;//\u540e\u534a\n            }\n        }\n    }\n}\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=0;i&lt;=n;++i)scanf(\"%lf\",&amp;a[i].x);\n    for(int i=0;i&lt;=m;++i)scanf(\"%lf\",&amp;b[i].x);\n    init();\n    FFT(a,1);//\u6b63\u53d8\u6362\n    FFT(b,1);\n    for(int i=0;i&lt;k;++i)a[i]=a[i]*b[i];//\u70b9\u503c\u76f4\u63a5O(n)\u76f8\u4e58\n    FFT(a,-1);//\u9006\u53d8\u6362\n    for(int i=0;i&lt;=n+m;++i)printf(\"%d \",(int)(a[i].x/k+0.5));\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/Fast%20IO/","title":"Fast io","text":"<pre><code>/* --------------- fast io --------------- */ // begin\nnamespace Fread {\n  const int SIZE=1&lt;&lt;21;\n  char buf[SIZE],*S,*T;\n  inline char getchar(){\n    if(S==T){\n      T=(S=buf)+fread(buf,1,SIZE,stdin);\n      if(S==T) return EOF;\n    }\n    return *S++;\n  }\n} // namespace Fread\nnamespace Fwrite {\n  const int SIZE=1&lt;&lt;21;\n  char buf[SIZE],*S=buf,*T=buf+SIZE;\n  inline void flush(){\n    fwrite(buf,1,S-buf,stdout);\n    S=buf;\n  }\n  inline void putchar(char c) {\n    *S++=c;\n    if(S==T)flush();\n  }\n  struct NTR {\n    ~ NTR(){flush(); }\n  }ztr;\n} // namespace Fwrite\n#define getchar Fread :: getchar\n#define putchar Fwrite :: putchar\nnamespace Fastio{\n  struct Reader{\n    template&lt;typename T&gt;\n    Reader&amp; operator&gt;&gt;(T&amp; x){\n      char c=getchar();\n      T f=1;\n      while(c&lt;'0'||c&gt;'9'){\n    if(c=='-')f=-1;\n    c=getchar();\n      }\n      x=0;\n      while(c&gt;='0'&amp;&amp;c&lt;='9') {\n    x=x*10+(c-'0');\n    c=getchar();\n      }\n      x*=f;\n      return *this;\n    }\n    Reader&amp; operator &gt;&gt; (char&amp; c){\n      c=getchar();\n      while (c=='\\n'||c ==' ')c=getchar();\n      return *this;\n    }\n    Reader&amp; operator &gt;&gt;(char* str) {\n      int len=0;\n      char c=getchar();\n      while (c=='\\n'||c==' ')c=getchar();\n      while (c!='\\n'&amp;&amp;c!=' '){\n    str[len++]=c;\n    c=getchar();\n      }\n      str[len]='\\0';\n      return *this;\n    }\n    Reader(){}\n  }cin;\n  const char endl = '\\n';\n  struct Writer {\n    template&lt;typename T&gt;\n    Writer&amp;operator &lt;&lt; (T x){\n      if(x==0){putchar('0');return *this; }\n      if(x&lt;0){putchar('-');x=-x; }\n      static int sta[45];\n      int top=0;\n      while(x){sta[++top]=x%10;x/=10;}\n      while(top){putchar(sta[top]+'0');--top;}\n      return *this;\n    }\n    Writer&amp;operator&lt;&lt;(char c){\n      putchar(c);\n      return *this;\n    }\n    Writer&amp;operator&lt;&lt;(char* str) {\n      int cur=0;\n      while (str[cur])putchar(str[cur++]);\n      return *this;\n    }\n    Writer&amp;operator&lt;&lt;(const char* str) {\n      int cur=0;\n      while(str[cur])putchar(str[cur++]);\n      return*this;\n    }\n    Writer(){}\n  }cout;\n} // namespace Fastio\n#define cin Fastio :: cin\n#define cout Fastio :: cout\n#define endl Fastio :: endl\n/* --------------- fast io --------------- */ // end\n</code></pre>"},{"location":"my%20past/OI/Game%20with%20Marbles%20%28Hard%20Version%29/","title":"CF1914E2","text":""},{"location":"my%20past/OI/Game%20with%20Marbles%20%28Hard%20Version%29/#_1","title":"\u9898\u610f","text":"<p>Alice\u548cBob\u5206\u522b\u6709\u4e00\u4e9b\u77f3\u5934\uff0c\u77f3\u5934\u4e00\u5171\u6709 \\(n\\) \u79cd\u4e0d\u540c\u989c\u8272\uff0cAlice\u6709 \\(a_i\\) \u4e2a\u7b2c \\(i\\) \u79cd\u77f3\u5934\uff0cBob\u6709 \\(b_i\\) \u4e2a\u7b2c \\(i\\) \u79cd\u77f3\u5934\u3002</p> <p>\u6bcf\u56de\u5408(Alice\u5148\u624b)\u53ef\u4ee5\u9009\u62e9\u4e00\u79cd\u989c\u8272\u77f3\u5934\uff0c\u4e22\u5f03\u81ea\u5df1\u7684\u4e00\u4e2a\u77f3\u5934\uff0c\u5e76\u8ba9\u5bf9\u65b9\u4e22\u5f03\u6240\u6709\u8fd9\u79cd\u989c\u8272\u7684\u77f3\u5934\u3002\u5f53\u4e24\u4eba\u624b\u4e2d\u6ca1\u6709\u76f8\u540c\u989c\u8272\u77f3\u5934\u65f6\uff0c\u6e38\u620f\u7ed3\u675f\u3002</p> <p>\u5bf9\u4e8e\u4e00\u573a\u6e38\u620f\uff0c\u5206\u6570\u4e3aAlice\u624b\u4e2d\u77f3\u5934\u4e0eBob\u77f3\u5934\u7684\u5dee\u503c\uff0c\u8bb0\u4e3a \\(A-B\\)\u3002Alice\u5e0c\u671b\u5206\u6570\u6700\u5927\u5316\uff0cBob\u5e0c\u671b\u5206\u6570\u6700\u5c0f\u5316\uff0c\u95ee\u6700\u7ec8\u5f97\u5206\u3002</p>"},{"location":"my%20past/OI/Game%20with%20Marbles%20%28Hard%20Version%29/#_2","title":"\u601d\u8def","text":"<p>\u5bf9\u4e8e\u4e24\u4e2a\u4eba\u6765\u8bf4\uff0c\u4ed6\u4eec\u90fd\u5e0c\u671b\u6bcf\u56de\u5408\u53ef\u4ee5\u9009\u62e9\u5bf9\u65b9\u6570\u91cf\u5c3d\u53ef\u80fd\u591a\u7684\u77f3\u5934\u4e22\u6389\uff0c\u5e76\u4e14\u81ea\u5df1\u7684\u8fd9\u79cd\u77f3\u5934\u6570\u91cf\u4e5f\u5c3d\u53ef\u80fd\u5927\u3002\u8fd9\u6837\u65e2\u53ef\u4ee5\u4fdd\u62a4\u81ea\u5df1\u7684\u8fd9\u79cd\u77f3\u5934\u4e0d\u88ab\u5bf9\u65b9\u4e22\u6389\uff0c\u53c8\u80fd\u6700\u5927\u9650\u5ea6\u5730\u524a\u51cf\u5bf9\u65b9\u77f3\u5934\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e24\u4eba\u5e0c\u671b\u5148\u9009\u62e9 \\(a_i+b_i\\) \u6700\u5927\u7684\u77f3\u5934\u3002</p> <p>\u5177\u4f53\u6765\u8bf4\uff0c\u5bf9\u4e8e\u5148\u624b\u7684\u4e00\u65b9\uff0c\u5047\u8bbe\u6709 \\(i\\) \u548c \\(j\\) \u989c\u8272\u77f3\u5b50\uff0c\u6ee1\u8db3 \\(a_i+b_i\\geq a_j+b_j\\)\uff0c\u5982\u679c\u5148\u624b\u65b9\u5148\u9009\u62e9 \\(j\\) \u989c\u8272\u77f3\u5b50\uff0c\u540e\u624b\u65b9\u9009\u62e9 \\(i\\) \u989c\u8272\u77f3\u5b50\u662f\u66f4\u4f18\u7684\u7b56\u7565\uff0c\u90a3\u4e48\u6700\u7ec8\u5bf9\u5f97\u5206\u8d21\u732e\u4e3a \\((a_j-1+0)-(b_i-1+0)=a_j-b_i\\)\u3002\u800c\u5148\u624b\u65b9\u9009\u62e9 \\(i\\) \u989c\u8272\u77f3\u5b50\u7684\u8d21\u732e\u4e3a \\(a_i-b_j\\)\u3002\u7531\u5047\u8bbe\u53ef\u77e5\uff0c\\(a_i-b_j\\geq a_j-b_i\\)\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u79cd\u7b56\u7565\u4e0d\u662f\u6700\u597d\u7684\u7b56\u7565\u3002</p> <p>\u6240\u4ee5\uff0c\u5bf9\u4e8e\u5148\u624b\u65b9(Alice)\uff0c\u4e00\u5b9a\u5148\u9009 \\(a_i+b_i\\) \u6700\u5927\u7684\u4e00\u79cd\u77f3\u5b50\u3002 \u5bf9\u4e8e\u540e\u624b\u65b9(Bob)\uff0c\u5728\u4e00\u4e2a\u56de\u5408\u540e\u53d8\u4e3a\u5148\u624b\u65b9\uff0c\u56e0\u6b64\u91c7\u53d6\u540c\u6837\u7b56\u7565\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5df2\u7ecf\u77e5\u9053\uff0c\u53ea\u8981\u5c06\u6bcf\u79cd\u77f3\u5934\u6309\u7167 \\(a_i+b_i\\) \u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u4f9d\u6b21\u9009\u62e9\u8ba1\u7b97\u5f97\u5206\uff0c\u5f97\u5230\u7684\u7ed3\u679c\u5c31\u662f\u6211\u4eec\u60f3\u8981\u7684\u7b54\u6848\u3002</p> <p>\u8bb0\u5f97\u5f00 long long \u3002</p>"},{"location":"my%20past/OI/Game%20with%20Marbles%20%28Hard%20Version%29/#code","title":"Code","text":"<pre><code>#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=2e5+10;\nstruct node{\n    int a,b,c;\n}q[N];\nint T,n;\nbool cmp(node x,node y){\n    return x.c&gt;y.c;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;T);\n    while(T--){\n        scanf(\"%lld\",&amp;n);\n        for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;q[i].a);\n        for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;q[i].b),q[i].c=q[i].b+q[i].a;\n        sort(q+1,q+n+1,cmp);\n        int sum=0;\n        for(int i=1;i&lt;=n;++i){\n            if(i&amp;1){\n                sum+=q[i].a-1;\n            }else{\n                sum-=q[i].b-1;\n            }\n        }\n        printf(\"%lld\\n\",sum);\n    }\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/MST/","title":"\u6700\u5c0f\u751f\u6210\u6811MST","text":"<p>\u57fa\u7840\u65b9\u6cd5\u6709\\(Kruskal\\),\\(Prim\\)\u548c\\(B\\)\u7b97\u6cd5\uff0c\u5c31\u4e0d\u591a\u8bf4\u4e86\u3002</p> <p>P2573</p> <p>\u6ce8\u610f\u5230\u8fd9\u662f\u4e2a\u6709\u5411\u56fe\uff0c\u6240\u4ee5\u4e0d\u80fd\u76f4\u63a5\u7684\u8dd1\\(kruskal\\).</p> <p>\u7b2c\u4e00\u95ee\u5c31\u76f4\u63a5\\(dfs\\)\u6c42\u51fa\u70b9\u6570\uff0c\u6ce8\u610f\u6211\u4eec\u53ea\u8981\\(h[u]\\geq h[v]\\)\u7684\u8fb9\u3002\u5e76\u4e14\uff0c\u8981\u5c06\u6bcf\u4e2a\u70b9\u62d3\u5c55\u5230\u7684\u8fb9\u8bb0\u5f55\u4e0b\u6765\uff0c\u4f5c\u4e3a\u7b2c\u4e8c\u95ee\u7684\u65b0\u56fe\u3002</p> <p>\u7b2c\u4e8c\u95ee\u4e2d\uff0c\u6211\u4eec\u8981\u5c06\u8fb9\u6309\u7ec8\u70b9\u9ad8\u5ea6\u4e3a\u7b2c\u4e00\u5173\u952e\u5b57\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\uff0c\u8fb9\u6743\u4e3a\u7b2c\u4e8c\u5173\u952e\u5b57\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> <p>\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u53ea\u6709\u8fd9\u6837\u624d\u5bf9\uff0c\u8003\u8651\u8fd9\u7ec4\u6570\u636e~~made by AKonjac_~~</p> <pre><code>4 4\n4 3 2 1\n1 3 1000000001\n1 2 1000000004\n2 3 1000000002\n2 4 1000000003\n</code></pre> <p>\u5982\u679c\u53ea\u6309\u8fb9\u6743\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u751f\u6210\u7684\u6700\u5c0f\u751f\u6210\u6811\u65e0\u6cd5\u5230\u8fbe\\(2\\)\u53f7\u70b9\uff0c\u6240\u4ee5\u9519\u8bef\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6709\u5411\u751f\u6210\u6811\u4e00\u5b9a\u8054\u901a\uff0c\u5c31\u8981\u6309\u7167\u7ec8\u70b9\u4ece\u5927\u5230\u5c0f\u7684\u987a\u5e8f\u66f4\u65b0\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define ll long long \nusing namespace std;\nconst int N=1e5+10,M=1e6+10;\nstruct edge{\n    int u,v,w,nxt;\n}e[M&lt;&lt;1],E[M&lt;&lt;1];\nint fa[N],vis[N],head[N],Head[N],h[N];\nint cnt,Cnt,tot,nod,u,v,w,n,m;\nll ans;\nint getfa(int u){\n    return fa[u]==u?u:fa[u]=getfa(fa[u]);\n}\nvoid add(int u,int v,int w){\n    e[++cnt].u=u,e[cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid Add(int u,int v,int w){\n    E[++Cnt].u=u,E[Cnt].v=v,E[Cnt].w=w,E[Cnt].nxt=Head[u],Head[u]=Cnt;\n}\nvoid dfs(int u){\n    vis[u]=1;++tot;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int u=e[i].u,v=e[i].v,w=e[i].w;\n        Add(u,v,w);\n        if(!vis[v]) dfs(v);\n    }\n} \nbool Cmp(edge a,edge b){\n    if(h[a.v]==h[b.v]) return a.w&lt;b.w;\n    return h[a.v]&gt;h[b.v];\n}\nint main(){\n    memset(head,-1,sizeof head);cnt=-1;\n    memset(Head,-1,sizeof Head);Cnt=-1;\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i) scanf(\"%d\",&amp;h[i]);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\n        if(h[u]&gt;=h[v]) add(u,v,w);\n        if(h[u]&lt;=h[v]) add(v,u,w);\n    }\n    dfs(1);\n    sort(E,E+Cnt+1,Cmp);nod=0;\n    for(int i=1;i&lt;=n;++i) fa[i]=i;\n    for(int i=0;i&lt;=Cnt;++i){\n        int u=E[i].u,v=E[i].v; ll w=(ll)E[i].w;\n        int uu=getfa(u),vv=getfa(v);\n        if(uu!=vv){\n            fa[uu]=vv;\n            ans+=w;++nod;\n        }\n        if(nod&gt;=tot-1) break;\n    }\n    printf(\"%d %lld\",tot,ans);\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/NOI%20Online%202022/","title":"NOI Online 2022","text":""},{"location":"my%20past/OI/NOI%20Online%202022/#_1","title":"\u63d0\u9ad8\uff1a","text":"<p>\u4f30\u8ba150+10+10</p> <p>\u6c11\u95f4\u6570\u636e100+30+10</p> <p>\u6ca1\u60f3\u5230\u778e\u5199\u7684\u4e3b\u5e2d\u6811\u4e5f\u80fd\u8fc7...</p> <p>~~\u8bdd\u8bf4\u4e3a\u4ec0\u4e48\u6bcf\u6b21\u6211\u90fd\u88ab\u4eba\u540a\u625310pts~20pts\u5462~~</p> <p>update:2022.3.31</p> <p>\u603b\u5206140\uff0c\u548c\u4f30\u7684\u5206\u4e00\u6837\u3002</p> <p>~~\u7ec8\u4e8e\u6ca1\u6709\u88ab\u4eba\u540a\u6253\uff0c\u62ff\u4e86\u4e2aTJ\u7b2c\u4e8c\u3002~~</p>"},{"location":"my%20past/OI/NOI%20Online%202022/#_2","title":"\u666e\u53ca\uff1a","text":"<p>\u76f4\u63a5\u6446\u70c2\uff0c\u4f30\u8ba1100+60</p> <p>updata:2022.3.31</p> <p>\u603b\u5206145.</p>"},{"location":"my%20past/OI/P1633/","title":"P1633","text":"<p>\u6211\u4eec\u53ef\u4ee5\u8bbe\u4e00\u4e2a\u4e94\u7ef4\u7684\u72b6\u6001\uff0cf[i][j][k][l][0/1],\u8868\u793aX\u4e2d\u6709i\u4e2a1\uff0cY\u4e2d\u6709j\u4e2a1\uff0cZ\u4e2d\u6709k\u4e2a1\uff0c\u5f53\u524d\u6bd4\u8f83\u5230\u4e86\u7b2cl\u4f4d\uff0c\u4e14Z\u7684\u7b2cl\u4f4d\u662f0\u8fd8\u662f1.</p> <p>\u5bf9\u4e8eX\u548cY\u7684\u7b2cl\u4f4d\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u5c31\u662f\u586b0\u62161\uff0c\u6240\u4ee5\u6709\u5982\u4e0b\u8f6c\u79fb\uff1a</p> <p><pre><code>f[i][j][k][l][0]+0          -&gt;f[i][j][k][l+1][0]   //0 0\n                +(1ll&lt;&lt;l-1) -&gt;f[i][j+1][k+1][l+1][0]    //0 1\n                +(1ll&lt;&lt;l-1) -&gt;f[i+1][j][k+1][l+1][0]    //1 0\n                +(1ll&lt;&lt;l)   -&gt;f[i+1][j+1][k+1][l+1][1]  //1 1\n\nf[i][j][k][l][1]+0          -&gt;f[i][j][k][l+1][0]    //0 0\n                +(1ll&lt;&lt;l-1) -&gt;f[i][j+1][k][l+1][1]      //0 1\n                +(1ll&lt;&lt;l-1) -&gt;f[i+1][j][k][l+1][1]      //1 0\n                +(1ll&lt;&lt;l)   -&gt;f[i+1][j+1][k+1][l+1][1]  //1 1\n</code></pre> \u6ce8\u610f\u7ed9\u7b2cl\u4f4d\u52a0\u4e2a1\u76f8\u5f53\u4e8e\u7ed9\u539f\u6570\u52a0\\(2^{l-1}\\),\u800c\u4e0d\u662f\\(2^l\\)</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e1111\u548c11111\u8fd9\u4e24\u79cd\u7b2cl\u4f4d\u5206\u522b\u662f0\u548c1\u7684\u60c5\u51b5\uff1a~~(01111\u524d\u5bfc\u96f6\u4e0d\u7528\u7ba1\uff0c\u53ea\u662f\u8868\u793a\u7b2cl\u4f4d\u4e3a0\u800c\u5df2)~~</p> <p><pre><code>//\u5de6-&gt;\u53f3\u4e3a\u4f4e\u4f4d-&gt;\u9ad8\u4f4d\n    l        l\n11110 -&gt;111100\ni   0\nj   0\n11110 -&gt;111110 \ni   0\nj   1       \n11110 -&gt;111110\ni   1\nj   0       \n11110 -&gt;111111\ni   1\nj   1\n\n    l        l\n11111 -&gt;111110\ni   0\nj   0\n11111 -&gt;111101 \ni   0\nj   1       \n11111 -&gt;111101\ni   1\nj   0       \n11111 -&gt;111111\ni   1\nj   1\n</code></pre> \u5206\u522b\u52a0\u4e0a\u8d21\u732e\u4ee5\u540e\uff0c\u518d\u53d6\u4e2a\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002</p> <p>\u8fb9\u754c\u662f\\(f[0][0][0][1][0]=0\\),l\u4ece1\u5f00\u59cb.</p> <p>\u5bf9\u8f93\u5165\u7684a,b,c\u6c42\u51fall,na,nb,nc\u90a3\u4e48\u6700\u7ec8\u7b54\u6848\u4e3a\\(\\min(f[na][nb][nc][0,1,...,ll][0,1])\\)</p> <p>\u6ce8\uff1a</p> <p>\\(f[i][j][k][l][0]+2^{l-1}\\)\u4e0d\u80fd\u8f6c\u79fb\u7ed9\\(f[i][j+1][k+1][l][1]\\),\u800c\u662f\u8f6c\u79fb\u7ed9\\(f[i][j][k+1][l+1][0]\\)</p> <p>\u56e0\u4e3al\u6ca1\u6709\u79fb\u52a8\u4f4d\u7f6e\uff0c\u4e0b\u6b21\u8fd8\u662f\u5728\u7b2cl\u4f4d\u52a01\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0X\u6216Y\u540c\u4e00\u4f4d\u52a0\u4e86\u4e24\u6b211\uff0c\u51fa\u73b0\u9519\u8bef\u3002</p> <p>~~\u5176\u5b9el\u90a3\u4e00\u7ef4\u53ef\u4ee5\u6eda\u5b58\u7684\uff0c\u4f46\u6211\u61d2~~</p> <p>Code: </p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=33,INF=5e18;\nint f[N][N][N][N][2];\nint n,a,b,c,na,nb,nc,la,lb,lc,ll;\nvoid init() {\n    memset(f,0x3f,sizeof f);\n    na=0;nb=0;nc=0;la=0;lb=0;lc=0;\n    while(a) {\n        if(a&amp;1)na++;\n        la++;\n        a&gt;&gt;=1;\n    }\n    while(b) {\n        if(b&amp;1)nb++;\n        lb++;\n        b&gt;&gt;=1;\n    }\n    while(c) {\n        if(c&amp;1)nc++;\n        lc++;\n        c&gt;&gt;=1;\n    }\n    ll=max(la,max(lb,lc));\n}\nvoid work() {\n    f[0][0][0][1][0]=0;\n    for(int i=0; i&lt;=na; ++i) {\n        for(int j=0; j&lt;=nb; ++j) {\n            for(int k=0; k&lt;=nc; ++k) {\n                for(int l=1; l&lt;=ll; ++l) {\n                    f[i][j][k][l+1][0]=min(f[i][j][k][l+1][0],min(f[i][j][k][l][0],f[i][j][k][l][1]));\n                    f[i+1][j+1][k+1][l+1][1]=min(f[i+1][j+1][k+1][l+1][1],min(f[i][j][k][l][0],f[i][j][k][l][1])+(1ll&lt;&lt;l));//\u6ce8\u610f\u5199\u6cd5\uff0c1ll&lt;&lt;l\u8981\u52a0\u62ec\u53f7\n\n                    f[i][j+1][k+1][l+1][0]=min(f[i][j+1][k+1][l+1][0],f[i][j][k][l][0]+(1ll&lt;&lt;l-1));\n                    f[i+1][j][k+1][l+1][0]=min(f[i+1][j][k+1][l+1][0],f[i][j][k][l][0]+(1ll&lt;&lt;l-1));\n                    f[i][j+1][k][l+1][1]=min(f[i][j+1][k][l+1][1],f[i][j][k][l][1]+(1ll&lt;&lt;l-1));\n                    f[i+1][j][k][l+1][1]=min(f[i+1][j][k][l+1][1],f[i][j][k][l][1]+(1ll&lt;&lt;l-1));             \n                }\n            }\n        }\n    }\n}\nsigned main() {\n    scanf(\"%lld\",&amp;n);\n    for(int i=1; i&lt;=n; ++i) {\n        scanf(\"%lld%lld%lld\",&amp;a,&amp;b,&amp;c);\n        init();//\u521d\u59cb\u5316\n        work();//dp\n        int ans=INF;\n        for(int i=0; i&lt;=ll; ++i) {\n            int tmp1=f[na][nb][nc][i][0],cnt1=0;\n            int tmp2=f[na][nb][nc][i][1],cnt2=0;\n            while(tmp1&gt;0)tmp1&gt;&gt;=1,cnt1++;\n            while(tmp2&gt;0)tmp2&gt;&gt;=1,cnt2++;\n            if(cnt1&lt;=ll &amp;&amp; cnt1&gt;0)ans=min(ans,f[na][nb][nc][i][0]);//\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u4e2d\u53d6\u6700\u5c0f\u503c\n            if(cnt2&lt;=ll &amp;&amp; cnt2&gt;0)ans=min(ans,f[na][nb][nc][i][1]);\n        }\n        if(ans==INF)printf(\"-1\\n\");\n        else printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/STL/","title":"STL","text":""},{"location":"my%20past/OI/STL/#vector","title":"vector","text":""},{"location":"my%20past/OI/STL/#_1","title":"\u6a21\u677f\uff08\u57fa\u672c\u64cd\u4f5c\uff09","text":"<pre><code>#include &lt;vector&gt;\n#include &lt;iostream&gt;\n#include &lt;algorithm&gt;\nusing namespace std;\n\nint main()\n{\n    //\u987a\u5e8f\u8bbf\u95ee\n    vector&lt;int&gt;obj;\n    for(int i=0;i&lt;10;i++)\n    {\n        obj.push_back(i);   \n    } \n\n    cout&lt;&lt;\"\u76f4\u63a5\u5229\u7528\u6570\u7ec4\uff1a\"; \n    for(int i=0;i&lt;10;i++)//\u65b9\u6cd5\u4e00 \n    {\n        cout&lt;&lt;obj[i]&lt;&lt;\" \";\n    }\n\n    cout&lt;&lt;endl; \n    cout&lt;&lt;\"\u5229\u7528\u8fed\u4ee3\u5668\uff1a\" ;\n    //\u65b9\u6cd5\u4e8c\uff0c\u4f7f\u7528\u8fed\u4ee3\u5668\u5c06\u5bb9\u5668\u4e2d\u6570\u636e\u8f93\u51fa \n    vector&lt;int&gt;::iterator it;//\u58f0\u660e\u4e00\u4e2a\u8fed\u4ee3\u5668\uff0c\u6765\u8bbf\u95eevector\u5bb9\u5668\uff0c\u4f5c\u7528\uff1a\u904d\u5386\u6216\u8005\u6307\u5411vector\u5bb9\u5668\u7684\u5143\u7d20 \n    for(it=obj.begin();it!=obj.end();it++)\n    {\n        cout&lt;&lt;*it&lt;&lt;\" \";\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/STL/#vector-lower_boundupper_bound","title":"vector + lower_bound(upper_bound)","text":"<pre><code>//\u67e5\u8be2\n    int pl=(lower_bound(v[c].begin(),v[c].end(),l)-v[c].begin());\n//\u4fee\u6539\n    //1.lower_bound\u8fd4\u56de\u5730\u5740\uff0c\u6240\u4ee5\u76f4\u63a5\u53d6\u503c\n    (*lower_bound(a.begin(),a.end(),x))++;\n\n    //2.\u5c06\u4f4d\u7f6e\u53d6\u51fa\u6765\uff0c\u518d\u505a\u66f4\u6539\uff0c\u66f4\u76f4\u89c2\n    int pl=lower_bound(a.begin(),a.end(),x)-a.begin();\n    a[pl]++;\n</code></pre> <p>P3939</p> <p>\u76f4\u63a5\u7528vector&lt; int&gt; v[N]\u4fdd\u5b58\u503c\u57df\u4e2d\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u4f4d\u7f6e\uff0c\u67e5\u8be2\u548c\u4fee\u6539\u90fd\u7528\u4e8c\u5206\u67e5\u627e\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;vector&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=3e5+10;\nvector&lt;int&gt; v[N];\nint n,m,l,r,c,x,op;\nint a[N];\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n    for(int i=1;i&lt;=n;++i){\n        v[a[i]].push_back(i);\n    }\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%d\",&amp;op);\n        if(op==1){\n            scanf(\"%d%d%d\",&amp;l,&amp;r,&amp;c);\n            int pl=(lower_bound(v[c].begin(),v[c].end(),l)-v[c].begin());\n            int pr=(upper_bound(v[c].begin(),v[c].end(),r)-v[c].begin()-1);\n            printf(\"%d\\n\",pr-pl+1);\n        }else{\n            scanf(\"%d\",&amp;x);\n            int tx=a[x];\n            int ty=a[x+1];\n            if(tx!=ty){\n                int pl=lower_bound(v[tx].begin(),v[tx].end(),x)-v[tx].begin();\n                int pr=lower_bound(v[ty].begin(),v[ty].end(),x+1)-v[ty].begin();\n                v[tx][pl]++;\n                v[ty][pr]--;\n                //(*lower_bound(v[tx].begin(),v[tx].end(),x))++;\n                //(*lower_bound(v[ty].begin(),v[ty].end(),x+1))--;\n                swap(a[x],a[x+1]);\n            }\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/STL/#stl_1","title":"STL\u8fed\u4ee3\u5668","text":"<p>Iterator\uff08\u8fed\u4ee3\u5668\uff09\u6a21\u5f0f\u53c8\u79f0Cursor\uff08\u6e38\u6807\uff09\u6a21\u5f0f\uff0c\u7528\u4e8e\u63d0\u4f9b\u4e00\u79cd\u65b9\u6cd5\u987a\u5e8f\u8bbf\u95ee\u4e00\u4e2a\u805a\u5408\u5bf9\u8c61\u4e2d\u5404\u4e2a\u5143\u7d20, \u800c\u53c8\u4e0d\u9700\u66b4\u9732\u8be5\u5bf9\u8c61\u7684\u5185\u90e8\u8868\u793a\u3002\u6216\u8005\u8fd9\u6837\u8bf4\u53ef\u80fd\u66f4\u5bb9\u6613\u7406\u89e3\uff1aIterator\u6a21\u5f0f\u662f\u8fd0\u7528\u4e8e\u805a\u5408\u5bf9\u8c61\u7684\u4e00\u79cd\u6a21\u5f0f\uff0c\u901a\u8fc7\u8fd0\u7528\u8be5\u6a21\u5f0f\uff0c\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u5728\u4e0d\u77e5\u9053\u5bf9\u8c61\u5185\u90e8\u8868\u793a\u7684\u60c5\u51b5\u4e0b\uff0c\u6309\u7167\u4e00\u5b9a\u987a\u5e8f\uff08\u7531iterator\u63d0\u4f9b\u7684\u65b9\u6cd5\uff09\u8bbf\u95ee\u805a\u5408\u5bf9\u8c61\u4e2d\u7684\u5404\u4e2a\u5143\u7d20\u3002</p> <p>\u8fed\u4ee3\u5668\u7684\u4f5c\u7528\uff1a\u80fd\u591f\u8ba9\u8fed\u4ee3\u5668\u4e0e\u7b97\u6cd5\u4e0d\u5e72\u6270\u7684\u76f8\u4e92\u53d1\u5c55\uff0c\u6700\u540e\u53c8\u80fd\u65e0\u95f4\u9699\u7684\u7c98\u5408\u8d77\u6765\uff0c\u91cd\u8f7d\u4e86* \uff0c\uff0b\uff0b\uff0c\uff1d\uff1d\uff0c\uff01\uff1d\uff0c\uff1d\u8fd0\u7b97\u7b26\u3002\u7528\u4ee5\u64cd\u4f5c\u590d\u6742\u7684\u6570\u636e\u7ed3\u6784\uff0c\u5bb9\u5668\u63d0\u4f9b\u8fed\u4ee3\u5668\uff0c\u7b97\u6cd5\u4f7f\u7528\u8fed\u4ee3\u5668\uff1b\u5e38\u89c1\u7684\u4e00\u4e9b\u8fed\u4ee3\u5668\u7c7b\u578b\uff1aiterator\u3001const_iterator\u3001reverse_iterator\u548cconst_reverse_iterator.</p>"},{"location":"my%20past/OI/Trie/","title":"Trie","text":""},{"location":"my%20past/OI/Trie/#0-1-trie","title":"0-1 Trie","text":"<p>\u5e38\u89c1\u5e94\u7528: \u5f02\u6216\u7c7b\u95ee\u9898</p> <p>CF888G</p> <p>\u9898\u76ee\u8981\u6c42\u7528\u4e24\u4e2a\u6743\u503c\u76f8\u4e92\u5f02\u6216\u5f97\u51fa\u7684\u8fb9\u6c42\u6700\u5c0f\u751f\u6210\u6811\uff0c\u4e00\u5171\\(\\frac{n(n-1)}{2}\\)\u6761\u8fb9\u3002</p> <p>\u5982\u679c\u6211\u4eec\u5bf9\u4e8e\\(n\\)\u4e2a\u6743\u503c\u5efa\u51fa\\(0-1 Trie \\(\u6811\uff0c\u6211\u4eec\u4f1a\u53d1\u73b0\\)u,v\\)\u7684\u5f02\u6216\u503c\u5c31\u662f\u4ece\\(lca_{u,v}\\)\u5206\u522b\u5230\\(u,v\\)\u6240\u8868\u793a\u7684\u6570\u7684\u5f02\u6216\u503c(\u56e0\u4e3a\\(lca\\)\u4e4b\u524d\u5f02\u6216\u6ca1\u4e86)\uff0c\u90a3\u4e48\u6211\u4eec\u6240\u6c42\u7684\u6070\u597d\u8f6c\u5316\u4e3a\u6c42\u51fa\u6240\u6709\u53ef\u80fd\u7684\\(lca\\)\u3002</p> <p>\u770b\u56fe\u4f1a\u53d1\u73b0\uff0c\u5982\u679c\u70b9\u6743\u503c\u4e92\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\\(lca\\)\u6070\u6709\\(n-1\\)\u4e2a\uff0c\u6ee1\u8db3\u751f\u6210\u6811\u7684\u6761\u4ef6\u3002\u5982\u679c\u6709\u76f8\u540c\u7684\u60c5\u51b5\uff0c\u90a3\u4e48\u76f8\u5f53\u4e8e\u591a\u51fa\u4e86\u51e0\u6761\u8fb9\u6743\u4e3a\\(0\\)\u7684\u8fb9\uff0c\u7531\u4e8e\u4e00\u5b9a\u8981\u9009\uff0c\u6545\u4e0d\u5f71\u54cd\u6700\u7ec8\u7b54\u6848\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u76f4\u63a5\u5728\\(Trie\\)\u6811\u4e0a\\(dfs\\),\u5982\u679c\u78b0\u5230\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\\(lca\\),\u5c31\u641c\u7d22\u4e00\u904d\u5b50\u6811\uff0c\u5f97\u51fa\u7b54\u6848\u3002(\u641c\u7d22\u51fd\u6570\u4f5c\u7528\u662f\u5728\u4e24\u4e2a\u4e0d\u540c\u5b50\u6811\u4e2d\u5206\u522b\u627e\u51fa\u4e00\u4e2a\u53f6\u5b50\u8282\u70b9\uff0c\u4f7f\u5176\u5f02\u6216\u548c\u6700\u5c0f)</p> <p>\u800c\u641c\u7d22\u51fd\u6570\\(find\\)\u4e2d\uff0c\u8981\u5206\u60c5\u51b5\u8ba8\u8bba\u3002</p> <ol> <li>\u5f53\u524d\u6df1\u5ea6\u65e0\u8d21\u732e</li> </ol> <p>\u5373\u4ece\u5f53\u524d\u8282\u70b9\u5230\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8fb9\u76f8\u540c\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662f\u4e24\u4e2a\u5b50\u6811\u7684\u7b54\u6848\u53d6\\(\\min\\).</p> <ol> <li>\u5f53\u524d\u6df1\u5ea6\u6709\u8d21\u732e</li> </ol> <p>\u5373\u4e24\u6761\u8fb9\u4e0d\u540c\uff0c\u90a3\u4e48\u7b54\u6848\u662f\u4e24\u5b50\u6811\u7b54\u6848\u53d6\\(\\min\\)\u52a0\u4e0a\\(2^{dep}\\).</p> <p>\u5982\u679c\u6ca1\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u4e24\u6761\u8fb9\uff0c\u5c31\u8fd4\u56de\\(INF\\).</p> <p>\u5982\u679c\u4e24\u79cd\u60c5\u51b5\u4e0b\u4e24\u4e2a\u5b50\u6811\u90fd\u662f\\(INF\\),\u5c31\u8bf4\u660e\u4e24\u4e2a\u5b50\u6811\u5df2\u7ecf\u662f\u53f6\u5b50\u8282\u70b9\uff0c\u5219\u8fd4\u56de\\(0\\).</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=2e5+10,DEP=30,M=N*DEP,INF=1e18;\nint n,m,tot,rt,ans;\nint a[N];\nint T[M][2];\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nvoid Insert(int now,int x){\n    for(int i=DEP;i&gt;=0;--i){\n        int id=(x&gt;&gt;i)&amp;1;\n        if(!T[now][id]) T[now][id]=++tot;\n        now=T[now][id];\n    }\n}\nint Find(int r1,int r2,int dep){\n    if(dep&lt;0) return 0;\n    int a1=INF,a2=INF,a=-1;\n    if(T[r1][0] &amp;&amp; T[r2][0]) a1=Find(T[r1][0],T[r2][0],dep-1);\n    if(T[r1][1] &amp;&amp; T[r2][1]) a2=Find(T[r1][1],T[r2][1],dep-1);\n    a=min(a1,a2);\n    if(a!=INF) return a;\n    a1=INF,a2=INF,a=-1;\n    if(T[r1][0] &amp;&amp; T[r2][1]) a1=Find(T[r1][0],T[r2][1],dep-1)+(1ll&lt;&lt;dep);\n    if(T[r1][1] &amp;&amp; T[r2][0]) a2=Find(T[r1][1],T[r2][0],dep-1)+(1ll&lt;&lt;dep);\n    a=min(a1,a2);\n    if(a!=INF) return a;\n    return 0;\n}\nvoid dfs(int x,int dep){\n    if(dep&lt;0) return;\n    if(T[x][0] &amp;&amp; T[x][1]) ans+=Find(T[x][0],T[x][1],dep-1)+(1ll&lt;&lt;dep);\n    if(T[x][0]) dfs(T[x][0],dep-1);\n    if(T[x][1]) dfs(T[x][1],dep-1);\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);rt=tot=ans=0;\n    for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;a[i]),Insert(rt,a[i]);\n    dfs(rt,DEP);\n    printf(\"%lld\",ans);\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/algorithm/","title":"algorithm","text":""},{"location":"my%20past/OI/algorithm/#_1","title":"\u4e8c\u5206\u67e5\u627e","text":"<p>1.lower_bound(\u8d77\u59cb\u5730\u5740\uff0c\u7ed3\u675f\u5730\u5740\uff0c\u8981\u67e5\u627e\u7684\u6570\u503c) \u8fd4\u56de\u7684\u662f\u6570\u503c \u7b2c\u4e00\u4e2a \u51fa\u73b0\u7684\u4f4d\u7f6e\u3002(\u7b2c\u4e00\u4e2a\u5927\u4e8e\u7b49\u4e8e \u6570\u503c \u7684\u6570\u7684\u4f4d\u7f6e)</p> <p>2.upper_bound(\u8d77\u59cb\u5730\u5740\uff0c\u7ed3\u675f\u5730\u5740\uff0c\u8981\u67e5\u627e\u7684\u6570\u503c) \u8fd4\u56de\u7684\u662f\u6570\u503c \u6700\u540e\u4e00\u4e2a \u51fa\u73b0\u7684\u4f4d\u7f6e\u3002(\u7b2c\u4e00\u4e2a\u5927\u4e8e \u6570\u503c \u7684\u6570\u7684\u4f4d\u7f6e)</p> <p>3.binary_search(\u8d77\u59cb\u5730\u5740\uff0c\u7ed3\u675f\u5730\u5740\uff0c\u8981\u67e5\u627e\u7684\u6570\u503c)  \u8fd4\u56de\u7684\u662f\u662f\u5426\u5b58\u5728\u8fd9\u4e48\u4e00\u4e2a\u6570\uff0c\u662f\u4e00\u4e2abool\u503c\u3002</p>"},{"location":"my%20past/OI/algorithm/#gcd","title":"gcd","text":"<p>__gcd(x,y)\u8f97\u8f6c\u76f8\u9664\u6cd5\u6c42\u4e24\u6570\u7684gcd</p>"},{"location":"my%20past/OI/algorithm/#unique","title":"unique","text":"<pre><code>int tot=unique(a+1,a+n+1)-a-1;//\u7b2c\u4e00\u79cd\uff0c\u5bf9\u6570\u7ec4\u76f4\u63a5\u53bb\u91cd\nint tot=unique(a+1,a+n+1,cmp)-a-1;//\u7b2c\u4e8c\u79cd\uff0c\u5bf9\u7ed3\u6784\u4f53\u53bb\u91cd\uff0c\u53ef\u4ee5\u81ea\u5b9a\u4e49\u5143\u7d20\u662f\u5426\u76f8\u7b49\uff0c\u6bd4\u5982\u53ea\u5224\u65ad\u7ed3\u6784\u4f53\u67d0\u4e00\u5143\u7d20\n</code></pre>"},{"location":"my%20past/OI/cstring/","title":"cstring","text":""},{"location":"my%20past/OI/cstring/#strcmp","title":"strcmp","text":"<p>\u6bd4\u8f83\u4e24\u4e2a\u5b57\u7b26\u4e32\uff0cstr1&gt;str2\u8fd4\u56de\u6b63\u6570\uff0cstr1==str2\u8fd4\u56de0,str1&lt; str2\u8fd4\u56de\u8d1f\u6570</p>"},{"location":"my%20past/OI/cstring/#sscanf","title":"sscanf","text":"<p>\u8bfb\u53d6\u5b57\u7b26\u4e32\u4e2d\u7684\u5b57\u7b26\u4e32(?)</p> <pre><code>//0.\u683c\u5f0f\nsscanf(a,\".......\",b);//a\u4e32\uff0c\u6b63\u5219\u8868\u8fbe\u5f0f\uff0cb\u4e32\n\n//1.\u8bfb\u53d6\u6307\u5b9a\u7684\u5b57\u7b26\u96c6\uff1a\nsscanf(a,\"%[a-z1-9A-Z]\",b);\n//2.\u8df3\u8fc7\u8bfb\u53d6\nsscanf(a,\"%*[]%*s%*d %s%[]%d\",b);\n\n//3.\u8bfb\u53d6\u6307\u5b9a\u4e00\u6bb5\u533a\u95f4\u7684\u5b57\u7b26\uff0c\u5c24\u5176\u662f\u4e00\u6574\u884c\u5e26\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u50cf\u8bfb\u53d6\u6bcf\u4e2a\u5c0f\u4e32\uff0c\u5c31\u8981\u5728\u6bcf\u4e2a\u7a7a\u683c\u5904\u6253\u6807\u8bb0'$'\nsscanf(a,\"%*[^$]$%[^ ]\",b);\n</code></pre>"},{"location":"my%20past/OI/cstring/#_1","title":"\u8f93\u5165\u8f93\u51fa","text":"<p>1.puts(),gets()\u5e26\u7a7a\u683c 2.scanf(),printf()\u4e0d\u5e26\u7a7a\u683c</p> <p>\u4e24\u79cd\u8f93\u5165\u78b0\u5230\u6362\u884c\u90fd\u7ed3\u675f</p>"},{"location":"my%20past/OI/dp/","title":"\u671f\u671bdp","text":"<p>P1850</p> <p>\u8bbe\\(f[i][j][0/1]\\)\u8868\u793a\u8003\u8651\u5230\u7b2c\\(i\\)\u4e2a\u6559\u5ba4\uff0c\u7528\u4e86\\(j\\)\u6b21\u4ea4\u6362\u6743\u5e76\u4e14\\(i\\)\u6362\u4e0e\u4e0d\u6362\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u6bcf\u6b21\u7684\u65b0\u8d21\u732e\u53ea\u7528\u8003\u8651\\(i\\)\u4e0e\\(i-1\\)\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u4ee5\u53ca\u4ed6\u4eec\u6210\u529f\u7684\u6982\u7387. <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define db double\nusing namespace std;\nconst int N=2200,V=330;\nconst double INF=1e18;\nint dis[N][N];\nint n,m,v,e,a,b,w;\ndb f[N][N][2];\nstruct room{\n    int c,d;db k;\n}s[N];\nvoid floyd(){\n    for(int i=1;i&lt;=v;++i)dis[i][i]=0;\n    for(int k=1;k&lt;=v;++k)\n        for(int i=1;i&lt;=v;++i)\n            for(int j=1;j&lt;=v;++j){\n                if(i==j)continue;\n                dis[i][j]=min(dis[i][j],dis[i][k]+dis[k][j]);\n            }\n\n}\nvoid init(){\n    memset(dis,0x3f,sizeof dis);\n    for(int i=0;i&lt;=n+1;++i)\n        for(int j=0;j&lt;=m+1;++j)\n            f[i][j][0]=f[i][j][1]=INF;\n}\ninline db Min(db a,db b){return a&lt;b?a:b;}\nint main(){\n    scanf(\"%d%d%d%d\",&amp;n,&amp;m,&amp;v,&amp;e);  \n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;s[i].c);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;s[i].d);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lf\",&amp;s[i].k);\n    init();\n\n    for(int i=1;i&lt;=e;++i){\n        scanf(\"%d%d%d\",&amp;a,&amp;b,&amp;w);\n        dis[a][b]=min(dis[a][b],w);\n        dis[b][a]=min(dis[b][a],w);\n    }\n    floyd();\n    f[1][0][0]=0.0;f[1][1][1]=0.0;\n\n    for(int i=2;i&lt;=n;++i){\n        for(int j=0;j&lt;=m;++j){\n            db kv=s[i-1].k,ku=s[i].k;\n            int uc=s[i].c,ud=s[i].d,vc=s[i-1].c,vd=s[i-1].d;\n            f[i][j][0]=Min(f[i][j][0],f[i-1][j][0]+1.0*1.0*(double)dis[vc][uc]);\n            f[i][j][0]=Min(f[i][j][0],f[i-1][j][1]+kv*(double)dis[vd][uc]+(1.0-kv)*(double)dis[vc][uc]);\n            if(j==0)continue;\n            f[i][j][1]=Min(f[i][j][1],f[i-1][j-1][0]+ku*(double)dis[vc][ud]+(1.0-ku)*(double)dis[vc][uc]);\n            f[i][j][1]=Min(f[i][j][1],f[i-1][j-1][1]+\n            ku*kv*(double)dis[vd][ud]+\n            kv*(1.0-ku)*(double)dis[vd][uc]+\n            ku*(1.0-kv)*(double)dis[vc][ud]+\n            (1.0-ku)*(1.0-kv)*(double)dis[vc][uc]);\n        }\n    }\n    db ans=INF;\n    for(int i=0;i&lt;=m;++i)ans=Min(ans,Min(f[n][i][0],f[n][i][1]));\n    printf(\"%.2lf\",ans);\n    return 0;\n} \n</code></pre></p>"},{"location":"my%20past/OI/dp/#dp_1","title":"\u8ba1\u6570dp","text":""},{"location":"my%20past/OI/dp/#_1","title":"\u5b57\u7b26\u4e32\u7c7b\u8ba1\u6570","text":"<p>P2679</p> <p>f[i][j][k][0/1]\u8868\u793aa\u4e32\u524di\u4f4d\u5339\u914db\u4e32\u524dj\u4f4d\uff0c\u7528\u4e86k\u4e2a\u5b50\u4e32\u4e14i\u4e0ej\u662f\u5426\u5339\u914d\u65f6\u7684\u7b54\u6848</p> <p>\u8f6c\u79fb\u65b9\u7a0b\uff1a <pre><code>//1.\nf[0][0][0][0]=1;\nf[1][0][0][0]=1;\nfor(i)\n  for(j)\n    for(k)\n            if(a[i]==b[j]){\n                f[i][j][k][1]=f[i-1][j-1][k][1]+f[i-1][j-1][k-1][1]+f[i-1][j-1][k-1][0];\n            }else{\n                f[i][j][k][1]=0;\n            }\n            f[i][j][k][0]=f[i-1][j][k][0]+f[i-1][j][t][1];\n//2.\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=m;++j)\n            for(int l=1;l&lt;=k;++l)f[i%2][j][l][1]=f[i%2][j][l][0]=0;\n        if(a[i-1]==b[0])f[i%2][1][1][1]=1;\n        for(int j=1;j&lt;=m;++j){\n            for(int l=1;l&lt;=k;++l){\n                if(a[i-1]==b[j-1]){\n                    f[i%2][j][l][1]=(f[i%2][j][l][1]+f[(i-1)%2][j-1][l-1][1]+f[(i-1)%2][j-1][l][1]+f[(i-1)%2][j-1][l-1][0])%P; \n                }else f[i%2][j][l][1]=0;\n                f[i%2][j][l][0]=(f[i%2][j][l][0]+f[(i-1)%2][j][l][1]+f[(i-1)%2][j][l][0])%P;\n            }\n        }\n    }\n</code></pre> * \u5c06\u7b2c\u4e00\u7ef4\u6eda\u52a8\u6389\u7684\u65b9\u6cd5\uff1a\u56e0\u4e3a\u53ea\u4e0e\u4e0a\u4e00\u5c42\u6709\u5173\uff0c\u6240\u4ee5\u4e24\u5c42\u5c31\u591f\uff0c\u4f7f\u7528i%2\u5224\u65ad\u3002</p> <p>\u6ce8\u610f\u9700\u8981\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u9700\u8981\u6e05\u96f6\u3002</p> <p>P2389</p> <p>\u4e0eP2679\u5341\u5206\u7c7b\u4f3c\u3002\u5c11\u4e86\u4e00\u7ef4\uff0c\u4e0d\u7528\u6eda\u52a8\u3002\u5e76\u4e14\u6210\u4e86\u53d6\u6700\u5927\u503c\u3002 \u7528f[i][j][0/1]\u8868\u793a\u7528\u4e86j\u6bb5\uff0c\u7b2ci\u4f4d\u662f\u5426\u53d6\u7684\u7b54\u6848\u3002 \u8f6c\u79fb\u65b9\u7a0b\uff1a <pre><code>    //memset(f,-0x3f,sizeof f);\n    f[0][0][0]=0;\n    f[0][0][1]=0;\n    //f[1][0][0]=0;\n    //f[1][0][1]=0;\n    int ans=0;\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=k;++j){\n            int max1=max(f[i-1][j][1],max(f[i-1][j-1][1],f[i-1][j-1][0]));\n            f[i][j][1]=max(f[i][j][1],max1+a[i]);\n            int max2=max(f[i-1][j][0],f[i-1][j][1]);\n            f[i][j][0]=max(f[i][j][0],max2);\n            ans=max(ans,max(f[i][j][0],f[i][j][1]));\n        }\n    }\n</code></pre> \u6ce8\u610f\u53d6\u503c\u53ef\u4ee5\u4e3a\u8d1f\uff0c\u6240\u4ee5\u8981\u5c06f\u8d4b\u503c\u6210\\(-\\infty\\),\u5e76\u548c0\u53bb\u53d6max\u3002</p> <p>~~\u6240\u4ee5\u4e0d\u5c31\u662f\u521d\u59cb\u5316\u4e3a\u96f6\u5417~~</p>"},{"location":"my%20past/OI/dp/#_2","title":"\u6570\u5b57\u7c7b\u8ba1\u6570","text":"<p>P7961</p> <p>1) \u7b2c\u4e09\u7ef4\u7ef4\u62a4\u6574\u4f53(\u52a0\u4e0a\u7b2c\u56db\u7ef4\u8fdb\u4f4d)\u7684\\(1\\)\u7684\u4e2a\u6570\u4e0d\u597d\uff0c\u56e0\u4e3a\u53ef\u80fd\u4f1a\u51fa\u73b0\u8f6c\u79fb\u65f6\u7b2c\u4e09\u4f4d\u51cf\u5c11\u7684\u60c5\u51b5\uff0c\u8fd9\u6837\u5c31\u53ef\u80fd\u6ea2\u51fa\u3002</p> <p>2) \u5feb\u901f\u5e42\u4e0d\u9700\u8981\uff0c\u76f4\u63a5\u9884\u5904\u7406\u5c31\u884c\u4e86\u3002</p> <p>3) \u8fd9\u79cd\u72b6\u6001\u8bbe\u8ba1\u7b2c\u4e00\u7ef4\u5230\\(m+1\\)\u5c31\u5df2\u7ecf\u5305\u542b\u4e86\u6240\u6709\u72b6\u6001\uff0c\u4e0d\u80fd\u518d\u5f80\u56de\u627e\u4e86\u3002</p> <p>\u6b63\u786e\u505a\u6cd5\u662f\u8bbe\\(f[i][j][p][l]\\)\u8868\u793a\u8003\u8651\u5b8c\u7b2c\\(i\\)\u4e2a\\(a_i\\)\uff0c\u4e00\u5171\u7528\u4e86\\(j\\)\u4e2a\\(a\\),\u5f53\u524d\u4e0d\u5305\u62ec\\(l\\)\u4e00\u5171\\(p\\)\u4e2a\\(1\\),\u4ee5\u53ca\u8fdb\u4f4d\u6570\\(l\\).</p> <p>\u56e0\u4e3a\u6bcf\u6b21\u90fd\u4f1a\u5c06\\(l/2\\),\u5e76\u4e14\u6bcf\u6b21\\(l\\)\u90fd\u4e0d\u8d85\u8fc7\\(n\\),\u6240\u4ee5\u6bcf\u6b21\u679a\u4e3e\\(l\\)\u5230\\(\\frac n2\\)\u5373\u53ef\u3002</p> <p>\u8fd9\u6837\u53ea\u8981\u5728\u7edf\u8ba1\u7b54\u6848\u65f6\u5c06\\(l\\)\u7684\\(1\\)\u7684\u4e2a\u6570\u518d\u52a0\u56de\u6765\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long\nusing namespace std;\nconst int N=33,M=110,P=998244353;\nint f[M][N][N][20];\nint C[N][N];\nint v[M],num[N],pv[M][N];\nint n,m,k;\ninline int getnum(int i) {\n    int ans=0;\n    while(i)ans+=(i&amp;1),i&gt;&gt;=1;\n    return ans;\n}\nvoid init() {\n    for(int i=0; i&lt;=n; ++i) {\n        C[i][0]=1;\n        for(int j=1; j&lt;=i; ++j)C[i][j]=(C[i-1][j-1]+C[i-1][j])%P;\n    }\n    for(int i=0; i&lt;=n; ++i)num[i]=getnum(i);\n    for(int i=0;i&lt;=m;++i){\n        pv[i][0]=1;\n        for(int j=1;j&lt;=n;++j)pv[i][j]=(pv[i][j-1]*v[i])%P;\n    }\n}\nint dp() {\n    f[0][0][0][0]=1;\n    for(int i=0; i&lt;=m; ++i) \n        for(int j=0; j&lt;=n; ++j) \n            for(int p=0; p&lt;=k; ++p) \n                for(int l=0; l&lt;=(n&gt;&gt;1); ++l) \n                    for(int q=0; q+j&lt;=n; ++q) {\n                        int tmp=((f[i][j][p][l]*pv[i][q]%P)*C[n-j][q])%P;\n                        f[i+1][j+q][p+(q+l&amp;1)][(l+q)&gt;&gt;1]=(f[i+1][j+q][p+(q+l&amp;1)][(l+q)&gt;&gt;1]+tmp)%P;\n                    }\n    int ans=0;\n    for(int p=0; p&lt;=k; ++p) \n        for(int l=0; l&lt;=(n&gt;&gt;1); ++l) \n            if(p+num[l]&lt;=k)ans=(ans+f[m+1][n][p][l])%P;\n    return ans;\n}\nsigned main() {\n    //freopen(\"sequence2.in\",\"r\",stdin);\n    scanf(\"%lld%lld%lld\",&amp;n,&amp;m,&amp;k);\n    for(int i=0; i&lt;=m; ++i)scanf(\"%lld\",&amp;v[i]);\n    init();\n    printf(\"%lld\",dp());\n    return 0;\n}\n</code></pre> <p>P1633</p> <p>\u6211\u4eec\u53ef\u4ee5\u8bbe\u4e00\u4e2a\u4e94\u7ef4\u7684\u72b6\u6001\uff0cf[i][j][k][l][0/1],\u8868\u793aX\u4e2d\u6709i\u4e2a1\uff0cY\u4e2d\u6709j\u4e2a1\uff0cZ\u4e2d\u6709k\u4e2a1\uff0c\u5f53\u524d\u6bd4\u8f83\u5230\u4e86\u7b2cl\u4f4d\uff0c\u4e14Z\u7684\u7b2cl\u4f4d\u662f0\u8fd8\u662f1.</p> <p>\u5bf9\u4e8eX\u548cY\u7684\u7b2cl\u4f4d\uff0c\u6709\u4e24\u79cd\u9009\u62e9\uff0c\u5c31\u662f\u586b0\u62161\uff0c\u6240\u4ee5\u6709\u5982\u4e0b\u8f6c\u79fb\uff1a</p> <p><pre><code>f[i][j][k][l][0]+0          -&gt;f[i][j][k][l+1][0]   //0 0\n                +(1ll&lt;&lt;l-1) -&gt;f[i][j+1][k+1][l+1][0]    //0 1\n                +(1ll&lt;&lt;l-1) -&gt;f[i+1][j][k+1][l+1][0]    //1 0\n                +(1ll&lt;&lt;l)   -&gt;f[i+1][j+1][k+1][l+1][1]  //1 1\n\nf[i][j][k][l][1]+0          -&gt;f[i][j][k][l+1][0]    //0 0\n                +(1ll&lt;&lt;l-1) -&gt;f[i][j+1][k][l+1][1]      //0 1\n                +(1ll&lt;&lt;l-1) -&gt;f[i+1][j][k][l+1][1]      //1 0\n                +(1ll&lt;&lt;l)   -&gt;f[i+1][j+1][k+1][l+1][1]  //1 1\n</code></pre> \u6ce8\u610f\u7ed9\u7b2cl\u4f4d\u52a0\u4e2a1\u76f8\u5f53\u4e8e\u7ed9\u539f\u6570\u52a0\\(2^{l-1}\\),\u800c\u4e0d\u662f\\(2^l\\)</p> <p>\u4e3e\u4e2a\u4f8b\u5b50\uff0c\u5bf9\u4e8e1111\u548c11111\u8fd9\u4e24\u79cd\u7b2cl\u4f4d\u5206\u522b\u662f0\u548c1\u7684\u60c5\u51b5\uff1a~~(01111\u524d\u5bfc\u96f6\u4e0d\u7528\u7ba1\uff0c\u53ea\u662f\u8868\u793a\u7b2cl\u4f4d\u4e3a0\u800c\u5df2)~~</p> <p><pre><code>//\u5de6-&gt;\u53f3\u4e3a\u4f4e\u4f4d-&gt;\u9ad8\u4f4d\n    l        l\n11110 -&gt;111100\ni   0\nj   0\n11110 -&gt;111110 \ni   0\nj   1       \n11110 -&gt;111110\ni   1\nj   0       \n11110 -&gt;111111\ni   1\nj   1\n\n    l        l\n11111 -&gt;111110\ni   0\nj   0\n11111 -&gt;111101 \ni   0\nj   1       \n11111 -&gt;111101\ni   1\nj   0       \n11111 -&gt;111111\ni   1\nj   1\n</code></pre> \u5206\u522b\u52a0\u4e0a\u8d21\u732e\u4ee5\u540e\uff0c\u518d\u53d6\u4e2a\u6700\u5c0f\u503c\u5c31\u884c\u4e86\u3002</p> <p>\u8fb9\u754c\u662f\\(f[0][0][0][1][0]=0\\),l\u4ece1\u5f00\u59cb.</p> <p>\u5bf9\u8f93\u5165\u7684a,b,c\u6c42\u51fall,na,nb,nc\u90a3\u4e48\u6700\u7ec8\u7b54\u6848\u4e3a\\(\\min(f[na][nb][nc][0,1,...,ll][0,1])\\)</p> <p>\u6ce8\uff1a</p> <p>\\(f[i][j][k][l][0]+2^{l-1}\\)\u4e0d\u80fd\u8f6c\u79fb\u7ed9\\(f[i][j+1][k+1][l][1]\\),\u800c\u662f\u8f6c\u79fb\u7ed9\\(f[i][j][k+1][l+1][0]\\)</p> <p>\u56e0\u4e3al\u6ca1\u6709\u79fb\u52a8\u4f4d\u7f6e\uff0c\u4e0b\u6b21\u8fd8\u662f\u5728\u7b2cl\u4f4d\u52a01\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0X\u6216Y\u540c\u4e00\u4f4d\u52a0\u4e86\u4e24\u6b211\uff0c\u51fa\u73b0\u9519\u8bef\u3002</p> <p>~~\u5176\u5b9el\u90a3\u4e00\u7ef4\u53ef\u4ee5\u6eda\u5b58\u7684\uff0c\u4f46\u6211\u61d2~~</p> <p>Code: </p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=33,INF=5e18;\nint f[N][N][N][N][2];\nint n,a,b,c,na,nb,nc,la,lb,lc,ll;\nvoid init() {\n    memset(f,0x3f,sizeof f);\n    na=0;nb=0;nc=0;la=0;lb=0;lc=0;\n    while(a) {\n        if(a&amp;1)na++;\n        la++;\n        a&gt;&gt;=1;\n    }\n    while(b) {\n        if(b&amp;1)nb++;\n        lb++;\n        b&gt;&gt;=1;\n    }\n    while(c) {\n        if(c&amp;1)nc++;\n        lc++;\n        c&gt;&gt;=1;\n    }\n    ll=max(la,max(lb,lc));\n}\nvoid work() {\n    f[0][0][0][1][0]=0;\n    for(int i=0; i&lt;=na; ++i) {\n        for(int j=0; j&lt;=nb; ++j) {\n            for(int k=0; k&lt;=nc; ++k) {\n                for(int l=1; l&lt;=ll; ++l) {\n                    f[i][j][k][l+1][0]=min(f[i][j][k][l+1][0],min(f[i][j][k][l][0],f[i][j][k][l][1]));\n                    f[i+1][j+1][k+1][l+1][1]=min(f[i+1][j+1][k+1][l+1][1],min(f[i][j][k][l][0],f[i][j][k][l][1])+(1ll&lt;&lt;l));//\u6ce8\u610f\u5199\u6cd5\uff0c1ll&lt;&lt;l\u8981\u52a0\u62ec\u53f7\n\n                    f[i][j+1][k+1][l+1][0]=min(f[i][j+1][k+1][l+1][0],f[i][j][k][l][0]+(1ll&lt;&lt;l-1));\n                    f[i+1][j][k+1][l+1][0]=min(f[i+1][j][k+1][l+1][0],f[i][j][k][l][0]+(1ll&lt;&lt;l-1));\n                    f[i][j+1][k][l+1][1]=min(f[i][j+1][k][l+1][1],f[i][j][k][l][1]+(1ll&lt;&lt;l-1));\n                    f[i+1][j][k][l+1][1]=min(f[i+1][j][k][l+1][1],f[i][j][k][l][1]+(1ll&lt;&lt;l-1));             \n                }\n            }\n        }\n    }\n}\nsigned main() {\n    scanf(\"%lld\",&amp;n);\n    for(int i=1; i&lt;=n; ++i) {\n        scanf(\"%lld%lld%lld\",&amp;a,&amp;b,&amp;c);\n        init();//\u521d\u59cb\u5316\n        work();//dp\n        int ans=INF;\n        for(int i=0; i&lt;=ll; ++i) {\n            int tmp1=f[na][nb][nc][i][0],cnt1=0;\n            int tmp2=f[na][nb][nc][i][1],cnt2=0;\n            while(tmp1&gt;0)tmp1&gt;&gt;=1,cnt1++;\n            while(tmp2&gt;0)tmp2&gt;&gt;=1,cnt2++;\n            if(cnt1&lt;=ll &amp;&amp; cnt1&gt;0)ans=min(ans,f[na][nb][nc][i][0]);//\u6240\u6709\u6ee1\u8db3\u6761\u4ef6\u7684\u6570\u4e2d\u53d6\u6700\u5c0f\u503c\n            if(cnt2&lt;=ll &amp;&amp; cnt2&gt;0)ans=min(ans,f[na][nb][nc][i][1]);\n        }\n        if(ans==INF)printf(\"-1\\n\");\n        else printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/dp/#dp_2","title":"\u6982\u7387dp","text":"<p>P1769</p> <p>\u53ef\u4ee5\u53d1\u73b0\u6bcf\u4e2a\u4eba\u7684\u6bd4\u8d5b\u8def\u7a0b\u5c31\u662f\u4e00\u9897\u5b8c\u5168\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u6309\u7167\u7ebf\u6bb5\u6811\u5efa\u56fe\u7684\u65b9\u5f0f\u9884\u5904\u7406\u51fa\u6bcf\u4e00\u8f6e\u6bcf\u4e2a\u4eba\u5bf9\u6218\u7684\u6240\u6709\u53ef\u80fd\u5bf9\u624b\u7684\u7f16\u53f7\u3002</p> <p>\u4e4b\u540e\uff0c\u6bcf\u4e2a\u4eba\u90fd\u6709\u4e00\u4e2a\u8d62\u5230\u7b2c\\(j\\)\u5c42\u7684\u6982\u7387\uff0c\u6bcf\u4e2a\u5bf9\u624b\u4e5f\u6709\u8d62\u5230\u7b2c\\(j\\)\u5c42\u7684\u6982\u7387\uff0c\u5219\u7b2c\\(i\\)\u4e2a\u4eba\u8d62\u4e0b\u7b2c\\(j\\)\u5c42\u83b7\u80dc\u7684\u603b\u6982\u7387\u4e3a\uff1a</p> \\[ f[i][j]=\\sum_{t=l}^r f[i][j-1]*f[t][j-1]* a[i][t]/100.0; \\] <p>\u6700\u540e\u7edf\u8ba1\u8c01\u8d62\u5230\u6700\u540e\u7684\u603b\u6982\u7387\u6700\u5927\u4e14\u7f16\u53f7\u6700\u5c0f\u5373\u53ef\u3002 <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\n#define db double\nusing namespace std;\nconst int N=1100;\ndb f[N][N],a[N][N];\nint n,k;\nint kp[N],h[N][N];\nstruct node{\n    int l,r;\n}g[N&lt;&lt;2];\nvoid init(){\n    kp[0]=1;\n    for(int i=1;i&lt;=k;++i)kp[i]=kp[i-1]&lt;&lt;1;\n}\nvoid build(int k,int i,int l,int r){\n    g[i].l=l,g[i].r=r;\n    for(int j=l;j&lt;=r;++j)h[j][k]=i;\n    if(l==r){\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(k+1,i&lt;&lt;1,l,mid);\n    build(k+1,i&lt;&lt;1|1,mid+1,r);\n}\n\nint main(){\n    scanf(\"%d\",&amp;k);\n    init();\n    n=kp[k];\n    for(int i=1;i&lt;=n;++i)\n        for(int j=1;j&lt;=n;++j)scanf(\"%lf\",&amp;a[i][j]);\n    build(1,1,1,n);\n    for(int i=1;i&lt;=n;++i)f[i][0]=1.0;\n    for(int j=1;j&lt;=k;++j){\n        for(int i=1;i&lt;=n;++i){\n            int tmp=h[i][k+1-j+1]^1;\n            for(int t=g[tmp].l;t&lt;=g[tmp].r;++t){\n                f[i][j]+=f[i][j-1]*f[t][j-1]*a[i][t]/100.0;\n            }\n        }\n    }\n    db ans=0;\n    int pos=0;\n    for(int i=1;i&lt;=n;++i){\n        if(ans&lt;f[i][k]){\n            pos=i;\n            ans=f[i][k];\n        }\n    }\n    printf(\"%d\",pos);\n\n    return 0;\n}\n/*\n2\n0 90 50 50\n10 0 10 10\n50 90 0 50\n50 90 50 0\n*/\n</code></pre></p>"},{"location":"my%20past/OI/dp/#dagdp","title":"DAG\u4e0adp","text":"<p>P3953</p> <p>\u8fd9\u9053\u9898\u7684\u65e0\u89e3\u60c5\u51b5\u5c31\u662f\u5f53\u4e00\u6761\u53ef\u884c\u8def\u5f84\u4e0a\u5305\u542b\u4e86\u4e00\u4e2a\u96f6\u73af\u65f6,\u8f93\u51fa\\(-1\\)\u3002</p> <p>\u8bbe\\(f[i][k]\\)\u8868\u793a\u8d70\u5230\u7b2c\\(i\\)\u4e2a\u70b9\uff0c\u5e76\u4e14\u8fd8\u6709\\(k\\)\u7684\u65f6\u95f4\u53ef\u4ee5\u6d6a\u8d39\u7684\u8def\u5f84\u603b\u6761\u6570\u3002</p> <p>\u6bcf\u6b21\u8f6c\u79fb\u76f8\u5f53\u4e8e\u6d6a\u8d39\u4e86\\(dis[u]+w-dis[v]\\)\u7684\u65f6\u95f4\u3002</p> <p>\u6ce8\u610f\u5982\u679c\u51fa\u73b0\u4e86\u975e\u96f6\u7684\u73af\uff0c\u90a3\u4e48\u6bcf\u8f6c\u4e00\u5708\u90fd\u6709\u4e0d\u540c\u72b6\u6001\u7684\u51fa\u73b0\uff0c\u6240\u4ee5\u4e0d\u7528\u5224\u65ad\\(-1\\);\u4f46\u662f\u56e0\u4e3a\u96f6\u73af\u8f6c\u4e00\u5708\u6ca1\u6709\u65b0\u7684\u8d21\u732e\uff0c\u6240\u4ee5\u8981\u5224\u65ad\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;set&gt;\nusing namespace std;\ntypedef pair&lt;int,int&gt; PI;\nconst int N=2e5+10,M=55;\nint T,n,m,u,v,w,K,P,cnt[2];\nint head[2][N],dis[2][N],vis[N],flg[N][M],f[N][M];\nstruct node {\n    int v,w,nxt;\n} e[2][N&lt;&lt;1];\nvoid add(int u,int v,int w,int t) {\n    e[t][++cnt[t]].v=v,e[t][cnt[t]].w=w,e[t][cnt[t]].nxt=head[t][u],head[t][u]=cnt[t];\n}\nvoid dij(int t,int o) {\n    memset(dis[o],0x3f,sizeof dis[o]);\n    memset(vis,0,sizeof vis);\n    dis[o][t]=0;\n    set&lt;PI&gt; s;\n    s.insert(make_pair(0,t));\n    while(s.size()) {\n        set&lt;PI&gt;::iterator it=s.begin();\n        u=it-&gt;second;\n        s.erase(*it);\n        if(vis[u])continue;\n        vis[u]=1;\n        for(int i=head[o][u]; ~i; i=e[o][i].nxt) {\n            int v=e[o][i].v,w=e[o][i].w;\n            if(dis[o][v]&gt;dis[o][u]+w) {\n                dis[o][v]=dis[o][u]+w;\n                if(!vis[v])s.insert(make_pair(dis[o][v],v));\n            }\n        }\n    }\n}\nint dfs(int u,int k) {\n    if(k&lt;0 || k&gt;K)return 0;\n    if(flg[u][k]) {//\u51fa\u73b0\u4e86\u73af,\u5e76\u4e14\u56e0\u4e3a\u8d70\u8fc7\u4e00\u4e2a\u73af\u540ek\u6ca1\u6709\u53d8\u5316\uff0c\u8bf4\u660e\u8fd9\u4e2a\u73af\u4e00\u5b9a\u662f\u4e2a\u96f6\u73af\u3002\n        if(dis[0][u]+dis[1][u]&lt;=dis[0][n]+K) {\n            flg[u][k]=0;\n            return -1;\n        } else if(flg[u][k]&gt;=2) {//\u540c\u4e00\u4e2a\u96f6\u73af\u53c8\u8f6c\u4e86\u4e00\u5708\uff0c\u8bf4\u660e\u6240\u6709\u6362\u4e0a\u7684\u70b9\u90fd\u5df2\u7ecf\u7528\u4e0a\u9762\u7684\u8bed\u53e5\u5224\u65ad\u8fc7\u4e86\uff0c\u76f4\u63a5return\n            return 0;\n        }\n    }\n    if(f[u][k]!=-1)return f[u][k];\n    flg[u][k]++;\n    int res=0;\n    if(u==n)res=1;\n    for(int i=head[0][u]; ~i; i=e[0][i].nxt) {\n        int v=e[0][i].v,w=e[0][i].w;\n        int tmp=dfs(v,k-(dis[0][u]+w-dis[0][v]));\n        if(tmp==-1) {\n            flg[u][k]--;\n            return -1;\n        }\n        res=(res+tmp)%P;\n    }\n    flg[u][k]--;\n    return f[u][k]=res;\n}\nint main() {\n    scanf(\"%d\",&amp;T);\n    while(T--) {\n        memset(head,-1,sizeof head);\n        cnt[0]=cnt[1]=-1;\n        scanf(\"%d%d%d%d\",&amp;n,&amp;m,&amp;K,&amp;P);\n        for(int i=1; i&lt;=m; ++i) {\n            scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\n            add(u,v,w,0);\n            add(v,u,w,1);\n        }\n        dij(1,0);\n        dij(n,1);\n        memset(f,-1,sizeof f);\n        memset(flg,0,sizeof flg);\n        printf(\"%d\\n\",dfs(1,K));\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/dp%E5%B8%B8%E7%94%A8%E6%96%B9%E6%B3%95/","title":"dp\u5e38\u7528\u65b9\u6cd5","text":"<p>1.\u5e38\u7528\u7684\u586b\u8868\u6cd5\u548c\u5237\u8868\u6cd5\uff1a</p> <p>\u586b\u8868\u6cd5\u5c31\u662f\u5229\u7528\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u548c\u4e0a\u4e00\u4e2a\u72b6\u6001\u6765\u63a8\u5bfc\u51fa\u73b0\u5728\u7684\u72b6\u6001\uff08\u76f8\u5f53\u4e8e\u77e5\u9053\u5df2\u77e5\u6761\u4ef6\uff0c\u5c06\u7b54\u6848\u586b\u5165\uff09</p> <p>\u5237\u8868\u6cd5\u5c31\u662f\u5229\u7528\u5f53\u524d\u7684\u72b6\u6001\uff0c\u628a\u6709\u5173\u8054\u7684\u4e0b\u4e00\u72b6\u6001\u90fd\u63a8\u51fa\u6765\u3002</p> <p>2.\u53d6\u6700\u5927\u503c\u548c\u7edf\u8ba1\u7b54\u6848\u533a\u522b\uff1a\u6700\u5927\u503c\u7684\u9898\u76ee\uff0c\u4e0d\u5141\u8bb8\u6709\u7a7a\u7f3a\u4e3a0\u7684\u60c5\u51b5\uff0c\u5fc5\u987b\u4e00\u6b65\u4e00\u6b65\u7684\u8f6c\u79fb\uff0c\u4e0d\u80fd\u8df3\u6b65\uff1b</p> <p>\u800c\u7edf\u8ba1\u7b54\u6848\u7684\u9898\u76ee\uff0c\u53ef\u4ee5\u53ea\u7531\u6709\u7b54\u6848\u7684\u72b6\u6001\u8df3\u5230\u4e0b\u4e00\u5408\u6cd5\u72b6\u6001\uff0c\u4e0d\u5408\u6cd5\u72b6\u6001\u53ef\u4ee5\u4e3a0\u3002</p> <p>3.\u6eda\u52a8\u6570\u7ec4\u4e24\u79cd\u65b9\u6cd5\uff1a</p> <p>\u4e00\u79cd\u662f\u76f4\u63a5\u8986\u76d6\uff0c\u5982\u80cc\u5305\u7684\u4f18\u5316\uff1b\u7b2c\u4e8c\u79cd\u662f\u9700\u8981\u4e0e\u4e0a\u4e00\u884c\u8fdb\u884c\u65e0\u5e8f\u6bd4\u8f83\uff0c\u6709\u53ef\u80fd\u8981\u6bd4\u8f83\u5230\u6240\u6709\u72b6\u6001\uff0c\u6240\u4ee5\u5b9a\u4e49\u4e24\u884c\u7684\u6570\u7ec4\uff0c\u7528i%2\u6765\u6362\u884c\u3002</p> <p>4.\u6700\u4f18\u5b50\u7ed3\u6784\u4e0e\u65e0\u540e\u6548\u6027\uff1a</p> <p>\u6700\u4f18\u5b50\u7ed3\u6784\u5373\u5b50\u95ee\u9898\u7684\u6700\u4f18\u89e3\u4e00\u5b9a\u80fd\u63a8\u51fa\u6765\u5f53\u524d\u95ee\u9898\u7684\u6700\u4f18\u89e3\uff1b</p> <p>\u65e0\u540e\u6548\u6027\u5373\u5f53\u524d\u72b6\u6001\u5df2\u7ecf\u786e\u5b9a\uff0c\u5219\u4ee5\u540e\u7684\u72b6\u6001\u4e0e\u4e4b\u524d\u7684\u72b6\u6001\u65e0\u5173\u3002</p> <p>\u5178\u578b\u7684\u4f8b\u5b50\uff1a 1\uff09.\u4f20\u7eb8\u6761\u7c7b\u578b\u7684\u9898\uff0c\u5982\u679c\u4e0a\u4e0b\u5de6\u53f3\u90fd\u80fd\u8d70\uff0c\u5c31\u4f1a\u5177\u6709\u540e\u6548\u6027\u3002</p> <p>2\uff09.P1437.\u5982\u679c\u6309\u6b63\u5e38\u987a\u5e8f\u4ece\u4e0a\u5f80\u4e0b\u641c\uff0c\u5c31\u4f1a\u53d1\u73b0\u6709\u4e4b\u524d\u7684\u72b6\u6001\u91cd\u590d\u8ba1\u7b97\u7684\u60c5\u51b5\uff0c\u56e0\u6b64\u8981\u4ece\u53f3\u5f80\u5de6\u641c\u3002</p> <p>5.\u5e38\u7528\u907f\u514d\u4e0d\u5408\u6cd5\u72b6\u6001\u8f6c\u79fb\u7684\u65b9\u6cd5\uff1a\u5982\u679c\u662f\u53d6\u6700\u5927\u503c\uff0c\u5c31\u8bbe\u6570\u7ec4\u4e3a\u8d1f\u65e0\u7a77\uff0c\u5c06\u521d\u59cb\u72b6\u6001\u521d\u59cb\u5316\u4e3a0.\u8fd9\u6837\u5f53\u78b0\u5230\u4e0d\u5408\u6cd5\u7684\u72b6\u6001\u65f6\uff0c\u8fd9\u5c4a\u8ba1\u7b97\u51fa\u8d1f\u65e0\u7a77\uff0c\u8fbe\u5230\u820d\u53bb\u7684\u76ee\u7684\u3002</p> <p>6.\u5e38\u7528\u63a8\u8f6c\u79fb\u65b9\u7a0b\u7684\u65b9\u6cd5\uff1a</p> <p>~~0).\u601d\u8003\u95ee\u9898\u662f\u5426\u6ee1\u8db3\u65e0\u540e\u6548\u6027\u548c\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u6ca1\u6709\u8fd8\u505a\u4e2ap~~</p> <p>1).\u601d\u8003\u51fa\u5f53\u524d\u6240\u6709\u7684\u72b6\u6001f[i][j][k][...]\uff08f[i][j][0], f[i][j][1] \u6216\u53ea\u6709 f[i][j][k]\uff09</p> <p>2).\u6839\u636e\u9898\u610f\u5217\u51fa\u6bcf\u79cd\u72b6\u6001\u6240\u6709\u7684\u51b3\u7b56(\u8df3\u8f6c\u673a\u5236)\uff0c\u5373\u5404\u79cd\u53d6max\u64cd\u4f5c\u6216\u8fde\u52a0\u8fde\u4e58\u3002 (f[i][j][k] -&gt; max(...), +=..., * =...)</p> <p>3).\u5c06\u4e0b\u4e00\u72b6\u6001\u901a\u8fc7\u51b3\u7b56\u679a\u4e3e\u51fa\u6765(f[i+1][j][k], f[i+1][j+1][k], f[i+1][v][k-j],v&gt;=j-1)</p> <p>\u4ee5\u4e0a\u5c31\u53ef\u4ee5\u505a\u9898\u4e86\uff0c\u4f46\u7528\u7684\u662f\u5237\u8868\u6cd5\u3002</p> <p>(\u91cd\u70b9) 4).\u5c06\u4e0b\u4e00\u72b6\u6001\u4e0e\u5f53\u524d\u72b6\u6001\u901a\u8fc7\u51b3\u7b56\u5efa\u7acb\u8054\u7cfb\uff0c\u5e76\u5c06i+1,j-1,k+v\u7b49\u4e0b\u4e00\u72b6\u6001\u7684\u7cfb\u6570\u8fed\u4ee3\u4e3ai,j,k,\u4ee5\u5c06\u4e0b\u4e00\u72b6\u6001\u5f53\u4f5c\u5f53\u524d\u72b6\u6001\uff0c\u5c06\u5f53\u524d\u72b6\u6001\u8f6c\u5316\u4e3a\u4e0a\u4e00\u72b6\u6001\uff0c\u7528\u586b\u8868\u6cd5\u505a\u9898\u3002(f[i+1][j][k]-&gt;f[i][j][k],f[i+1][j+1][k]-&gt;f[i][j][k] \u53ef\u4ee5\u53d8\u4e3a f[i][j][k]=max(f[i-1][j][k],f[i-1][j-1][k]))</p> <p>5) \u5e38\u89c1\u8df3\u8f6c\u4e0e\u72b6\u6001\u8bbe\u7f6e</p> <p>1.\u8bbe\u8003\u8651\u5230\u7b2c\\(i\\)\u4e2a\u65f6\u7684\\(f[i]\\),\u4e0b\u4e00\u6b21\u8df3\u8f6c\u5230\\(f[i+1]\\)\uff0c\u5982\u4f20\u7edf\u80cc\u5305 2.\u8bbe\u8003\u8651\u5230\u524d\\(i\\)\u4e2a\u65f6\u7684\\(f[i]\\),\u8df3\u8f6c\u53ef\u80fd\u662f\u5c06\u7b2c\\(i+1\\)\u4e2a\u63d2\u5165\u5230\u524d\\(i\\)\u4e2a\u91cc\uff0c\u4e5f\u53ef\u80fd\u76f4\u63a5\u8df3\u8f6c\u5230\\(j(j&gt;i)\\)\uff0c\u5ffd\u7565\\([i+1,j-1]\\)\u7684\u7269\u54c1\u3002</p>"},{"location":"my%20past/OI/dp%E8%BD%AC%E7%A7%BB/","title":"dp\u8f6c\u79fb","text":""},{"location":"my%20past/OI/dp%E8%BD%AC%E7%A7%BB/#_1","title":"\u8bb0\u5f55\u65b9\u6848","text":"<p>P6454</p> <p>\u672c\u9898\u6709dp\u7684 \\(O(n)\\) \u89e3\u6cd5\u3002\u8bbe\u5df2\u7ecf\u7528\u5b8c \\(1\\) \u5230 \\(i\\) \u7684\u9ebb\u5c06\uff0c\u6709 \\(j\\) \u7ec4\u4ece \\(i-2\\) \u5f00\u59cb\u7684\u987a\u5b50\uff0c\\(k\\) \u7ec4\u4ece \\(i-1\\) \u5f00\u59cb\u7684\u987a\u5b50\uff0c\u662f\u5426\u5df2\u7ecf\u786e\u5b9a\u96c0\u5934\uff0c\u6ca1\u6709\u52a0\u5165\u4efb\u4f55\u724c\u7684\u9ebb\u5c06\u7ec4\u5408\u662f\u5426\u80fd\u548c\u4e3a \\(g[i][j][k][0/1]\\)\uff0c\u5bf9\u4e8e\u5df2\u7ecf\u52a0\u5165\u4e00\u5f20\u724c\u7684\u8bb0\u4e3a \\(f[i][j][k][0/1]\\)\u3002\u8f6c\u79fb\u96be\u5904\u5728\u4e8e\uff0c\u4ece \\(g\\) \u5230 \\(f\\) \u8f6c\u79fb\u65f6\uff0c\u6ca1\u6cd5\u8bb0\u5f55\u52a0\u5165\u4e86\u90a3\u5f20\u724c\u3002 \u6240\u4ee5\u628a\u6240\u6709 \\(g\\) \u5230 \\(f\\) \u7684\u8f6c\u79fb\u53d8\u6210\u5efa\u8fb9(\u7b2c\u4e00\u79cd\u8fb9)\uff0c\u6240\u6709 \\(f\\) \u5230 \\(f\\) \u7684\u8f6c\u79fb\u53d8\u6210\u7b2c\u4e8c\u79cd\u8fb9(\u56e0\u4e3a\u53ea\u6709\u80fd\u591f\u901a\u8fc7\u7b2c\u4e8c\u79cd\u8fb9\u5230\u8fbe\u7ec8\u70b9\u72b6\u6001\u7684\u7b2c\u4e00\u79cd\u8fb9\u662f\u53ef\u884c\u89e3)\u3002\u6700\u540e\u4ece \\(f(n,0,0,1)\\)\u4ee3\u8868\u7684\u70b9\uff0c\u901a\u8fc7\u7b2c\u4e8c\u79cd\u8fb9\u8fdb\u884cdfs\uff0c\u6bcf\u6b21\u5230\u4e00\u4e2a\u70b9\u679a\u4e3e\u7b2c\u4e00\u79cd\u8fb9\uff0c\u5bf9 \\(v\\) \u6807\u8bb0\u4e3a\u53ef\u884c\u89e3\u3002 <pre><code>#include&lt;iostream&gt;\n#include&lt;vector&gt;\nusing namespace std;\nconst int N=5e3+10,M=2e5+10;\nint g[N][3][3][2];\ninline int id(int i,int j,int k,int p){\n    return i*18+j*6+k*2+p;\n}\nint n,m,tmp;\nint a[N],cnt[2],lst[2],ans[N],vis[M],res[N];\nvector&lt;int&gt; G[M],E[M];\nvoid dfs(int u){\n    vis[u]=1;\n    for(int i=0;i&lt;E[u].size();++i){\n        int v=E[u][i];\n        ans[v]=1;\n    }\n    for(int i=0;i&lt;G[u].size();++i){\n        int v=G[u][i];\n        if(!vis[v]) dfs(v);\n    }\n}\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;++i) scanf(\"%d\",&amp;tmp),a[tmp]++;\n    for(int i=1;i&lt;=n;++i) cnt[a[i]%2]++,lst[a[i]%2]=i;\n    g[0][0][0][0]=1;\n    for(int i=0;i&lt;n;++i){\n        for(int j=0;j&lt;3;++j){\n            for(int k=0;k&lt;3;++k){\n                for(int p=0;p&lt;2;++p){\n                    if(!g[i][j][k][p]) continue;\n                    if(a[i+1]&gt;=j+k) g[i+1][k][(a[i+1]-j-k)%3][p]=g[i][j][k][p];\n                    if(!p &amp;&amp; a[i+1]&gt;=j+k+2) g[i+1][k][(a[i+1]-j-k-2)%3][1]=g[i][j][k][p];\n                }\n            }\n        }\n        for(int j=0;j&lt;3;++j){\n            for(int k=0;k&lt;3;++k){\n                for(int p=0;p&lt;2;++p){\n                    //if(!f[i][j][k][p]) continue;\n                    int t=id(i,j,k,p);\n                    if(a[i+1]&gt;=j+k) G[id(i+1,k,(a[i+1]-j-k)%3,p)].push_back(t);\n                    if(!p &amp;&amp; a[i+1]&gt;=j+k+2) G[id(i+1,k,(a[i+1]-j-k-2)%3,1)].push_back(t);\n                }\n            }\n        }\n        ++a[i+1];\n        for(int j=0;j&lt;3;++j){\n            for(int k=0;k&lt;3;++k){\n                for(int p=0;p&lt;2;++p){\n                    if(!g[i][j][k][p]) continue;\n                    if(a[i+1]&gt;=j+k) E[id(i+1,k,(a[i+1]-j-k)%3,p)].push_back(i+1);\n                    if(!p &amp;&amp; a[i+1]&gt;=j+k+2) E[id(i+1,k,(a[i+1]-j-k-2)%3,1)].push_back(i+1);\n                }\n            }\n        }\n    }\n    dfs(id(n,0,0,1));\n    if(cnt[1]==1) ans[lst[1]]=1;\n    int tot=0;\n    for(int i=1;i&lt;=n;++i){\n        if(ans[i]) res[++tot]=i;\n    }\n    printf(\"%d\\n\",tot);\n    for(int i=1;i&lt;=tot;++i) printf(\"%d \",res[i]);\n    return 0;\n}\n</code></pre></p>"},{"location":"my%20past/OI/gcd/","title":"\u6b27\u51e0\u91cc\u5f97&amp;\u6269\u5c55\u6b27\u51e0\u91cc\u5f97","text":""},{"location":"my%20past/OI/gcd/#_2","title":"\u6734\u7d20\u6b27\u51e0\u91cc\u5f97","text":"<p>\u5c31\u662f\u8f97\u8f6c\u76f8\u9664\u6cd5\u3002\\(\\gcd(a,b)=\\gcd(b,a\\mod b)\\) <pre><code>int gcd(int a, int b) {\n    return !b ? a : gcd(b, a % b);\n}\n</code></pre> \u590d\u6742\u5ea6\\(O(\\log n)\\)</p>"},{"location":"my%20past/OI/gcd/#_3","title":"\u6269\u5c55\u6b27\u51e0\u91cc\u5f97","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u4e3b\u8981\u7528\u6765\u6c42\u89e3\uff1a</p> <p>\\(ax+by=\\gcd(a,b)\\)\u7684\u7279\u6b8a\u89e3\u3002</p> <p>\u53ef\u4ee5\u7528\u5b83\u6c42\u89e3\u8fd9\u6837\u7684\u6a21\u7ebf\u6027\u65b9\u7a0b\uff1a</p> <p>\\(ax \\equiv b\\pmod n\\)</p> <p>\u5176\u5b9e\u5c31\u662f\u6c42\\(ax+ny=b\\)\u7684\u89e3\u3002</p> <p>\u800c\u8fd9\u4e2a\u65b9\u7a0b\u6709\u89e3\u7684\u524d\u63d0\u662f\\(b \\mod \\gcd(a,n)=0\\),\u5373\\(b\\)\u662f\\(\\gcd(a,n)\\)\u7684\u500d\u6570\u3002\u8fd9\u6837\u624d\u80fd\u8f6c\u5316\u4e3a\u6c42\\(ax+ny=\\gcd(a,n)\\)\u7684\u4e00\u7ec4\u89e3\uff0c\u5728\u63a8\u5230\\(ax+ny=b\\)\u4e0a\u3002</p> <p>\u6a21\u677f\uff1a</p> <pre><code>void exgcd(int a,int b,int &amp;d,int &amp;x,int &amp;y){\n    if(!b)d=a,x=1,y=0;\n    else exgcd(b,a%b,d,y,x),y-=a/b*x;\n}\n</code></pre> <p>\u8fd9\u4e2a\u9012\u5f52\u7684\u539f\u7406\u662f\uff1a</p> <p>\u5047\u8bbe\u5f53\u524d\\(ax+by=\\gcd(b,a\\mod b)\\)\u6709\u4e00\u7ec4\u89e3\\((x_1,y_1)\\),\u5219\u6709\uff1a</p> \\[\\gcd(a,b)=\\gcd(b,a \\mod b)\\\\ ax+by=bx_1+(a-\\lfloor\\frac ab\\rfloor b)y_1\\\\ ax+by=a(y_1)+b(x_1-\\lfloor\\frac ab\\rfloor y_1) \\] <p>\u56e0\u6b64\\(x=y_1,y=x_1-\\lfloor\\frac ab\\rfloor y_1\\),\u8fd9\u6837\u8fed\u4ee3\u5373\u53ef\u5f97\u51fa\u4e00\u7ec4\u7279\u6b8a\u89e3\u3002</p> <p>\u7279\u522b\u5730\uff0c\u5f53\\(b=0\\)\u65f6\uff0c\\(x=1,y=0\\).</p> <p>\u6709\u4e86\u8fd9\u7ec4\u89e3\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\\(c\\)\u6ee1\u8db3\\(ax+by=c,c \\mod \\gcd(a,b)=0\\)\u7684\u4e00\u7ec4\u7279\u6b8a\u89e3\u4e3a\\((\\frac{x_0c}{\\gcd(a,b)},\\frac{y_0c}{\\gcd(a,b)})\\) (1)</p> <p>\u90a3\u5982\u679c\u6211\u60f3\u6c42\u4efb\u610f\u4e00\u7ec4\u53ef\u884c\u89e3\u5462?</p> <p>\u5047\u8bbe\\(a'=a/ \\gcd(a,b) ,b'=b/ \\gcd(a,b)\\)</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u4e00\u7ec4\\(ax+by=c\\)\u7684\u89e3\\((x_1,y_1)\\),\u6709\u4efb\u610f\u6574\u6570\u89e3\\((x_1+kb',y_1-ka')\\)(2)</p> <p>\u8fd9\u662f\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\u4e00\u7ec4\u89e3\\((x_2,y_2)\\),\u6709\uff1a</p> \\[ ax_1+by_1=ax_2+by_2\\\\ a(x_1-x_2)=b(y_2-y_1)\\\\ \u8bbe\\gcd(a,b)=g,\u5219\\\\ a'(x_1-x_2)=b'(y_2-y_1)\\\\ \\because a'\u4e0eb'\u4e92\u8d28\\\\ \\therefore x_1-x_2=kb'\\\\ y_2-y_1=ka' \\] <p>\u5982\u679c\u8981\u6c42\u6c42\u51fa\u6307\u5b9a\u7684\u89e3(\u5982\u6700\u5c0f\u975e\u8d1f\u6574\u6570\u89e3)\uff0c\u6839\u636e\u8981\u6c42\u5411\\(x_0\\)\u52a0\u51cf\\(b\\)\u5373\u53ef\u3002</p> <p>\u6ce8\u610f (1) \u548c (2) \u987a\u5e8f\u4e0d\u80fd\u5012\uff0c\u56e0\u4e3a\u51482\u540e1\u76f8\u5f53\u4e8e\u5c06\\(b' \\to \\frac{b'c}{g}\\),\u5c31\u4e0d\u6ee1\u8db32\u7684\u6027\u8d28\u4e86\u3002</p> <p>\u590d\u6742\u5ea6\u540c\u6837\u4e3a\\(O(\\log n)\\)</p> <p>P1082</p> <p>\u6a21\u677f\u9898\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nvoid exgcd(int a,int b,int &amp;d,int &amp;x,int &amp;y){\n    if(!b)d=a,x=1,y=0;\n    else exgcd(b,a%b,d,y,x),y-=a/b*x;\n}\nint a,b,gcd,x,y;\nsigned main(){\n    scanf(\"%lld%lld\",&amp;a,&amp;b);\n    exgcd(a,b,gcd,x,y);\n    x=(x%b+b)%b;//\u6ce8\u610f\uff0c\u8fd9\u91cc\u4e0d\u7528\u63a8\u5bfcb'\u65f6\u56e0\u4e3a\u9898\u76ee\u89c4\u5b9agcd(a,b)=1,\u4e0d\u662f\u6ca1\u6709\u5fc5\u8981\u3002\n    printf(\"%lld\",x);\n    return 0;\n} \n</code></pre> <p>P1516</p> <p>\u5316\u7b80\u9898\u610f\u540e\uff0c\u6211\u4eec\u77e5\u9053\u539f\u9898\u8981\u6c42\u7684\u662f\u4e00\u4e2a\u6700\u5c0f\u975e\u8d1f\u6574\u6570\u89e3\\(i\\)\uff0c\u6ee1\u8db3\uff1a</p> \\[x+mi\\equiv y+ni\\pmod L\\\\ (m-n)i\\equiv y-x\\pmod L\\\\ \u8bbea=m-n,b=L,c=y-x,\u5219\\\\ ai+bj=c \\] <p>\u5230\u6b64\uff0c\u539f\u9898\u53d8\u4e3a\u6269\u6b27\u6a21\u677f\u9898\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nvoid exgcd(int a,int b,int &amp;d,int &amp;x,int &amp;y){\n    if(!b)d=a,x=1,y=0;\n    else exgcd(b,a%b,d,y,x),y-=a/b*x;\n}\nint x,y,n,m,L,a,b,c,g,i,j,_b,_a;\nsigned main(){\n    scanf(\"%lld%lld%lld%lld%lld\",&amp;x,&amp;y,&amp;m,&amp;n,&amp;L);\n    a=m-n,c=y-x,b=L;\n    if(a&lt;0 &amp;&amp; b&gt;0){\n        while(a&lt;0)a+=b;\n    }else if(a&gt;0 &amp;&amp; b&lt;0){\n        while(b&lt;0)b+=a;\n    }else if(a&lt;0 &amp;&amp; b&lt;0)a=-a,b=-b;//\u6ce8\u610f\u8fd9\u91cc\u7684\u8d1f\u6570\u5904\u7406\u65b9\u5f0f\u3002\n\n    exgcd(a,b,g,i,j);\n    _a=a/g,_b=b/g;\n    if(c%g!=0){\n        printf(\"Impossible\");\n        return 0;\n    }\n    i=(c/g)*i;\n    i=(i%_b+_b)%_b;\n    printf(\"%lld\",i);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/kruskal%E9%87%8D%E6%9E%84%E6%A0%91/","title":"kruskal\u91cd\u6784\u6811","text":""},{"location":"my%20past/OI/kruskal%E9%87%8D%E6%9E%84%E6%A0%91/#_1","title":"\u5e94\u7528","text":"<p>\u89e3\u51b3\u7c7b\u4f3c\u4ece\u67d0\u70b9v\u5f00\u59cb\u7ecf\u8fc7\u4e0d\u8d85\u8fc7\u8fb9\u6743x\u7684\u8fb9\u6240\u80fd\u5230\u8fbe\u7684\u8282\u70b9\u7684\u95ee\u9898\u3002</p>"},{"location":"my%20past/OI/kruskal%E9%87%8D%E6%9E%84%E6%A0%91/#_2","title":"\u539f\u7406","text":"<p>\u5728\\(kruskal\\)\u8fc7\u7a0b\u4e2d\uff0c\u5982\u679c\u6709\u8fb9\\((u,v,w)\\),\u5176\u6240\u5c5e\u4e24\u4e2a\u96c6\u5408\u7684\u6839\u4e3a\\(uu,vv\\)\u5e76\u4e14\u4e0d\u76f8\u540c\uff0c\u90a3\u4e48\u5c31\u65b0\u5efa\u4e00\u4e2a\u8282\u70b9\\(p\\)\uff0c\u5c06\\(p\\)\u7684\u70b9\u6743\u503c\u8bbe\u4e3a\\(w\\)\uff0c\u5e76\u5c06\\(p\\)\u4e8e\\(u,v\\)\u8fde\u8fb9\u3002</p> <p>\u6700\u540e\u6784\u6210\u4e86\u4e00\u68f5\u6811\uff0c\u5373\\(kruskal\\)\u91cd\u6784\u6811\u3002(\u56e0\u4e3a\u4e00\u5171\\(n\\)\u4e2a\u70b9\u7684\u539f\u56fe\u751f\u6210\u6811\u4e00\u5171\u6709\\(n-1\\)\u6761\u8fb9\uff0c\u5bf9\u5e94\\(n-1\\)\u4e2a\u65b0\u70b9\uff0c\u800c\u6bcf\u4e2a\u65b0\u70b9\u8fde\u51fa\\(2\\)\u6761\u65b0\u8fb9\uff0c\u6240\u4ee5\u91cd\u6784\u6811\u4e00\u5171\\(2n-1\\)\u4e2a\u70b9\uff0c\\(2n-2\\)\u6761\u8fb9)</p> <p>\u5f53\u8be2\u95ee\u4ece\\(v\\)\u7ecf\u8fc7\\(\\leq x\\)\u7684\u8fb9\u8d70\u8fc7\u7684\u8282\u70b9\u65f6\uff0c\u53ea\u9700\u8981\u4ece\\(v\\)\u5411\u4e0a\u500d\u589e\u627e\u5230\u70b9\u6743\\(\\leq x\\)\u7684\u70b9\u6743\u6700\u5927\u7684\u70b9\uff0c\u7ef4\u62a4\u8fd9\u4e2a\u70b9\u7684\u5b50\u6811\u5373\u53ef\u3002</p> <p>P4197 &amp; P7834</p> <p>\u8f6c\u5316\u4e3a\\(kruskal\\)\u91cd\u6784\u6811\u540e\uff0c\u53d1\u73b0\u6811\u7684\u6bcf\u4e2a\u8282\u70b9\u5bf9\u5e94\u4e00\u4e2a\u533a\u95f4\uff0c\u800c\u8be2\u95ee\u5c31\u662f\u95ee\u4e00\u4e2a\u533a\u95f4\u7684\u7b2c\\(k\\)\u5927\uff0c\u4e3b\u5e2d\u6811\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u5230\u7a7a\u95f4\u5361\u7684\u6bd4\u8f83\u6b7b\uff0c\u6240\u4ee5\u79bb\u6563\u5316\u4e00\u4e0b\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=1e5+10,M=5e5+10,K=22,INF=1e6+10;\nint n,m,q,cnt,u,v,w,tot,x,k,dfn,id,btot;\nint h[N],b[N],Fa[N&lt;&lt;1],a[N&lt;&lt;1],fa[N&lt;&lt;1][K],head[N&lt;&lt;1],l[N&lt;&lt;1],r[N&lt;&lt;1],rt[N&lt;&lt;1];\nint ls[N*K],rs[N*K],sum[N*K];\nstruct edge{\n    int u,v,w;\n    edge(int uu=0,int vv=0,int ww=0){\n        u=uu,v=vv,w=ww;\n    }\n}f[M];\nstruct Edge{\n    int v,nxt;\n}e[M&lt;&lt;1];\nbool cmp(edge a,edge b){\n    return a.w&lt;b.w;\n}\nbool Cmp(int a,int b){\n    return a&lt;b;\n}\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nint getfa(int u){\n    return u==Fa[u]?u:Fa[u]=getfa(Fa[u]);\n}\nvoid kruskal(){\n    sort(f+1,f+m+1,cmp);\n    for(int i=1;i&lt;=n;++i) Fa[i]=i;\n    tot=n;int count=0;\n    for(int i=1;i&lt;=m;++i){\n        int u=f[i].u,v=f[i].v,w=f[i].w,uu=getfa(u),vv=getfa(v),p=0;\n        if(uu!=vv){\n            ++count;\n            p=++tot,Fa[uu]=Fa[vv]=Fa[p]=p,a[p]=w;\n            add(p,uu),add(uu,p),add(vv,p),add(p,vv);\n        }\n        if(count&gt;=n-1) break;\n    }\n}\nvoid change(int &amp;now,int pre,int l,int r,int pos){\n    now=++id;\n    ls[now]=ls[pre],rs[now]=rs[pre],sum[now]=sum[pre]+1;\n    if(l==r) return;\n    int mid=l+r&gt;&gt;1;\n    if(pos&lt;=mid) change(ls[now],ls[pre],l,mid,pos);\n    else change(rs[now],rs[pre],mid+1,r,pos);\n}\nint query(int pre,int nxt,int l,int r,int pos){\n    int mid=l+r&gt;&gt;1,tmp=sum[ls[nxt]]-sum[ls[pre]];\n    if(l==r) return l;  \n    if(tmp&gt;=pos) return query(ls[pre],ls[nxt],l,mid,pos);\n    else return query(rs[pre],rs[nxt],mid+1,r,pos-tmp);\n}\nvoid dfs(int u,int p){\n    fa[u][0]=p;\n    for(int i=1;i&lt;K;++i) fa[u][i]=fa[fa[u][i-1]][i-1];\n    l[u]=dfn;\n    int top=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p) continue;\n        dfs(v,u);++top;\n    }\n    if(!top) ++dfn,change(rt[dfn],rt[dfn-1],1,btot,h[u]);\n    r[u]=dfn;\n} \nvoid lsh(){\n    sort(b+1,b+n+1,Cmp);\n    btot=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i&lt;=n;++i) h[i]=lower_bound(b+1,b+btot+1,h[i])-b; \n}\nint main(){\n    scanf(\"%d%d%d\",&amp;n,&amp;m,&amp;q);\n    memset(head,-1,sizeof head),cnt=-1;\n    for(int i=1;i&lt;=n;++i) scanf(\"%d\",&amp;h[i]),b[i]=h[i];\n    lsh();\n    for(int i=1;i&lt;=m;++i) scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w),f[i]=edge(u,v,w);\n    kruskal();\n    dfs(tot,0);\n    for(int i=1;i&lt;=q;++i){\n        scanf(\"%d%d%d\",&amp;v,&amp;x,&amp;k);\n        u=v;\n        for(int j=K-1;j&gt;=0;--j) if(fa[u][j] &amp;&amp; a[fa[u][j]]&lt;=x) u=fa[u][j];\n        int tmp=sum[rt[r[u]]]-sum[rt[l[u]]],ans=0;\n        if(tmp&lt;k) printf(\"-1\\n\");\n        else{\n            ans=query(rt[l[u]],rt[r[u]],1,btot,tmp-k+1);\n            printf(\"%d\\n\",b[ans]);  \n        }\n    }\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/manacher/","title":"manacher\u7b97\u6cd5","text":""},{"location":"my%20past/OI/manacher/#_1","title":"\u5e94\u7528","text":"<p>\u7528\u6765\u5904\u7406\u6700\u957f\u56de\u6587\u4e32\u95ee\u9898\u3002</p>"},{"location":"my%20past/OI/manacher/#_2","title":"\u6a21\u677f","text":"<pre><code>void init(){\n    a[1]=-1;\n    for(int i=1;i&lt;=n;++i) a[i*2]=0,a[i*2+1]=ch[i]-'a'+1;\n    tot=2*n+2,a[tot]=0;\n}\nvoid manacher(){\n    init();\n    for(int i=1;i&lt;=tot;++i){\n        if(i&lt;r) p[i]=min(p[mid*2-i],r-i);\n        else p[i]=0;\n        while(i+p[i]+1&lt;=tot &amp;&amp; i-p[i]-1&gt;=1 &amp;&amp; a[i+p[i]+1]==a[i-p[i]-1]) p[i]++;\n        if(i+p[i]&gt;r) mid=i,r=i+p[i];\n        ans=max(ans,p[i]);\n    }\n}\n</code></pre> <p>P4555</p> <p>\u60f3\u5230\\(L[i],R[i]\\)\u5206\u522b\u8868\u793a\u5de6\u7aef\u70b9/\u53f3\u7aef\u70b9\u4e3a\\(i\\)\u65f6\u7684\u6700\u957f\u56de\u6587\u4e32\uff0c\u5219\u7b54\u6848\u4e3a\\(\\max_{i=2}^n(R[i-1]+L[i])\\).</p> <p>\u800c\\(L[i],R[i]\\)\u6570\u7ec4\u53ef\u4ee5\u7528\u8d2a\u5fc3\uff0c\u76f4\u63a5\u53cc\u6307\u9488\u5904\u7406\u3002</p> <p>\u8bbe\\(j\\)\u4e3a\u7b2c\u4e00\u4e2a\u6ee1\u8db3\\(j+p[j]\\geq i\\)\u7684,\u5728\u6e90\u5b57\u7b26\u4e32\u4e2d\u4f4d\u7f6e\u4e3a\\(k\\)\uff0c\u65b0\u5b57\u7b26\u4e32\u4e2d\u4f4d\u7f6e\u4e3a\\(i\\)\u7684\u4e2d\u95f4\u70b9\uff0c\u5219\\(R[k]=\\min(p[j],i-j+1)\\);</p> <p>\u7c7b\u4f3c\u7684\\(L[k]=min(p[j],j-i+1)\\)\uff1b</p> <p>\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u8d2a\u5fc3\u662f\u5bf9\u7684\uff0c\u8003\u8651\u53f3\u7aef\u70b9\u4e3a\\(i\\)\u7684\u56de\u6587\u4e32\u6700\u957f\u5c31\u662f\\(i-j+1\\)\u7684\u957f\u5ea6(\u6307\u7684\u662f\u65b0\u5b57\u7b26\u4e32\u4e2d\u7684\u4e0b\u6807\u5dee)\uff0c\u56e0\u6b64\u5982\u679c\u6709\\(j\\)\u6ee1\u8db3\\(j+p[j]\\geq i\\),\u90a3\u4e48\\(j+1,j+2,...\\)\u5904\u7684\u56de\u6587\u4e32\u4e00\u5b9a\u77ed\u4e8e\\(j\\)\u5904\u7684,\u5373\u7b2c\u4e00\u4e2a\u6ee1\u8db3\u4e0a\u8ff0\u5f0f\u5b50\u7684\\(j\\)\u5904\u7684\u56de\u6587\u4e32\u4e3a\u6240\u6c42\u6700\u957f\u4e32\u3002\u53ef\u4ee5\u770b\u51fa\\(j\\)\u5355\u8c03\u9012\u589e\uff0c\u590d\u6742\u5ea6\\(O(n)\\).</p> <pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\nconst int N=2e5+10;\nint p[N],a[N],R[N],L[N];\nchar ch[N];\nint n,tot,r,mid;\nvoid init(){\n    a[1]=-1;\n    for(int i=1;i&lt;=n;++i) a[i*2]=0,a[i*2+1]=ch[i]-'a'+1;\n    tot=2*n+2,a[tot]=0;\n}\nvoid manacher(){\n    init();\n    for(int i=1;i&lt;=tot;++i){\n        if(i&lt;r) p[i]=min(p[mid*2-i],r-i);\n        else p[i]=0;\n        while(i+p[i]+1&lt;=tot &amp;&amp; i-p[i]-1&gt;=1 &amp;&amp; a[i+p[i]+1]==a[i-p[i]-1]) p[i]++;\n        if(i+p[i]&gt;r) mid=i,r=i+p[i];\n    }\n}\nint main(){\n    scanf(\"%s\",ch+1);n=strlen(ch+1);\n    manacher();\n    int j=0,i=0;\n    for(int k=1;k&lt;=n;++k){\n        i=k*2+1;\n        while(j+p[j]&lt;i &amp;&amp; j&lt;=tot) ++j;\n        R[k]=min(p[j],i-j+1);\n    }\n    j=tot;\n    for(int k=n;k&gt;=1;--k){\n        i=k*2+1;\n        while(i&lt;j-p[j] &amp;&amp; j&gt;=1) --j;\n        L[k]=min(p[j],j-i+1);\n    }\n    int ans=0;\n    for(int i=2;i&lt;=n;++i) ans=max(ans,R[i-1]+L[i]);\n    printf(\"%d\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/wqs%E4%BA%8C%E5%88%86/","title":"wqs\u4e8c\u5206","text":""},{"location":"my%20past/OI/wqs%E4%BA%8C%E5%88%86/#_1","title":"\u5e94\u7528","text":"<p>\u6709\\(n\\)\u4e2a\u7269\u54c1\uff0c\u8981\u6c42\u4f60\u9009\u51fa \\(m\\) \u4e2a\uff0c\u9009\u7684\u65f6\u5019\u5e26\u6709\u9650\u5236\uff0c\u8981\u4f60\u6c42\u51fa\u6700\u4f18\u7684\u65b9\u6848\u3002</p> <p>P1484</p> <p>\u4e0d\u5e26\u9650\u5236\u6c42\u89e3\u53ef\u4ee5\u7528\\(dp\\).</p> <p>\u8bbe\\(f[i][0/1]\\)\u8868\u793a\u5f53\u524d\u4e3a\u7b2c\\(i\\)\u4e2a\u5751\uff0c\u9009\u6216\u4e0d\u9009\u65f6\u7684\u6700\u5927\u83b7\u5229\uff0c\\(g[i][0/1]\\)\u4e3a\u5bf9\u5e94\\(f[i][0/1]\\)\u7684\u6700\u5c0f\u6316\u5751\u6b21\u6570\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u53ea\u8981\u5224\u65ad\u6700\u5927\u83b7\u5229\u65f6\u7684\u6700\u5c0f\u6b21\u6570\u662f\u5426\u6ee1\u8db3\\(\\leq m\\)\u5373\u53ef\u4e8c\u5206\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long \nusing namespace std;\nconst int N=5e5+10,INF=0x3f3f3f3f;\nint a[N],f[N][2],g[N][2];\nint n,m,maxn,ans,cnt;\nbool check(int k){\n    //memset(f,0,sizeof f),memset(g,0,sizeof g);\n    f[0][0]=f[0][1]=g[0][0]=g[0][1]=0;\n    for(int i=1;i&lt;=n;++i){\n        if(f[i-1][0]&gt;f[i-1][1] || (f[i-1][0]==f[i-1][1] &amp;&amp; g[i-1][0]&lt;g[i-1][1])) f[i][0]=f[i-1][0],g[i][0]=g[i-1][0];\n        else f[i][0]=f[i-1][1],g[i][0]=g[i-1][1];\n        f[i][1]=f[i-1][0]+a[i]-k,g[i][1]=g[i-1][0]+1;   \n    }\n    ans=-INF,cnt=0;\n    if(f[n][0]&gt;f[n][1] || (f[n][0]==f[n][1] &amp;&amp; g[n][0]&lt;g[n][1])) ans=f[n][0],cnt=g[n][0];\n    else ans=f[n][1],cnt=g[n][1];\n    return cnt&lt;=m;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;a[i]);\n    if(check(0)){\n        printf(\"%lld\",ans);return 0;\n    }\n    int l=0,r=INF,res=0;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)) res=ans+m*mid,r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%lld\",res);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/xor/","title":"\u5f02\u6216","text":"<p>P3760</p> <p>\u5bf9\u4e8e\u8fde\u7eed\u533a\u95f4\uff0c\u53ef\u4ee5\u60f3\u5230\u7528\u524d\u7f00\u548c\\(s[j]-s[i-1]\\)\u8868\u793a\\(\\sum_{k=i}^{j}a[k]\\)\u3002</p> <p>\u90a3\u4e48\uff0c\u5bf9\u4e8e\u7b54\u6848\u6bcf\u4e00\u4f4d\\(k\\)\uff0c\u6c42\u51fa\u6709\u591a\u5c11\\(s[j]-s[i]\\)\u7b2c\\(k\\)\u4f4d\u4e3a1\u3002</p> <p>\u90a3\u4e48\uff0c\u4ece\u5934\u5230\u5c3e\u626b\u63cf\\(s[j]\\),\u7528\u6743\u503c\u6811\u72b6\u6570\u7ec4(\u4e24\u4e2a\uff0c\u4e00\u4e2a\u7ef4\u62a4\u7b2ck\u4f4d\u662f0\uff0c\u4e00\u4e2a\u7ef4\u62a4\u7b2ck\u4f4d\u662f1)\u7ef4\u62a4\u4e4b\u524d\u7684\\(s[i]\\),\u5bf9\u8fd9\u4e00\u4f4d\u7684\u7b54\u6848\u6709\u8d21\u732e\u7684\u53ea\u6709\u90a3\u4e9b\u7b2ck\u4f4d\u4e3a1\u4e14\u7b2ck\u4f4d\u5411\u53f3\u7684\u6570\u6bd4s[i]\u7b2ck\u4f4d\u5411\u53f3\u7684\u6570\u5927\u7684\u6216\u8005\u7b2ck\u4f4d\u4e3a0\u4e14\u7b2ck\u4f4d\u5411\u53f3\u7684\u6570\u4e0d\u6bd4s[i]\u7b2ck\u4f4d\u5411\u53f3\u7684\u6570\u5927\u7684\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \n#define lowbit(x) (x&amp;-x)\nusing namespace std;\nconst int N=1e5+10,C=1e6+10;\nint s[N],a[N],f[C][2];\nint n,maxn,ans;\nvoid change(int i,int x,int d){\n    while(x&lt;C)f[x][i]+=d,x+=lowbit(x);\n}\nint sum(int i,int x){\n    int ans=0;\n    while(x&gt;0)ans+=f[x][i],x-=lowbit(x);\n    return ans;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]),s[i]=s[i-1]+a[i],maxn=max(maxn,s[i]);\n    for(int v=0;v&lt;=20;++v){\n        if((1&lt;&lt;v)&gt;maxn)break;\n        int cnt=0;\n        memset(f,0,sizeof f);\n        change(0,1,1);\n        for(int i=1;i&lt;=n;++i){\n            int tmp=s[i]&amp;((1&lt;&lt;v)-1),type=(s[i]&gt;&gt;v)&amp;1;\n\n            if(type)cnt+=sum(1,C-1)-sum(1,tmp+1)+sum(0,tmp+1);\n            else cnt+=sum(0,C-1)-sum(0,tmp+1)+sum(1,tmp+1);\n            change(type,tmp+1,1);\n        }\n        if(cnt%2)ans|=(1&lt;&lt;v);\n    }\n\n    printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E4%B8%BB%E5%B8%AD%E6%A0%91/","title":"\u4e3b\u5e2d\u6811","text":"<p>3939</p> <p>\u6ce8\u610f\u52a8\u6001\u5f00\u70b9\u7684\u5199\u6cd5\u4ee5\u53ca\u4fee\u6539\u64cd\u4f5c\uff1a\u4fee\u6539\u53ea\u9700\u8981\u6539\u524d\u4e00\u4e2a\u70b9\uff0c\u540e\u4e00\u4e2a\u70b9\u7ef4\u62a4\u7684\u503c\u4e0d\u53d8.</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n\nusing namespace std;\nconst int N=3e5+10;\nint rt[N],ls[N*60],rs[N*60],a[N],tre[N*60];\nint n,m,op,l,r,c,x,cnt;\n\nvoid change(int &amp;x,int x1,int l,int r,int pos,int k) {\n    x=++cnt;\n    rs[x]=rs[x1];//\u6ce8\u610f\n    ls[x]=ls[x1];\n    tre[x]=tre[x1]+k;\n    if(l==r) {\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(mid&gt;=pos) {\n        change(ls[x],ls[x1],l,mid,pos,k);\n    } else {\n        change(rs[x],rs[x1],mid+1,r,pos,k);\n    }\n    return;\n}\nint abs1(int x){\n    return x&gt;0?x:-x;\n}\nint query(int x1,int x2,int l,int r,int pos) {\n    if(l==r){\n        return abs1(tre[x2]-tre[x1]);   \n    }\n    int mid=l+r&gt;&gt;1;\n    if(mid&gt;=pos) {\n        return query(ls[x1],ls[x2],l,mid,pos);\n    } else {\n        return query(rs[x1],rs[x2],mid+1,r,pos);\n    }\n}\nint read1(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid write1(int x){\n    if(x&lt;0)putchar('-'),x=-x;\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n    return;\n}\nint main() {\n    cnt=0;\n    n=read1(),m=read1();\n    for(int i=1; i&lt;=n; ++i)a[i]=read1();\n    for(int i=1; i&lt;=n; ++i){\n        change(rt[i],rt[i-1],0,N+1,a[i],1);\n    }   \n    for(int i=1; i&lt;=m; ++i) {\n        op=read1();\n        if(op==1) {\n            l=read1(),r=read1(),c=read1();\n            int ans=query(rt[l-1],rt[r],0,N+1,c);\n            write1(ans);\n            putchar('\\n');\n        } else {\n            x=read1();\n            change(rt[x],rt[x],0,N+1,a[x],-1);\n            change(rt[x],rt[x],0,N+1,a[x+1], 1);\n            swap(a[x],a[x+1]);\n        }\n   }\n    return 0;\n}\n</code></pre> <p>P6166 &amp; P1383</p> <p>\u4e24\u4e2a\u9898\u5dee\u4e0d\u591a\uff0c\u90fd\u6709\u4e09\u79cd\u64cd\u4f5c\uff1a\u8f93\u5165\uff0c\u8f93\u51fa\u548c\u64a4\u56de\u3002</p> <p>\u6ce8\u610f\u64a4\u56de\u53ef\u4ee5\u64a4\u56de\u64a4\u56de\u3002~~???~~</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6839\u8282\u70b9\uff0c\u6211\u4eec\u53ef\u4ee5\u8bb0\u5f55\u4e00\u4e2anum\u6570\u7ec4\uff0c\u4ee3\u8868\u8fd9\u4e2a\u7248\u672c\u7684\u5b57\u7b26\u4e32\u4e2d\u6709\u51e0\u4e2a\u5b57\u7b26;</p> <p>\u6240\u4ee5\u6709\uff1a <pre><code>    num[rt[tot]]=num[rt[tot-1]]+1\n</code></pre></p> <p>\u90a3\u4e48\u5bf9\u4e8e\u8f93\u5165\u64cd\u4f5c\uff0c\u5c31\u76f4\u63a5\u5728num[tot]\u7684\u4f4d\u7f6e\u63d2\u5165\u5b57\u6bcd\u5373\u53ef\u3002\u5728\u9012\u5f52\u5230\u6700\u540e\u4e00\u5c42\u65f6\u5728val\u6570\u7ec4\u4e2d\u8bb0\u5f55\u3002(l==r)</p> <p>\u8f93\u51fa\u64cd\u4f5c\u6ce8\u610f\u662f\u67e5\u8be2p+1,\u56e0\u4e3ap\u4ece0\u5f00\u59cb\u3002</p> <p>\u64a4\u56de\u64cd\u4f5c\u76f4\u63a5\u8d4b\u503c\u6839\u8282\u70b9\u5373\u53ef\u3002</p> <p>code time: <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=1e6+10,M=N*21;\nint n,cnt,tot,p,u;\nint ls[M],rs[M],val[M],num[N],rt[N];\nchar ch[5];\nvoid add(int &amp;now,int pre,int l,int r,int pos,int k){\n    now=++cnt;\n    ls[now]=ls[pre];\n    rs[now]=rs[pre];\n    if(l==r){\n        val[now]=k;\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(pos&lt;=mid)add(ls[now],ls[pre],l,mid,pos,k);\n    else add(rs[now],rs[pre],mid+1,r,pos,k);\n    return;\n}\nint query(int x,int l,int r,int pos){\n    if(l==r)return val[x];\n    int mid=l+r&gt;&gt;1;\n    if(pos&lt;=mid)return query(ls[x],l,mid,pos);\n    else return query(rs[x],mid+1,r,pos);\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%s\",ch);\n        if(ch[0]=='T'){\n            scanf(\"%s\",ch);\n            int c=ch[0]-'a'+1;  \n            ++tot;\n            num[tot]=num[tot-1]+1;\n            add(rt[tot],rt[tot-1],1,N,num[tot],c);\n        }else if(ch[0]=='P'){\n            scanf(\"%d\",&amp;p);\n            int q=query(rt[tot],1,N,p+1);\n            printf(\"%c\\n\",q+'a'-1);\n        }else{\n            scanf(\"%d\",&amp;u);\n            tot++;\n            rt[tot]=rt[tot-u-1];\n            num[tot]=num[tot-u-1];\n        }\n    }\n    return 0;\n}\n</code></pre></p> <p>P2633 &amp; SP10628</p> <p>\u8fd9\u4e24\u9053\u9898\u5f88\u597d\uff0c\u6709\u5f88\u591a\u7ec6\u8282\u503c\u5f97\u8bf4\u8bf4\u3002</p> <p>\u9996\u5148\uff0c\u770b\u5230\u5728\u6811\u4e0a\u6c42\u4e24\u70b9\u95f4\u5185\u5bb9\u7684\u95ee\u9898\uff0c\u5c31\u4e0d\u96be\u60f3\u5230\u6811\u5256lca\uff0c\u800c\u4e14\u662f\u7b2ck\u5c0f\uff0c\u5c31\u8981\u7528\u4e3b\u5e2d\u6811\uff0c\u800c\u8fd9\u9053\u9898\u4e5f\u662f\u4e00\u6837\u3002</p> <p>\u53ea\u4e0d\u8fc7\u6bcf\u6b21\u8df3top\u65f6\u7d2f\u52a0\u7684\u4e0d\u518d\u662f\u5177\u4f53\u7684\u503c\uff0c\u800c\u662f\u4e00\u4e2a\u533a\u95f4\u4e24\u7aef\u5bf9\u5e94\u7684\u6839\u8282\u70b9\u3002</p> <p>\u8fd9\u6837\uff0c\u5728\u6574\u4f53\u67e5\u8be2\u65f6\uff0c\u5c06\u6240\u6709\u53f3\u7aef\u70b9\u52a0\u8d77\u6765\uff0c\u6240\u6709\u5de6\u7aef\u70b9\u51cf\u4e0b\u53bb\uff0c\u5c31\u53ef\u4ee5\u7ec4\u6210\u7531\u4e24\u70b9\u95f4\u6240\u6709\u6743\u503c\u7ec4\u6210\u7684\u4e3b\u5e2d\u6811\u4e86\u3002</p> <ul> <li>\u4e00\u4e9b\u7ec6\u8282\uff1a</li> </ul> <p>1) \u6811\u5256\u65f6\u8fd8\u662f\u6ce8\u610f\uff0cdfs\u5e8f\u8981\u5148\u91cd\u513f\u5b50\u518d\u8f7b\u513f\u5b50\u3002</p> <p>2) \u7b2ck\u5c0f\u4eff\u7167treap\u7684\u5199\u6cd5\uff0c\u6bcf\u6b21\u5411\u53f3\u641c\u90fd\u5c06k-tmp;</p> <p>3) \u6743\u503c\u662f0\\~MAXINT,\u6240\u4ee5\u4e3b\u5e2d\u6811\u6570\u7ec4\u522b\u5f00\u5c0f\u4e86\uff0c\u81f3\u5c1131\u500d.</p> <p>4) b1,b2\u6570\u7ec4\u8bb0\u5f55\u7684\u65f6\u7531dfs\u5e8f\u5f97\u51fa\u7684\u6839\u8282\u70b9\u5e8f\u53f7\uff0c\u6240\u4ee5\u53ef\u4ee5\u76f4\u63a5\u7528\u3002</p> <p>5) \u6ce8\u610f\u6240\u6709\u5de6\u7aef\u70b9\u90fd\u662f\u6df1\u5ea6\u4f4e\u7684\u70b9\uff0c\u5e76\u4e14\u56e0\u4e3a\u5dee\u5206\uff0cdfs\u5e8f\u8981-1\uff1b</p> <p>6) \u5efa\u4e3b\u5e2d\u6811\u6309\u7167dfs\u5e8f\u5efa\u3002</p> <p>code time:</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=1e5+10,M=N*40,C=3e9;\nint rt[N],ls[M],rs[M],num[M];\nint n,m,cnt,tot,cur,u,v,k;\nint a[N],head[N],sz[N],fa[N],son[N],dep[N],top[N],dfn[N],b1[N],b2[N],id[N];\nstruct node{\n    int v,nxt;\n}e[N&lt;&lt;1];\nvoid add(int u,int v){\n    e[++cnt].v=v;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n}\nvoid dfs1(int u,int p){\n    sz[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p)continue;\n        dep[v]=dep[u]+1;\n        fa[v]=u;\n        dfs1(v,u);\n        sz[u]+=sz[v];\n        if(sz[v]&gt;sz[son[u]])son[u]=v;\n    }\n}\nvoid dfs2(int u,int t){\n    top[u]=t;\n    id[u]=++tot;\n    dfn[tot]=u;\n    if(son[u])dfs2(son[u],t);\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==fa[u] || v==son[u])continue;\n        dfs2(v,v);\n    }\n}\nvoid add(int &amp;now,int pre,int l,int r,int pos){\n    now=++cur;\n    ls[now]=ls[pre];\n    rs[now]=rs[pre];\n    num[now]=num[pre]+1;\n    if(l==r){\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(pos&lt;=mid)add(ls[now],ls[pre],l,mid,pos);\n    else add(rs[now],rs[pre],mid+1,r,pos);\n\n}\nint query(int l,int r,int k){\n    if(l==r)return l;\n    int tmp=0,mid=l+r&gt;&gt;1;\n    for(int i=1;i&lt;=b1[0];++i){\n        tmp+=num[ls[b1[i]]];\n    }\n    for(int i=1;i&lt;=b2[0];++i){\n        tmp-=num[ls[b2[i]]];\n    }\n    if(k&lt;=tmp){\n        for(int i=1;i&lt;=b1[0];++i){\n            b1[i]=ls[b1[i]];\n        }\n        for(int i=1;i&lt;=b2[0];++i){\n            b2[i]=ls[b2[i]];\n        }\n        return query(l,mid,k);\n    }else{\n        for(int i=1;i&lt;=b1[0];++i){\n            b1[i]=rs[b1[i]];\n        }\n        for(int i=1;i&lt;=b2[0];++i){\n            b2[i]=rs[b2[i]];\n        }\n        return query(mid+1,r,k-tmp);\n    }\n}\nint get1(int u,int v,int k){\n    b1[0]=0;\n    b2[0]=0;\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]])swap(u,v);\n        b1[++b1[0]]=rt[id[u]];\n        b2[++b2[0]]=rt[id[top[u]]-1];\n        u=fa[top[u]];\n    }\n    if(dep[u]&lt;dep[v])swap(u,v);\n    b1[++b1[0]]=rt[id[u]];\n    b2[++b2[0]]=rt[id[v]-1];\n    return query(0,C,k);\n}\nsigned main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%lld\",&amp;a[i]);\n    }\n    for(int i=1;i&lt;n;++i){\n        scanf(\"%lld%lld\",&amp;u,&amp;v);\n        add(u,v);\n        add(v,u);\n    }\n    tot=0;\n    dfs1(1,1);\n    dfs2(1,1);\n    cur=0;\n    for(int i=1;i&lt;=tot;++i){\n        add(rt[i],rt[i-1],0,C,a[dfn[i]]);\n    }\n    int last=0;\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld%lld\",&amp;u,&amp;v,&amp;k);\n        u^=last;\n        int tmp=get1(u,v,k);\n        printf(\"%lld\\n\",tmp);\n        last=tmp;   \n    }\n    return 0;\n}\n</code></pre> ~~Q.\u5982\u4f55\u589e\u52a0\u505a\u9898\u91cf\uff1fA.\u53cc\u500d\u7ecf\u9a8c!~~</p>"},{"location":"my%20past/OI/%E4%BA%8C%E5%88%86/","title":"\u4e8c\u5206","text":"<p>P1663</p> <p>\u4e8c\u5206\u5f53\u524d\u7684yy\u5750\u6807\uff0c\u6709\u4e09\u79cd\u60c5\u51b5\uff1a</p> <p>1.\u4e24\u4e2a\u70b9\u4e00\u6837\u9ad8\uff0cy\u5750\u6807\u76f8\u540c\uff0c\u5219\u53ea\u8981yy\u5c0f\u4e8ey\u5c31\u4e0d\u6ee1\u8db3</p> <p>2.\u5de6\u70b9\u4f4e\u53f3\u70b9\u9ad8\uff0c\u5219\u6839\u636e\u4e24\u70b9\u8868\u793a\u76f4\u7ebf\uff0cxx\u5e94\u4e3a</p> \\[ \\frac{x_2-x_1}{y_2-y_1}=\\frac{xx-x_1}{yy-y_1} \\\\ xx=\\frac{x_2-x_1}{y_2-y_1}* (yy-y_1)+x_1 \\] <p>\u90a3\u4e48R=min(R,xx)</p> <p>3.\u5de6\u8fb9\u9ad8\uff0c\u540c\u7406\uff0cL=max(L,xx)</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst double P=0.001,INF=1000001.0;\nconst int N=1e5+10;\nstruct node{\n    double x,y;\n}q[N];\nint n;\nbool check(double y){\n    double L=0,R=INF;\n    for(int i=2;i&lt;=n;++i){\n        if(q[i].y==q[i-1].y){\n            if(y&lt;q[i].y)return false;\n        }\n        else if(q[i].y&gt;q[i-1].y){\n            double x1=q[i-1].x,x2=q[i].x,y1=q[i-1].y,y2=q[i].y;\n            double x=((x2-x1)/(y2-y1))*(y-y1)+x1;\n            R=min(R,x);\n        }\n        else{\n            double x1=q[i-1].x,x2=q[i].x,y1=q[i-1].y,y2=q[i].y;\n            double x=((x2-x1)/(y2-y1))*(y-y1)+x1;\n            L=max(L,x);\n        }\n    }\n    return L&lt;=R;\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%lf%lf\",&amp;q[i].x,&amp;q[i].y);\n    }\n    double l=0.0,r=INF,ans=-1.0;\n    while(l+P&lt;=r){\n        double mid=(l+r)/2.0;\n        if(check(mid)){\n            r=mid;\n            ans=mid;\n        }else l=mid+P;\n    }\n    printf(\"%.2lf\",ans);\n    return 0;\n}\n</code></pre> <p>P1661</p> <p>\u4e8c\u5206\u65f6\u95f4\uff0c\u5224\u65ad(\u66fc\u54c8\u987f\u8ddd\u79bb+1)/2\u662f\u5426\u5c0f\u4e8e\u7b49\u4e8e\u5f53\u524d\u7684\u65f6\u95f4\uff0c\u6ee1\u8db3\u5c31\u5c06\u4e24\u4e2a\u70b9\u7528\u5e76\u67e5\u96c6\u8fde\u63a5\uff0c\u6700\u540e\u68c0\u67e5\u662f\u5426\u90fd\u5e76\u5728\u4e00\u4e2a\u70b9\u4e0a\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=55,INF=1e10;\nint abs1(int x){return x&gt;0?x:-x;}\nint dis(int x1,int y1,int x2,int y2){return abs1(x1-x2)+abs1(y1-y2);}\nstruct node{\n    int x,y;\n}q[N];\nint n;\nint fa[N],vis[N];\nint getfa(int u){\n    if(fa[u]==u)return u;\n    return fa[u]=getfa(fa[u]);\n}\nbool check(int x){\n    for(int i=1;i&lt;=n;++i)fa[i]=i;\n    for(int i=1;i&lt;n;++i){\n        for(int j=i+1;j&lt;=n;++j){\n            int d=dis(q[i].x,q[i].y,q[j].x,q[j].y),t=(d+1)&gt;&gt;1;\n            if(t&lt;=x)fa[getfa(i)]=getfa(j);\n        }\n    }\n    memset(vis,0,sizeof vis);\n    for(int i=1;i&lt;=n;++i)vis[getfa(i)]++;\n    for(int i=1;i&lt;=n;++i)if(vis[i]&gt;=n)return true;\n    return false;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld%lld\",&amp;q[i].x,&amp;q[i].y);\n    int ans=0,l=0,r=INF;\n    while(l&lt;r){\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)){\n            r=mid;\n            ans=mid;\n        }else l=mid+1;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n} \n</code></pre> <p>P7514</p> <p>\u53ef\u4ee5\u4e8c\u5206\u4e00\u4e0b\u6781\u5dee\\(x\\)\uff0c\u5e76\u679a\u4e3e\u4e00\u4e0b\u533a\u95f4\\([L,L+x]\\),\u5176\u4e2d\\(L\\)\u53ef\u4ee5\u662f\u6240\u6709\u6b63\u53cd\u9762\u4e2d\u7684\u4efb\u610f\u503c\uff0c\u4e00\u5171\\(2n\\)\u4e2a\u3002\u56e0\u4e3a\u6240\u6709\u7684\\(a_i\\)\u662f\u5355\u589e\u7684\uff0c\u6240\u6709\u4e0d\u5728\u533a\u95f4\u7684\u6570\u4e00\u5b9a\u6784\u6210\u524d\u540e\u7f00\uff0c\u90a3\u4e48\u8fd9\u4e9b\u5361\u724c\u4e00\u5b9a\u8981\u7ffb\u9762\uff0c\u5e76\u4e14\u7ffb\u5b8c\u9762\u7684\\(b_i\\)\u4e5f\u8981\u5728\u533a\u95f4\u5185\uff0c\u6240\u4ee5\u8fd9\u6837\u679a\u4e3e\u5c31\u53ef\u4ee5\u5c06\u95ee\u9898\u8f6c\u5316\u6210\u524d\u540e\u7f00\u7684\\(RMQ\\)\u6700\u5927\u548c\u6700\u5c0f\u662f\u5426\u90fd\u5728\u533a\u95f4\u5185\uff0c\u4ee5\u53ca\u524d\u540e\u7f00\u662f\u5426\u8d85\u8fc7\u4e86\\(m\\)\u4e2a\u6570\u3002\u786e\u5b9a\u524d\u540e\u7f00\u7684\u4f4d\u7f6e\u53ef\u4ee5\u53cc\u6307\u9488\u722c\u4e00\u4e0b\u7ef4\u62a4\uff0c\u662f\\(O(n)\\)\u7684\u3002\\(RMQ\\)\u4e5f\u662f\\(O(n)\\)\u7684(\\(st\\)\u8868)\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\\(O(n\\log n)\\)</p> <p>~~\u5927\u5e38\u6570\u9009\u624b\u8868\u793a\u5f88\u6de6~~</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=1000010,K=21,INF=1e9+10;\nstruct node{\n    int a,b;\n}a[N];\n\nint n,m,cnt;\nint b[N+N],Log[N],Max[N][K],Min[N][K];\nint read1(){\n    int x=0;char ch=getchar();\n    while(ch&lt;'0' || ch&gt;'9') ch=getchar();\n    while(ch&gt;='0' &amp;&amp; ch&lt;='9') x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nvoid init(){\n    Log[1]=0;\n    for(int i=2;i&lt;=n;++i) Log[i]=Log[i&gt;&gt;1]+1;\n    for(int i=1;i&lt;=n;++i) Max[i][0]=Min[i][0]=a[i].b;\n    for(int j=1;(1&lt;&lt;j)&lt;=n;++j)\n        for(int i=1;i+(1&lt;&lt;(j-1))&lt;=n;++i)\n            Min[i][j]=INF,Min[i][j]=min(Min[i][j-1],Min[i+(1&lt;&lt;(j-1))][j-1]),Max[i][j]=max(Max[i][j-1],Max[i+(1&lt;&lt;(j-1))][j-1]);\n}\nint query(int t,int l,int r){\n    if(l&gt;r){\n        if(!t) return INF;\n        else return 0;\n    }\n    int k=Log[r-l+1];\n    if(!t) return min(Min[l][k],Min[r-(1&lt;&lt;k)+1][k]);\n    else return max(Max[l][k],Max[r-(1&lt;&lt;k)+1][k]);\n} \nbool check(int x){\n    bool flag=false;\n    int l=1,r=0,L=0,R=0,_min=0,_max=0,tot=0;\n    for(int i=1;i&lt;=cnt;++i){\n        L=b[i],R=b[i]+x;\n        while(a[l].a&lt;L &amp;&amp; l&lt;=n) ++l;\n        while(a[r+1].a&lt;=R &amp;&amp; r+1&lt;=n) ++r;\n        tot=l-1+n-r;\n        if(tot&gt;m)continue;\n        _min=min(query(0,1,l-1),query(0,r+1,n)),_max=max(query(1,1,l-1),query(1,r+1,n));\n        if(_min&lt;L || _max&gt;R)continue;\n        if(_min&gt;=L &amp;&amp; _max&lt;=R){\n            flag=true;break;\n        }\n    }\n    return flag;\n}\n\nint main(){\n    //freopen(\"P7514_9.txt\",\"r\",stdin);\n    n=read1(),m=read1();cnt=0;\n    for(int i=1;i&lt;=n;++i) a[i].a=read1(),b[++cnt]=a[i].a;\n    for(int i=1;i&lt;=n;++i) a[i].b=read1(),b[++cnt]=a[i].b;\n    sort(b+1,b+cnt+1,cmp);\n    init();\n    int l=0,r=b[cnt]-b[1],ans=0;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)) ans=mid,r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%d\",ans);\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/%E4%BA%8C%E7%BA%A7%E6%8C%87%E9%92%88/","title":"\u4e8c\u7ef4\u6570\u7ec4\u4e0e\u4e8c\u7ea7\u6307\u9488","text":"<ul> <li>\u4e8c\u7ef4\u6570\u7ec4\u4f20\u53c2\u65f6\u4e0d\u53ef\u9000\u5316\u6210\u4e8c\u7ea7\u6307\u9488\uff0c\u4f46\u662f\u53ef\u4ee5\u8fdb\u884c\u5982\u4e0b~~\u9a9a~~\u64cd\u4f5c</li> </ul> <p><pre><code>#include&lt;iostream&gt;\nusing namespace std;\nvoid f(char **p){\n    for(int i=0;i&lt;10;++i){\n        for(int j=0;j&lt;10;++j) cout&lt;&lt;(int)(*(p[i]+j))&lt;&lt;\" \";\n        cout&lt;&lt;endl;\n    }\n}\nchar *a[10];\nchar b[10][10];\nint main(){\n    for(int i=0;i&lt;10;++i)\n        for(int j=0;j&lt;10;++j) b[i][j]=i*10+j;\n    for(int i=0;i&lt;10;++i) a[i]=b[i];\n    char **p=a;\n    f(p);\n    return 0;\n}\n</code></pre> \u53ef\u4ee5\u7528\u4e00\u7ef4\u6307\u9488\u6570\u7ec4\u628a\u4e8c\u7ef4\u6570\u7ec4\u5b58\u4e0b\u6765\uff0c\u518d\u7528\u4e8c\u7ea7\u6307\u9488\u5b58\u6307\u9488\u6570\u7ec4\u7684\u6570\u7ec4\u540d\u3002</p> <p>\u6240\u4ee5\u8bf4\u6307\u9488\u6570\u7ec4\u7684\u6570\u7ec4\u540d\u5e94\u8be5\u4e5f\u662f\u4e2a\u6307\u9488\u3002</p> <p>\u6309\u7406\u6765\u8bf4\u4e8c\u7ef4\u6570\u7ec4\u7684\u6570\u7ec4\u540d\u4e5f\u662f\u4e2a\u6307\u5411\u6307\u9488\u6570\u7ec4\u7684\u6307\u9488\u3002~~\u4f46\u662f\u5c31\u662f\u4e0d\u80fd\u76f4\u63a5\u4f20\u53c2\u7ed9\u4e8c\u7ea7\u6307\u9488~~</p>"},{"location":"my%20past/OI/%E4%BC%98%E5%85%88%E9%98%9F%E5%88%97/","title":"\u4f18\u5148\u961f\u5217/\u4e8c\u53c9\u5806","text":"<p>P7913</p> <p>\u76f4\u63a5\u7528\u5806\u4f18\u5316\u6a21\u62df\u3002</p> <p>\u5efa\u4e24\u4e2a\u5806\uff0c\u5206\u522b\u7ef4\u62a4\\(lq:\\)\u51fa\u53d1\u65f6\u95f4+\u5360\u636e\u5eca\u6865\u7f16\u53f7\uff0c\u548c\\(wq:\\)\u7a7a\u95f2\u5eca\u6865\u7f16\u53f7\u3002</p> <p>\u6bcf\u6b21\u5c06\u5c0f\u4e8e\\(tmp[i].l\\)\u7684\u5eca\u6865\u4ece\\(lq\\)\u79cd\u91ca\u653e\u51fa\u6765\uff0c\u52a0\u5165\\(wq\\)\u4e2d\u3002</p> <p>\u5982\u679c\u6ca1\u6709\u7a7a\u95f2\u5eca\u6865\u76f4\u63a5\u8df3\u8fc7(\u8fdc\u533a\u60c5\u51b5)</p> <p>\u5426\u5219\u5c31\u5c06\u5b83\u52a0\u5230\u7f16\u53f7\u6700\u5c0f\u7684\u5eca\u6865\\(pos\\)\u4e2d\uff0c\u5e76\u5c06\u8fd9\u4e2a\u5eca\u6865\u4ece\\(wq\\)\u4e2d\u53bb\u9664\uff0c\u52a0\u5165\\(lq\\). <code>make_pair(tmp[i].r,pos);</code></p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#include&lt;cstdio&gt;\n#include&lt;algorithm&gt;\n#include&lt;queue&gt;\n#include&lt;vector&gt;\nusing namespace std;\nconst int N=1e5+10;\ntypedef pair&lt;int,int&gt; pii;\nstruct node{\n    int l,r;\n}s[N],t[N];\nint n,m1,m2,ans;\nint f[N],g[N];\nbool cmp(node a,node b){return a.l&lt;b.l;}\n\nvoid cal(node* tmp,int m,int* res){\n    priority_queue&lt;pii, vector&lt;pii&gt; ,greater&lt;pii&gt; &gt; lq;\n    priority_queue&lt;int, vector&lt;int&gt; ,greater&lt;int&gt; &gt; wq;\n    for(int i=1;i&lt;=n;++i)wq.push(i);\n    for(int i=1;i&lt;=m;++i){\n        while(!lq.empty() &amp;&amp; tmp[i].l&gt;=lq.top().first){\n            wq.push(lq.top().second);\n            lq.pop();\n        }\n        if(wq.empty())continue;\n        int pos=wq.top();wq.pop();\n        res[pos]++;\n\n        lq.push(make_pair(tmp[i].r,pos));\n    }\n    for(int i=1;i&lt;=n;++i)res[i]+=res[i-1];\n}\n\nint main(){\n    scanf(\"%d%d%d\",&amp;n,&amp;m1,&amp;m2);\n    for(int i=1;i&lt;=m1;++i)scanf(\"%d%d\",&amp;s[i].l,&amp;s[i].r);    \n    for(int i=1;i&lt;=m2;++i)scanf(\"%d%d\",&amp;t[i].l,&amp;t[i].r);\n    sort(s+1,s+m1+1,cmp);\n    sort(t+1,t+m2+1,cmp);\n\n    cal(s,m1,f);\n    cal(t,m2,g);\n    ans=0;\n    for(int i=0;i&lt;=n;++i)ans=max(ans,f[i]+g[n-i]);\n\n    printf(\"%d\",ans);\n    return 0;\n}\n</code></pre> <p>P1631</p> <p>~~\u6211\u662fSB~~ \u5bf9\u4e8ea\u4e0eb\u6570\u7ec4\u7531\u4e0b\u5217\u4e0d\u7b49\u5f0f\u5173\u7cfb\uff1a <pre><code>a[1]+b[1]&lt;=a[1]+b[2]&lt;=...&lt;=a[1]+b[n]\na[2]+b[1]&lt;=a[2]+b[2]&lt;=...&lt;=a[2]+b[n]\n.\n.\n.\na[n]+b[1]&lt;=a[n]+b[2]&lt;=...&lt;=a[n]+b[n]\n</code></pre> \u90a3\u4e48\u5c31\u5c06n\u4e2a\u4e0d\u7b49\u5f0f\u7684\u7b2c\u4e00\u4e2a\u6570\u63a8\u8fdb\u5806\u91cc\uff0c\u6bcf\u6b21\u5f39\u51fa\u6700\u5c0f\u7684\uff0c\u5e76\u5c06\u5b83\u5bf9\u5e94\u7684\u4e0d\u7b49\u5f0f\u4e2d\u5b83\u7684\u4e0b\u4e00\u4e2a\u6570\u5165\u5806\u5373\u53ef\u3002 <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;queue&gt;\nusing namespace std;\nconst int N=2e5+10;\nint a[N],b[N],c[N];\nint n;\nstruct node{\n    int i,j,s;\n    node(int x,int y,int z){\n        i=x;\n        j=y;\n        s=z;\n    }\n    bool operator &lt;(const node &amp;a)const{\n        return a.s&lt;s;\n    }\n};\nvoid solve(){\n    priority_queue&lt;node&gt; q;\n    for(int i=1;i&lt;=n;++i){\n        int tmp=a[1]+b[i];\n        q.push(node(1,i,tmp));\n    }\n    int cnt=0;\n    for(int i=1;i&lt;=n;++i){\n        c[++cnt]=q.top().s;\n        int x1=q.top().i,y1=q.top().j;\n        q.pop();\n        int z1=a[x1+1]+b[y1];\n        q.push(node(x1+1,y1,z1)); \n    }\n    for(int i=1;i&lt;=n;++i)printf(\"%d \",c[i]); \n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;b[i]);\n    solve();\n    return 0;\n}\n</code></pre></p> <p>P2827</p> <p>\u8fd9\u9898\u7528\u5806\u6216\u4f18\u5148\u961f\u5217\"\u53ea\u80fd\"\u62ff85pts~~\u8fd9\u5bf9\u4e8e\u8003\u8bd5\u5c31\u591f\u4e86\uff0c\u8981\u4ec0\u4e48\u6b63\u89e3~~</p> <p>\u6b63\u89e3\u662f\"\u770b\u51fa\"\u5b83\u7684\u5355\u8c03\u6027\u3002</p> <ul> <li>\\(\u5982\u679ca&gt;b,a\u5206\u6210a_1,a_2,b\u5206\u6210b_1,b_2,\u5219a_1&gt;b_1,a_2&gt;b_2.\\)</li> </ul> <p>\u5176\u5b9e\u8fd9\u4e5f\u5f88\u597d\u7406\u89e3\uff0c\u6240\u4ee5\u8bc1\u660e\u7565\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u5f00\u4e09\u4e2a\u6570\u7ec4\u6a21\u62df\u961f\u5217\uff0c\u4e00\u4e2a\u5b58\\(a\\),\u4e00\u4e2a\u5b58\\(a_1\\),\u4e00\u4e2a\u5b58\\(a_2\\).</p> <p>UVA11997</p> <p>\u4e0e\u4e0a\u4e00\u9898\u7c7b\u4f3c\uff0c\u53ea\u4e0d\u8fc7\u53d8\u6210\u4e86\\(k\\)\u4e2a\u6570\u7ec4\uff0c\u6b64\u65f6\u4e00\u884c\u4e00\u884c\u505a\u5373\u53ef\u3002</p> <p>\u95ee\u9898\u662f\uff0c\u5f53\u524d\u56de\u5408\u629b\u5f03\u7684\u5927\u6570\u4f1a\u4e0d\u4f1a\u5728\u4e0b\u56de\u5408\u7528\u5230\uff1f</p> <p>\u8003\u8651\u53cd\u8bc1\uff0c\u5047\u8bbe\\(k+1\\)\u5927\u7684\u6570\u4e0b\u56de\u5408\u7528\u5230\uff0c\u6b64\u65f6\u524d\\(k\\)\u5927\u7684\u6570\u52a0\u4e0b\u56de\u5408\u6700\u5c0f\u7684\u6570\u4e00\u5b9a\u6bd4\\(k+1\\)\u5927\u7684\u6570\u52a0\u4e0b\u56de\u5408\u6700\u5c0f\u7684\u6570\u5c0f\uff0c\u5373\u4e00\u5b9a\u5b58\u5728\u81f3\u5c11\\(k\\)\u4e2a\u6bd4\u4ed6\u5c0f\u7684\u6570\uff0c\u6240\u4ee5\u7b2c\\(k+1\\)\u5927\u7684\u6570\u5c31\u53ef\u4ee5\u5ffd\u7565\uff0c\u6bcf\u6b21\u53ea\u9700\u8981\u7ef4\u62a4\\(k\\)\u4e2a\u6570\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt; \n#include&lt;cstring&gt;\n#include&lt;queue&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=810;\nint a[N][N];\nint k;\nstruct node{\n    int s,b;\n    node(int ss,int bb){\n        s=ss,b=bb;\n    }\n    bool operator &lt;(const node &amp;x)const{\n        return x.s&lt;s;\n    }\n};\nbool cmp(int a,int b){return a&lt;b;}\nvoid merge(int j){\n    priority_queue&lt;node&gt; q;\n    for(int i=1;i&lt;=k;++i)q.push(node(a[1][i]+a[j][1],1));\n    for(int i=1;i&lt;=k;++i){\n        node tmp=q.top();q.pop();\n        int s=tmp.s,b=tmp.b;\n        a[1][i]=s;\n        if(b&lt;k)q.push(node(s-a[j][b]+a[j][b+1],b+1));\n    }\n}\nsigned main(){\n    //freopen(\"UVA11997.txt\",\"r\",stdin);\n    while(scanf(\"%lld\",&amp;k)!=EOF){\n        memset(a,0,sizeof a);\n        for(int i=1;i&lt;=k;++i){\n            for(int j=1;j&lt;=k;++j)scanf(\"%lld\",&amp;a[i][j]);\n            sort(a[i]+1,a[i]+k+1,cmp);\n        }\n        for(int i=2;i&lt;=k;++i)merge(i);\n        printf(\"%lld\",a[1][1]);\n        for(int i=2;i&lt;=k;++i)printf(\" %lld\",a[1][i]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n</code></pre> <p>P8179</p> <p>16pts:</p> <p>\u76f4\u63a5\u66b4\u529b\\(dp\\).</p> <p>\u8bbe\\(g[i]\\)\u8868\u793a\u8003\u8651\u4e86\u524d\\(i\\)\u5708\u662f\u7684\u6700\u5c0f\u8d21\u732e\u3002\u5c06\u6362\u53f0\u7684\u65f6\u95f4\u52a0\u5728\u7b2c\u4e00\u5708\u7684\u8d21\u732e\u4e0a\u9762\uff0c\u76f8\u5f53\u4e8e\u53bb\u6389\u4e86\u6362\u80ce\u7684\u64cd\u4f5c\u3002</p> <p>\u5219\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <p>\\(f[i]=\\min_{j=0}^i(f[i],f[i-j]+c(o,j))\\),\\(o\\)\u8868\u793a\u5f53\u524d\u8003\u8651\u7684\u662f\u54ea\u4e00\u4e2a\u8f6e\u5b50\u3002</p> <p>\u590d\u6742\u5ea6\\(O(nm^2)\\).</p> <p>13pts:</p> <p>\u5bf9\u4e8e\\(t=0\\)\u7684\u60c5\u51b5\u5176\u5b9e\u5c31\u76f8\u5f53\u4e8e\u7ed9\u4f60\\(n\\)\u4e2a\u957f\u5ea6\u4e3a\\(m\\)\u7684\u4e0d\u7b49\u5f0f\uff0c\u8ba9\u4f60\u5408\u5e76\u51fa\u524d\\(m\\)\u4e2a\u6700\u5c0f\u7684\u503c\u3002\u76f4\u63a5\u7528\u5806+\u8d2a\u5fc3\u7ef4\u62a4\u5373\u53ef\u3002</p> <p>\u6b63\u89e3:</p> <p>\u6211\u4eec\u4e0d\u80fd\u7528\u5806\u7ef4\u62a4\u7684\u539f\u56e0\u5728\u4e8e\u5e8f\u5217\u4e0d\u5355\u8c03\uff0c\u8fd9\u662f\u7531\u6362\u80ce\u65f6\u95f4\u5f15\u8d77\u7684\uff0c\u800c\\(dp\\)\u4e0d\u4f1a\u53d7\u5f71\u54cd\u3002</p> <p>\u6ce8\u610f\u5230\u4e00\u4e2a\u8f6e\u80ce\u6700\u591a\u5728\u4f7f\u7528\\(25\\)\u5708\u540e\uff0c\u4f7f\u7528\u5f53\u524d\u8f6e\u80ce\u7684\u65f6\u95f4\u5c31\u4f1a\u5927\u4e8e\u6362\u80ce\u7684\u65f6\u95f4\u52a0\u7b2c\u4e00\u5708\u6240\u7528\u65f6\u95f4\uff0c\u5e8f\u5217\u53c8\u4e00\u6b21\u53d8\u5f97\u5355\u8c03\u3002</p> <p>\u56e0\u6b64\u6211\u4eec\u53ef\u4ee5\u5c06\u6bcf\u4e2a\u8f6e\u80ce\u524d\\(25\\)\u5708\u505a\\(dp\\)\uff0c\u540e\u9762\u7528\u5806\u7ef4\u62a4\u3002</p> <p>\u5e76\u4e0d\u4f1a\u51fa\u73b0\"\u65ad\u5c42\"\uff0c\u5373\u524d\u9762\\(dp\\)\u6ca1\u53d6\u5230\u7684\u5708\u6570\uff0c\u8be5\u8f6e\u80ce\u5728\u540e\u9762\u5806\u4e2d\u53d6\u5230\u4e86\uff0c\u56e0\u4e3a\u524d\u9762\u7684\u4e00\u5b9a\u6bd4\u540e\u9762\u7684\u66f4\u4f18\uff0c\u53d6\u6700\u4f18\u89e3\u65f6\u4f1a\u81ea\u52a8\u6dd8\u6c70\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;queue&gt;\n#define int long long \nusing namespace std;\nconst int N=510,M=2e5+10,INF=2e18,T=25;\nint n,m,t,s;\nint a[N],b[N],c[N];\nint g[M],h[M],f[N][T+T];\ninline int d(int i,int j){return a[i]+(j-1)*(j-1)*b[i];}\nstruct node{\n    int n,m,val;\n    bool operator &lt;(const node &amp;x)const{\n        return x.val&lt;val;\n    }\n    node(int _n,int _m,int _val){\n        n=_n,m=_m,val=_val;\n    }\n};\nvoid init(){\n    for(int i=1;i&lt;=n;++i){\n        f[i][0]=t;\n        for(int j=1;j&lt;=T;++j)\n            f[i][j]=f[i][j-1]+d(i,j);\n    }\n}\nvoid heap_greedy(){\n    priority_queue&lt;node&gt; q;\n    for(int i=1;i&lt;=n;++i)q.push(node(i,T+1,d(i,T+1)));  \n    for(int i=1;i&lt;=m;++i){\n        node tmp=q.top();q.pop();\n        h[i]=h[i-1]+tmp.val;\n        q.push(node(tmp.n,tmp.m+1,d(tmp.n,tmp.m+1)));\n    }\n}\nvoid dp(){\n    memset(g,0x3f,sizeof g);\n    g[0]=0;\n    for(int o=1;o&lt;=n;++o){\n        s=min(s+T,m);\n        for(int j=s;j&gt;=0;--j)\n            for(int k=min(j,T);k&gt;=0;--k)\n                g[j]=min(g[j],g[j-k]+f[o][k]);  \n    }\n}\nsigned main(){\n    scanf(\"%lld%lld%lld\",&amp;n,&amp;m,&amp;t);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld%lld\",&amp;a[i],&amp;b[i]);\n    init();\n    dp();\n    heap_greedy();\n    int ans=INF;\n    for(int i=1;i&lt;=min(m,s);++i) ans=min(ans,g[i]+h[m-i]);\n    printf(\"%lld\",ans-t);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E4%BC%98%E5%8C%96dp/","title":"\u659c\u7387\u4f18\u5316dp","text":"<p>1) \u8f6c\u79fb\u65b9\u7a0b\u7c7b\u4f3c \\(f[i]=a[i]+b[j],j&lt;=i\\) \u7684\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\\(i\\)\u524d\u9762\u7684\u4e00\u6bb5\u5408\u6cd5\u533a\u95f4\u7684\u6700\u503c\uff0c\u4ece\u800c\u5c06\\(O(n^2)\\)\u7684\u8f6c\u79fb\u4f18\u5316\u5230\\(O(n)\\)</p> <p>2) \u8f6c\u79fb\u65b9\u7a0b\u7c7b\u4f3c\\(f[i]=a[i]* b[j]+c[i]+d[j]\\)\u5c31\u4e0d\u80fd\u53ea\u662f\u5355\u8c03\u961f\u5217\u4f18\u5316\u4e86\uff0c\u6211\u4eec\u9700\u8981\u5355\u8c03\u961f\u5217+\u659c\u7387\u4f18\u5316</p> <p>\u5148\u6765\u4e00\u9053\u4f8b\u9898\u4f1a\u6bd4\u8f83\u597d\u7406\u89e3</p> <p>P3195</p> <p>\u7ecf\u5178\u659c\u7387\u4f18\u5316\u3002 $$</p> <p>\u8f6c\u79fb\u65b9\u7a0b\u4e3af[i]=f[j]+(i-j-1+s[i]-s[j]-L)\\s[i]\u8868\u793a\u524d\u7f00\u548c\u3002\\</p> <p>\u8bbea(i)=s[i]+i,b(i)=a(i)+L+1\\\u90a3\u4e48\u539f\u5f0f\u53d8\u4e3af[i]=f[j]+(a(i)-b(j))^2\\ \u79fb\u9879\u5f97\\</p> <p>2a(i)* b(j) +f[i]-a(i)^2=f[j]+b(j)^2\\</p> <p>\u90a3\u4e48\u53ef\u4ee5\u770b\u6210k=2a(i),x=b(j),y=(f[j]+b(j)^2),b=f[i]-a(i)^2\u7684\u76f4\u7ebfy=kx+b $$</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u76f4\u7ebf\uff081~n\uff09,\u90fd\u6709\u659c\u7387\\(2a(i)\\)\u5355\u8c03\u9012\u589e\uff0c\u800c\u6211\u4eec\u8981\u6c42\u622a\u8ddd\\(f[i]-a(i)^2\\)\u7684\u6700\u5c0f\u503c\uff0c\u4e5f\u5c31\u662f\u5f53\u6211\u4eec\u7ef4\u62a4\u4e00\u4e2a\u4e0b\u51f8\u5305\u65f6\uff0c\u76f4\u7ebf\u7684\u659c\u7387\u521a\u597d\u6ee1\u8db3\\(slope(P_{j},P_{j+1})&gt;k\\)\u65f6\u7684\u70b9\\(j\\)\u5373\u4e3a\u6211\u4eec\u8981\u7684\\(f[j]\\)\uff08\u53ef\u4ee5\u7406\u89e3\u4e3a\u76f8\u5207\uff09</p> <p>\u56e0\u6b64\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u4e0b\u51f8\u5305\u4e0a\u7684\u70b9\u3002</p> <p>1) \\(slope(P_{head},P_{head+1}\\leq k):++head\\),\u5f39\u51fa\u524d\u7aef\u7684\u70b9\uff0c\u56e0\u4e3a\u4e0d\"\u76f8\u5207\"</p> <p>2) \\(slope(P_{tail-1},P_i)&lt;slope(P_{tail-1},P_{tail}):--tail\\),\u8bf4\u660e\\(P_{tail}\\)\u4e0d\u518d\u662f\u51f8\u5305\u4e0a\u7684\u70b9\uff0c\u4e0d\u9700\u8981\u5c31\u5f39\u51fa</p> <pre><code>#include&lt;iostream&gt; \n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\ntypedef double db;\nconst int N=5e4+10;\nint C[N],s[N],q[N];\nint n,L,head,tail;\ndb f[N];\ndb a(int i){\n    return (db)(s[i]+i);\n}\ndb b(int i){\n    return (db)(s[i]+i+L+1);\n}\ndb slope(int u,int v){\n    db yu=f[u]+b(u)*b(u),yv=f[v]+b(v)*b(v),xu=b(u),xv=b(v);\n    return (yu-yv)/(xu-xv);\n}\nvoid dp(){\n    head=tail=1;\n    q[head]=0;\n    for(int i=1;i&lt;=n;++i){\n        while(head&lt;tail &amp;&amp; slope(q[head],q[head+1])&lt; 2*a(i)) ++head;\n        f[i]=f[q[head]]+(a(i)-b(q[head]))*(a(i)-b(q[head]));\n        while(head&lt;tail &amp;&amp; slope(q[tail-1],q[tail])&gt;slope(q[tail-1],i)) --tail;\n        q[++tail]=i;    \n    }\n    printf(\"%lld\",(long long)(f[n]));\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;L);\n    for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;C[i]),s[i]=s[i-1]+C[i];\n    dp();\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E4%BC%98%E5%8C%96dp/#dp_1","title":"\u7ebf\u6bb5\u6811\u4f18\u5316dp","text":"<p>P1295 &amp; P1848</p> <p>\u76f8\u540c\u7c7b\u578b\u7684\u9898,\u5c31\u53ea\u8bb2P1295\u5427\uff0c\u8fd8\u7b80\u5355\u4e00\u70b9\u3002</p> <p>\u66b4\u529b\\(O(n^2)\\)\u8f6c\u79fb\uff1a\\(f[i]=f[j]+(\\max_{k=j+1}^ih_k)(\\sum_{k=j+1}^ih_k\\leq m)\\)</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u53ef\u4ee5\u9996\u5148\\(O(n\\log n)\\)\u4e8c\u5206\u6c42\u51fa\u5b83\u6700\u9760\u5de6\u4e14\u6ee1\u8db3\u957f\u5ea6\\(\\leq m\\)\u7684\u7aef\u70b9\u4f4d\u7f6e\\(prelen[i]\\),\u8fd8\u6709\\(O(n)\\)\u5355\u8c03\u6808\u6c42\u51fa\u524d\u4e00\u4e2a\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4f4d\u7f6e \\(premax[i]\\).</p> <p>\u7136\u540e\uff0c\u5bf9\u4e8e\u5f53\u524d\u70b9\\(i\\)\uff0c\u6211\u4eec\u9700\u8981\u5c06\u524d\\(i-1\\)\u4e2a\u70b9\u7684\\(f[i]\\)\u52a0\u4e0a\\(i\\)\u4ea7\u751f\u7684\"\u8d21\u732e\"\u540e\u53d6\u6700\u5c0f\uff0c\u6c42\u51fa\\(f[i]\\).</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u9700\u8981\u5728\u6c42\\(f[k]\\)\u4e4b\u524d\u5728\\(k\\)\u7684\u4f4d\u7f6e\u5355\u70b9\u4fee\u6539\\(f[k-1]\\),\u8868\u793a\u5982\u679c\u53d6\\([k,i]\\)\u8fd9\u6bb5\u533a\u95f4\u7684\u8bdd\u8981\u52a0\u4e0a\\(f[k-1]\\).</p> <p>\u7136\u540e\u5c31\u662f\u5e38\u89c1\u7684\u64cd\u4f5c\uff0c\u5bf9\u4e8e\u6240\u6709\u5927\u4e8e\\(h[i]\\)\u7684\u70b9\u662f\u6ca1\u6709\u5f71\u54cd\u7684\uff0c\u6240\u4ee5\u5c06\\([premax[i],i]\\)\u4fee\u6539\u4e3a\\(h[i]\\).</p> <p>\u6700\u540e\uff0c\u67e5\u8be2\\([prelen[i],i]\\)\u8fd9\u6bb5\u533a\u95f4\u7684\u6700\u5c0f\u503c\u5373\u53ef\u3002</p> <p>\u663e\u7136\u8fd9\u4e2a\u8fc7\u7a0b\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002</p> <p>\u6ce8\u610f\\(f\\)\u662f\u5355\u70b9\u4fee\u6539\uff0c\u4e0d\u9700\u8981\\(tag\\),\u800c\\(ans\\)\u9700\u8981\u7528\\(tag+f\\)\u5f97\u5230\u3002</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;stack&gt;\n#define int long long \n#define ls i&lt;&lt;1\n#define rs i&lt;&lt;1|1\n#define mid (l+r&gt;&gt;1)\nusing namespace std;\ntypedef pair&lt;int,int&gt; PI;\nconst int N=1e5+10,INF=1e18;\nint n,m;\nint a[N],premax[N],prelen[N],s[N],f[N];\nstruct tree{\n    int tag,l,r,f,ans;\n}tre[N&lt;&lt;2];\nvoid init(){\n    stack&lt;PI&gt; q;\n    for(int i=1;i&lt;=n;++i){\n        int pos=lower_bound(s,s+n+1,s[i]-m)-s+1;prelen[i]=pos;\n    }\n    for(int i=1;i&lt;=n;++i){\n        while(!q.empty() &amp;&amp; q.top().first&lt;a[i])q.pop();\n        premax[i]=q.empty()?1:q.top().second+1;q.push(make_pair(a[i],i));\n    }\n}\nvoid pushup(int i){\n    tre[i].f=min(tre[ls].f,tre[rs].f);\n    tre[i].ans=min(tre[ls].ans,tre[rs].ans);\n}\nvoid build(int i,int l,int r){\n    tre[i].l=l,tre[i].r=r,tre[i].tag=0,tre[i].f=INF,tre[i].ans=INF;\n    if(l==r)return;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    pushup(i);  \n}\nvoid pushdown(int i){\n    int k=tre[i].tag;\n    if(!k)return;\n    tre[ls].tag=k,tre[ls].ans=tre[ls].f+k;\n    tre[rs].tag=k,tre[rs].ans=tre[rs].f+k;\n    tre[i].tag=0;\n}\nvoid add(int i,int pos,int k){\n    int l=tre[i].l,r=tre[i].r;\n    if(l==r){\n        tre[i].f=k;return;\n    }\n    pushdown(i);\n    if(pos&lt;=mid)add(ls,pos,k);\n    else add(rs,pos,k);\n    pushup(i);\n}\nvoid change(int i,int el,int er,int k){\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tre[i].ans=tre[i].f+k,tre[i].tag=k;\n        return;\n    }\n    pushdown(i);\n    if(el&lt;=mid)change(ls,el,er,k);\n    if(er&gt;mid)change(rs,el,er,k);\n    pushup(i);\n}\nint query(int i,int el,int er){\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er) return tre[i].ans;\n    pushdown(i);\n    int ans=INF;\n    if(el&lt;=mid)ans=min(ans,query(ls,el,er));    \n    if(er&gt;mid)ans=min(ans,query(rs,el,er));\n    return ans;\n}\n\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]),s[i]=s[i-1]+a[i];\n    build(1,1,n);\n    init();\n    for(int i=1;i&lt;=n;++i){\n        add(1,i,f[i-1]);\n        if(premax[i]&lt;=i)change(1,premax[i],i,a[i]);\n        if(prelen[i]&lt;=i)f[i]=query(1,prelen[i],i);\n    }\n    printf(\"%lld\",f[n]);    \n    return 0;\n}\n/*\n4 9\n1 6 3 5 1\n*/\n</code></pre> * \u7ed3\u8bba\uff1a\u7ebf\u6bb5\u6811\u4f18\u5316\u7684\u9898\u4e00\u822c\u7279\u70b9\u662f\u8fde\u7eed\u53d6\u4e00\u70b9\u533a\u95f4\uff0c\u518d\u52a0\u4e0a\u4e4b\u524d\u7684\u8d21\u732e\u66f4\u65b0\\(f[i]\\)</p> <p>CF833B</p> <p>\u5e38\u89c1\u79bb\u7ebf\u64cd\u4f5c\uff0c\u5bf9\u4e8e\\(a[i]\\)\u53ea\u5bf9\u5b83\u524d\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u4e4b\u540e\u6709\u5f71\u54cd\u3002</p> <p>\u800c\u5bf9\u4e8e\u90a3\u4e2a\\(k\\)\u6bb5\uff0c\u53ef\u4ee5\u6bcf\u6b21\u5efa\u4e00\u6b21\u6811\uff0c\u6811\u4e2d\u521d\u59cb\u4e3a\\(f[l-1][k-1]\\)\u3002</p> <p>\u7136\u540e\u5c31\u662f\u6807\u51c6\u7ebf\u6bb5\u6811\u4f18\u5316\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define ls i&lt;&lt;1\n#define rs i&lt;&lt;1|1\n#define int long long \nusing namespace std;\nconst int N=4e4+10,K=55;\nint f[K][N],pos[N],pre[N],tre[N&lt;&lt;2],tag[N&lt;&lt;2];\nint n,k,t;\nvoid pushup(int i){\n    tre[i]=max(tre[ls],tre[rs]);\n}\nvoid pushdown(int i,int l,int r){\n    int k=tag[i];\n    if(!k)return;\n    tag[ls]+=k;tag[rs]+=k;tre[ls]+=k;tre[rs]+=k;\n    tag[i]=0;   \n}\nvoid build(int i,int l,int r,int now){\n    tag[i]=0;\n    if(l==r){\n        tre[i]=f[now][l-1];\n        return;\n    }\n    int mid=(l+r)&gt;&gt;1;\n    build(ls,l,mid,now);\n    build(rs,mid+1,r,now);\n    pushup(i);\n}\nvoid change(int i,int l,int r,int el,int er,int k){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tag[i]+=k;tre[i]+=k;\n        return;\n    }\n    pushdown(i,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    if(el&lt;=mid) change(ls,l,mid,el,er,k);\n    if(er&gt;mid) change(rs,mid+1,r,el,er,k);\n    pushup(i);\n}\nint query(int i,int l,int r,int el,int er){\n    if(el&lt;=l &amp;&amp; r&lt;=er) return tre[i];\n    pushdown(i,l,r);\n    int mid=(l+r)&gt;&gt;1,ans=0;\n    if(el&lt;=mid)ans=max(ans,query(ls,l,mid,el,er));\n    if(er&gt;mid)ans=max(ans,query(rs,mid+1,r,el,er));\n    return ans;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;t),pre[i]=pos[t]+1,pos[t]=i;\n    for(int i=1;i&lt;=k;++i){\n        build(1,1,n,i-1);\n        for(int j=1;j&lt;=n;++j){\n            change(1,1,n,pre[j],j,1);\n            f[i][j]=query(1,1,n,1,j);\n        }\n    }\n    printf(\"%lld\",f[k][n]);\n}\n</code></pre>"},{"location":"my%20past/OI/%E4%BD%8D%E8%BF%90%E7%AE%97/","title":"\u8fdb\u5236 &amp; \u4f4d\u8fd0\u7b97","text":"<p>P7442</p> <p>~~\u4f17\u6240\u5468\u77e5\uff0c\u4e8c\u8fdb\u5236\u6709\u4e00\u7c7b\u63d0\u9700\u8981\u4f60\u627e\u89c4\u5f8b~~</p> <p>\u6bcf\u6b21\u76841\u64cd\u4f5c\u76f8\u5f53\u4e8e\u5c06\\(x\\)\u8fd9\u4e2a\u4e8c\u8fdb\u5236\u6570\u770b\u6210\u4e00\u4e2a\u73af\uff0c\u5e76\u4e14\u5c06\u5b83\u65cb\u8f6c\\(cnt \\mod n\\)\u6b21\uff0c\\(cnt\\)\u4e3a\u603b\u7684\u64cd\u4f5c\u6b21\u6570\u3002</p> <p>\u800c2\u64cd\u4f5c\u5c31\u662f\u57282\u64cd\u4f5c\u524d\u7684\\(cnt\\mod n\\)\u4f4d\u4e0a\u5f02\u6216\u4e0a\u4e00\u4e2a1\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#define int long long \nusing namespace std;\nint cnt,n,m,op,x,tmp;\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;op,&amp;x);\n        if(op==1){\n            tmp^=(x)*(long long)(1ll&lt;&lt;cnt);cnt=(cnt+1ll)%n;\n        }else{\n            int tot=x&gt;&gt;(n-cnt);\n            x=x^(tot&lt;&lt;(n-cnt));\n            printf(\"%lld\\n\",(long long)(x&lt;&lt;cnt)^tot^tmp);\n        }\n    }\n    return 0;\n} \n</code></pre> <p>P1582</p> <p>\u901a\u8fc7\u4e0d\u65ad\u6c42\u5f97\u5f53\u524d\u7684n\u6709\u591a\u5c11\u4e2a1\uff0c\u5e76\u4e0ek\u5224\u65ad\uff0c\u82e5\u5c0f\u4e8ek\u5219\u7b26\u5408\u9898\u610f\uff0c\u5426\u5219\u5c31\u5c06\u6700\u540e\u4e00\u4f4d1\u52a0\u5230\u8d21\u732e\u91cc\u53bb\u3002</p> <p><pre><code>//\u6c42\u6700\u540e\u4e00\u4f4d1\nint lowbit(int x){\n    return x&amp;-x;\n}\n</code></pre> \u5b8c\u6574code\uff1a <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int K=1e3+10;\nint n,k;\nint lowbit(int x){\n    return x&amp;-x;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    int m=n,t=0;\n    while(m){\n        m-=lowbit(m);\n        ++t;\n    }\n    if(t&lt;=k){\n        printf(\"0\");\n        return 0;\n    }else{\n        int ans=0;\n        while(t&gt;k){\n            int tmp=lowbit(n);\n            ans+=tmp;\n            n+=tmp;\n            int m=n;\n            t=0;\n            while(m){\n                m-=lowbit(m);\n                t++;\n            }\n        }\n        printf(\"%lld\",ans);\n    }\n    return 0;\n}\n</code></pre></p> <p>P1015</p> <p>\u6a21\u62df\u9898.</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=1e4+10;\nint n;\nstruct HP{\n    int p[N],len;\n    void clear1(){\n        memset(p,0,sizeof p);\n        len=1;\n    }\n    void read1(){\n        memset(p,0,sizeof p);\n        len=0;\n        p[0]=1;\n        char ch=getchar();\n        int x=0,f=1;\n        while(!(ch&lt;='9' &amp;&amp; ch&gt;='0' || ch&lt;='F' &amp;&amp; ch&gt;='A' || ch&lt;='f' &amp;&amp; ch&gt;='a')){\n            ch=getchar();\n        }\n        while((ch&lt;='9' &amp;&amp; ch&gt;='0' || ch&lt;='F' &amp;&amp; ch&gt;='A' || ch&lt;='f' &amp;&amp; ch&gt;='a')){\n            ++len;\n            if(n==16){\n                if(ch&lt;='F' &amp;&amp; ch&gt;='A'){\n                    p[len]=ch-'A'+10;   \n                }else if(ch&lt;='f' &amp;&amp; ch&gt;='a'){\n                    p[len]=ch-'a'+10;   \n                }else p[len]=ch-'0';\n            }else p[len]=ch-'0';\n            ch=getchar();\n        }\n        for(int i=1;i&lt;=len/2;++i){\n            swap(p[i],p[len-i+1]);\n        } \n    }\n    void write1(){\n        for(int i=len;i&gt;=1;--i){\n            printf(\"%d\",p[i]);\n        }\n        putchar('\\n');\n    }\n};\nHP operator +(const HP &amp;a,const HP &amp;b){\n    HP c;\n    c.clear1();\n    int la=a.len,lb=b.len,lc=max(la,lb),x=0;\n    for(int i=1;i&lt;=lc;++i){\n        c.p[i]=a.p[i]+b.p[i]+x;\n        x=c.p[i]/n;\n        c.p[i]%=n;\n    }\n    if(x)c.p[++lc]=x;\n    c.len=lc;\n    return c;\n}\nHP new1(HP a){\n    HP b;\n    b.clear1();\n    int la=a.len;\n    b.len=la;\n    for(int i=1;i&lt;=la;++i){\n        b.p[la-i+1]=a.p[i];\n    }\n    a=a+b;\n    return a;\n}\nbool check(HP a){\n    bool flag=true;\n    for(int i=1;i&lt;=a.len/2;++i){\n        if(a.p[i]!=a.p[a.len-i+1])flag=false;\n    }\n    return flag;\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    HP a;\n    a.read1();\n    int cnt=0;\n    while(!check(a) &amp;&amp; cnt&lt;=31){\n        a=new1(a);\n        cnt++;\n    }\n    if(cnt&gt;=31)printf(\"Impossible!\");\n    else printf(\"STEP=%d\",cnt);\n    return 0;\n}\n</code></pre> <p>P2852</p> <p>\u8fd9\u9053\u9898\u65f6\\(hash\\)\u4f18\u5316\u7684\u5b57\u7b26\u4e32\u8868\u793a\u6cd5\uff0c\u5c06\u6bcf\u4e2a\u5b57\u7b26\u4e32\u770b\u6210\u4e00\u4e2a\\(C\\)\u8fdb\u5236\u6570\u5373\u53ef\uff0c\u5e76\u5c06\u5b83\\(mod\\)\u4e0a\u4e00\u4e2a\u5927\u8d28\u6570\\(P\\),\u56e0\u4e3a\u6211\u4eec\u7528\u524d\u7f00\u548c\u7684\u601d\u60f3\u8868\u793a\u6bcf\u4e00\u4e2a\u5b50\u4e32\uff0c\u6240\u4ee5\u5bf9\u4e8e\\(n\\)\u4e2a\u6570\u7684\u5e8f\u5217\u603b\u5171\u53ea\u6709\\(n\\)\u4e2a\u5b57\u7b26\u4e32\uff0c\u5982\u679c\\(P\\)\u8db3\u591f\u5927\u5e76\u4e14\u662f\u8d28\u6570\u5c31\u4e0d\u4f1a\u51fa\u73b0\u72b6\u6001\u91cd\u590d\u7684\u60c5\u51b5\u3002~~\u5982\u679c\u6709\uff0c\u5c31\u6362\u4e00\u4e2a\u66f4\u2642\u5927\u2642\u7684~~</p> <p>\u4ee3\u7801\u5728\\(hash\\)\u4f18\u5316\u91cc\u6709\u3002</p> <p>P3760</p> <p>~~\u4f4d\u8fd0\u7b97\u597d\u9898~~</p> <p>\u5bf9\u4e8e\u6240\u6709\u590d\u6742\u7684\u4f4d\u8fd0\u7b97\uff0c\u6211\u4eec\u6709\u4e2a\u5e38\u7528\u7684\\(Trick\\)\uff0c\u5c31\u662f\u5c06\u6bcf\u4e2a\u6570\u62c6\u4f4d\uff0c\u6bcf\u4e2a\u6570\u53ea\u7528\u8bb0\u5f55\\(O(\\log n)\\)\u4e2a\u4f4d.</p> <p>\u5bf9\u4e8e\u679a\u4e3e\u7684\u4f4d\u6570\\(v\\)\uff0c\u6211\u4eec\u53ea\u9700\u8981\u7edf\u8ba1\u6709\u591a\u5c11\u4e2a\\(s\\)\u6ee1\u8db3\uff1a</p> <p>\\((s[j]-s[i]&gt;&gt;v)&amp;1==1\\)\u5373\u53ef\u3002</p> <p>\u90a3\u4e48\u53ef\u4ee5\u5f00\u4e24\u4e2a\u6811\u72b6\u6570\u7ec4\uff0c\u8bb0\u5f55\u7b2c\\(v\\)\u4f4d\u5206\u522b\u4e3a0\u62161\u7684\u72b6\u6001\u3002</p> <p>\u5bf9\u4e8e\u5f53\u524d\u679a\u4e3e\u5230\u7684\\(s[i]\\)\uff1a</p> <p>1) \u7b2c\\(v\\)\u4f4d\u4e3a1\uff0c\u90a3\u53ea\u9700\u8981\u627e\u5230\u7b2c\\(v\\)\u4f4d\u4e4b\u524d\u6bd4\u4ed6\u5c0f\u4e140\u7684\u4e2a\u6570\u6216\u6bd4\u4ed6\u5927\u4e141\u7684\u4e2a\u6570\u3002</p> <p>2) \u7b2c\\(v\\)\u4f4d\u4e3a0\uff0c\u90a3\u53ea\u9700\u8981\u627e\u5230\u7b2c\\(v\\)\u4f4d\u4e4b\u524d\u6bd4\u4ed6\u5927\u4e140\u7684\u4e2a\u6570\u6216\u6bd4\u4ed6\u5c0f\u4e141\u7684\u4e2a\u6570\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \n#define lowbit(x) (x&amp;-x)\nusing namespace std;\nconst int N=1e5+10,C=1e6+10;\nint s[N],a[N],f[C][2];\nint n,maxn,ans;\nvoid change(int i,int x,int d){\n    while(x&lt;C)f[x][i]+=d,x+=lowbit(x);\n}\nint sum(int i,int x){\n    int ans=0;\n    while(x&gt;0)ans+=f[x][i],x-=lowbit(x);\n    return ans;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]),s[i]=s[i-1]+a[i],maxn=max(maxn,s[i]);\n    for(int v=0;v&lt;=20;++v){\n        if((1&lt;&lt;v)&gt;maxn)break;\n        int cnt=0;\n        memset(f,0,sizeof f);\n        change(0,1,1);\n        for(int i=1;i&lt;=n;++i){\n            int tmp=s[i]&amp;((1&lt;&lt;v)-1),type=(s[i]&gt;&gt;v)&amp;1;\n\n            if(type)cnt+=sum(1,C-1)-sum(1,tmp+1)+sum(0,tmp+1);\n            else cnt+=sum(0,C-1)-sum(0,tmp+1)+sum(1,tmp+1);\n            change(type,tmp+1,1);\n        }\n        if(cnt%2)ans|=(1&lt;&lt;v);\n    }\n\n    printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E5%80%8D%E5%A2%9E/","title":"\u500d\u589e","text":""},{"location":"my%20past/OI/%E5%80%8D%E5%A2%9E/#_2","title":"\u666e\u901a\u500d\u589e","text":"<p>P7167</p> <p>\u8fd9\u9053\u9898\u975e\u5e38\u5751 \u8981\u6ce8\u610f\u500d\u589e\u5230\u6700\u540e\u53ef\u80fd\u6709\u5269\u4f59\uff0c\u8fd9\u65f6\u5019\u8981\u7279\u5224\u4e00\u4e0b\uff0c\u5982\u679c\u6709\u5269\u4f59\u5219\u5e94\u8be5\u6d41\u5411\u4e0b\u4e00\u4e2a\u76d8\u5b50(\u55b7\u6cc9)\u4e2d</p>"},{"location":"my%20past/OI/%E5%80%8D%E5%A2%9E/#_3","title":"\u6811\u4e0a\u500d\u589e","text":"<p>\u7ecf\u5178\u5e94\u7528\uff1a\u500d\u589e\\(lca\\)\uff0c\u7ef4\u62a4\u6811\u4e0a\u4e00\u6bb5\u533a\u95f4(\u94fe)\u4fe1\u606f\uff0c\u5bfb\u627e\u6811\u4e0a\u8282\u70b9\u3002</p> <p>P1084</p> <p>\u5047\u8bbe\u5f53\u524d\u6709\u4e00\u4e2a\u65f6\u95f4\u9650\u5236\uff0c\u53ef\u4ee5\u53d1\u73b0\u5bf9\u4e8e\u6bcf\u4e2a\u519b\u961f\uff0c\u4e00\u5b9a\u65f6\u8d8a\u9760\u8fd1\u6839\u8282\u70b9\u8d8a\u4f18\u3002\u5e76\u4e14\u4e00\u4e2a\u65f6\u95f4\u9650\u5236\u5982\u679c\u80fd\u6ee1\u8db3\uff0c\u90a3\u4e48\u6bd4\u4ed6\u5927\u7684\u65f6\u95f4\u9650\u5236\u5c31\u90fd\u80fd\u6ee1\u8db3\u3002</p> <p>\u6709\u8fd9\u4e24\u4e2a\u5355\u8c03\u6027\uff0c\u5c31\u53ef\u4ee5\u6811\u4e0a\u500d\u589e+\u4e8c\u5206\u3002\u6bcf\u6b21\u4e8c\u5206\u4e00\u4e2a\u65f6\u95f4\u9650\u5236\uff0c\u5e76\u5c06\u6240\u6709\u519b\u961f\u7528\u6811\u4e0a\u500d\u589e\u7684\u65b9\u5f0f\u63a8\u5230\u5b83\u80fd\u5230\u7684\u6df1\u5ea6\u6700\u5c0f\u7684\u8282\u70b9\u3002\u5e76\u627e\u51fa\u6240\u6709\u80fd\u81ea\u7531\u6d3b\u52a8\u7684\u519b\u961f\u53bb\u6ee1\u8db3\u90a3\u4e9b\u6ca1\u6709\u519b\u961f\u9a7b\u5b88\u7684\u6839\u7684\u5b50\u8282\u70b9\u3002</p> <p>\u6309\u7167\u5269\u4f59\u65f6\u95f4\u7684\u6392\u5e8f\u987a\u5e8f\u8d2a\u5fc3\u7684\u53bb\u4e00\u4e00\u89e3\u51b3\u5c31\u884c\u4e86\u3002</p> <p>\u6700\u540e\u8fd4\u56de\u662f\u5426\u6ee1\u8db3\u8fd9\u4e2a\u65f6\u95f4\u9650\u5236\u3002</p> <p>update.2022.4.5</p> <p>\u6628\u5929\u5199\u4e86\u8fd9\u4e2a\u9898\uff0c\u53d1\u73b0\u6bd4\u6211\u60f3\u8c61\u5730\u6076\u5fc3\u5f97\u591a\u554a\uff0c\u518d\u6765\u5410\u69fd\u4e00\u4e0b\u3002</p> <ol> <li>\u9884\u5904\u7406</li> </ol> <p>\u9996\u5148\uff0c\u6811\u4e0a\u500d\u589e\u6c42\u51fa\\(dis[u][j]\\),\u8868\u793a\u4e00\u6bb5\u8ddd\u79bb\u3002</p> <ol> <li>\u4e0a\u79fb\u519b\u961f </li> </ol> <p>\u7136\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u519b\u961f\uff0c\u6211\u4eec\u5c06\u4ed6\u5411\u4e0a\u63a8\u5230\u6df1\u5ea6\u6700\u5c0f(\u4e0d\u662f\u6839)\u7684\u5730\u65b9\u3002\u5982\u679c\u8be5\u8282\u70b9\u4e0d\u5728\u6839\u8282\u70b9\u4e0b\u9762\uff0c\u6216\u5b83\u5269\u4f59\u65f6\u95f4\u65e0\u6cd5\u5230\u8fbe\u6839\uff0c\u5c31\u5728\u5f53\u524d\u8282\u70b9\u9a7b\u624e(\\(vis[u]=1\\))</p> <p>\u5426\u5219\u5c06\u519b\u961f\u52a0\u5165\u4e00\u4e2a\u4e8c\u5143\u7ec4\\(h\\)\u4e2d\u5907\u7528\uff0c\u4e8c\u5143\u7ec4\u7b2c\u4e00\u7ef4\u662f\u5b83\u5230\u8fbe\u6839\u8282\u70b9\u65f6\u7684\u5269\u4f59\u65f6\u95f4\uff0c\u7b2c\u4e8c\u7ef4\u65f6\u5b83\u6765\u81ea\u6839\u7684\u54ea\u4e2a\u5b50\u8282\u70b9\u3002</p> <ol> <li>\u7edf\u8ba1\u7b54\u6848</li> </ol> <p>\u5148\u5bf9\u4e8e\u6839\u7684\u5b50\u8282\u70b9\u505a\u6df1\u641c\uff0c\u5f97\u51fa\u90a3\u4e9b\u8282\u70b9\u4e0d\u7528\u519b\u961f\u9a7b\u624e\uff0c\u5269\u4f59\u90a3\u4e9b\u8282\u70b9\u9700\u8981\u519b\u961f\u9a7b\u624e\u3002</p> <p>\u4e4b\u540e\uff0c\u5bf9\u4e8e\u4e8c\u5143\u7ec4\u6309\u7b2c\u4e00\u7ef4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002\u5982\u679c\u6ee1\u8db3\uff1a<code>!vis[h[i].n] &amp;&amp; h[i].d&lt;dis[h[i].n][0]</code>,\u5c31\u5c06\u519b\u961f\u9a7b\u624e\u5728\\(h[i].n\\).\uff08\u8fd9\u4e2a\u8d2a\u5fc3\u540e\u9762\u4f1a\u8bf4\u660e\uff09</p> <p>\u6700\u540e\uff0c\u5c06\u90a3\u4e9b\u4ecd\u7136\u9700\u8981\u9a7b\u624e\u7684\u5b50\u8282\u70b9\u62ff\u51fa\u6765\uff0c\u6309\u7167\u5230\u6839\u7684\u8ddd\u79bb\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4e0e\u7a7a\u95f2\u519b\u961f\u5339\u914d(\u53cc\u6307\u9488)\u3002\u8fd9\u91cc\u4e5f\u7528\u5230\u4e86\u5f88\u663e\u7136\u7684\u8d2a\u5fc3\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;queue&gt;\n#define int long long \nusing namespace std;\nconst int N=1e5+10,K=21,INF=1e15;\nstruct edge{\n    int v,w,nxt;\n}e[N&lt;&lt;1];\nstruct node{\n    int d,n;\n    node(int dd=0,int nn=0){\n        d=dd,n=nn;\n    }\n}h[N],s[N];\nint n,m,u,v,w,cnt;\nint head[N],fa[N][K],dis[N][K],vis[N],t[N],a[N];\nvoid add(int u,int v,int w){\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid dfs(int u,int p){\n    for(int i=1;i&lt;K;++i) fa[u][i]=fa[fa[u][i-1]][i-1],dis[u][i]=dis[u][i-1]+dis[fa[u][i-1]][i-1];\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p) continue;\n        fa[v][0]=u,dis[v][0]=w;\n        dfs(v,u);\n    }\n}\nbool _dfs(int u,int p){\n    if(vis[u]) return 1;\n    int o=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p) continue;\n        if(!_dfs(v,u)) return 0;\n        o=1;\n    }\n    if(!o) return 0;\n    return 1;\n}\nbool cmp(node a,node b){\n    if(a.d==b.d) return a.n&lt;b.n;\n    return a.d&lt;b.d;\n}\nbool Cmp(int a,int b){\n    return a&lt;b;\n}\nbool _cmp(int a,int b){\n    return dis[a][0]&lt;dis[b][0];\n}\nbool check(int x){\n    memset(vis,0,sizeof vis);\n    memset(h,0,sizeof h);\n    memset(s,0,sizeof s);\n    memset(t,0,sizeof t);\n    int tot=0,top=0,cur=0,atot=0,btot=0;\n    for(int i=1;i&lt;=m;++i){\n        int u=a[i],tmp=0;\n        for(int j=K-1;j&gt;=0;--j) if(fa[u][j]&gt;1 &amp;&amp; tmp+dis[u][j]&lt;=x) tmp+=dis[u][j],u=fa[u][j];\n        if(fa[u][0]==1 &amp;&amp; tmp+dis[u][0]&lt;=x){\n            h[++tot]=node(x-tmp-dis[u][0],u);\n        }else vis[u]=1;\n    }\n    for(int i=head[1];~i;i=e[i].nxt){\n        int v=e[i].v;\n        vis[v]=_dfs(v,1);\n    }\n    sort(h+1,h+tot+1,cmp);\n    for(int i=1;i&lt;=tot;++i){\n        if(!vis[h[i].n] &amp;&amp; h[i].d&lt;dis[h[i].n][0]) vis[h[i].n]=1;\n        else s[++top]=h[i];\n    }\n    for(int i=head[1];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(!vis[v]) t[++cur]=v;\n    }\n    sort(s+1,s+top+1,cmp);\n    sort(t+1,t+cur+1,_cmp);\n    int l=1;\n    for(int i=1;i&lt;=cur;++i){\n        while(l&lt;=top &amp;&amp; s[l].d&lt;dis[t[i]][0]) ++l;\n        if(l&lt;=top) vis[t[i]]=1,++l;\n        else return 0;\n    }\n    return 1;\n}\nsigned main(){\n    //freopen(\"P1084_2.in\",\"r\",stdin);\n    memset(head,-1,sizeof head),cnt=-1;\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;n;++i) scanf(\"%lld%lld%lld\",&amp;u,&amp;v,&amp;w),add(u,v,w),add(v,u,w);\n    dfs(1,0);\n    scanf(\"%lld\",&amp;m);\n    for(int i=1;i&lt;=m;++i) scanf(\"%lld\",&amp;a[i]);\n    int l=0,r=INF,ans=-1;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)) ans=mid,r=mid-1;\n        else l=mid+1;\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n/*\n10 \n2 1 3\n2 3 4\n1 4 7\n5 1 9\n6 1 2\n4 7 9\n7 8 8\n9 8 8\n1 10 2\n5\n2 8 5 4 2 \n*/\n</code></pre> <p>\u4e0b\u9762\u8bf4\u8bf4\u5751\u70b9\uff1a</p> <ol> <li>\u6811\u4e0a\u500d\u589e</li> </ol> <p>\u6811\u4e0a\u500d\u589e\u4e00\u5b9a\u8981\u5728\u9012\u5f52\u5230\u4e0b\u4e00\u5c42\u524d\u5c31\u9012\u63a8\u51fa\u8fd9\u4e00\u5c42\u5f97\\(dis[u][j],fa[u][j]\\),\u4e0d\u7136\uff0c\u76f8\u5f53\u4e8e\u9012\u5f52\u5230\u5e95\uff0c\u524d\u9762\u7684\\(dis[u][j]\\)\u8fd8\u90fd\u662f\u7a7a\u7684\uff0c\u5c31\u4f1a\u51fa\u9519\u4e86</p> <ol> <li>\u8d2a\u5fc3\u90e8\u5206</li> </ol> <p>\u5148\u8003\u8651\u4e00\u4e2a\u53cd\u4f8b\uff1a</p> <p></p> <p>\u8fd9\u91cc\u5c31\u4e0d\u7528\u4e8c\u5143\u7ec4\u8868\u793a\u4e86\uff0c\u76f4\u63a5\u5c55\u793a\u539f\u59cb\u72b6\u6001\uff0c\u7ea2\u8272\u8868\u793a\u5269\u4f59\u65f6\u95f4\uff0c\u84dd\u8272\u8868\u793a\u8fb9\u6743\u3002</p> <p>\u53ef\u4ee5\u53d1\u73b0\uff0c\u5982\u679c\u8ba9\\(9\\)\u9a7b\u624e\u5728\\(2\\)\u53f7\u8282\u70b9\uff0c\u6700\u7ec8\u5c31\u53ea\u80fd\u9a7b\u624e\\(3\\)\u4e2a\uff0c\u800c\u6b63\u786e\u7b54\u6848\u4e3a\\(4\\).</p> <p>\u7136\u540e\u5c1d\u8bd5~~\u8bc1\u660e~~\u8bf4\u660e\u4e00\u4e0b\u539f\u7406\u3002</p> <p>\u56e0\u4e3a\u519b\u961f\\(i\\)\u6ee1\u8db3<code>h[i].d&lt;dis[h[i].n][0]</code>,\u90a3\u8fd9\u4e2a\u519b\u961f\u65e0\u6cd5\u518d\u56de\u5230\u5b83\u6240\u5c5e\u7684\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u8be5\u5b50\u8282\u70b9\u4e00\u5b9a\u7531\u53e6\u4e00\u4e2a\u5269\u4f59\u65f6\u95f4\u5927\u4e8e\u5b83\u7684\u519b\u961f\\(j\\)\u63a7\u5236\u3002\u800c\u663e\u7136\\(j\\)\u53ef\u4ee5\u5230\u8fbe\u7684\u8282\u70b9\u6570\u591a\u4e8e\\(i\\)\uff0c\u6240\u4ee5\u76f4\u63a5\u8ba9\\(i\\)\u7ba1\u63a7\u8fd9\u4e2a\u5b50\u8282\u70b9\u66f4\u4f18\u3002</p> <p>\u800c\u5982\u679c\\(i\\)\u4e0d\u6ee1\u8db3\uff0c\u8bf4\u660e\u5b83\u80fd\u56de\u53bb\uff0c\u90a3\u5c31\u5c06\u4ed6\u52a0\u5165\u6700\u540e\u7684\u6570\u7ec4\u4e0e\u540e\u9762\u7684\u519b\u961f\u4e00\u8d77\u8003\u8651\u3002\u867d\u7136\u8ba9\u4ed6\u6298\u8fd4\u4f1a\u6d6a\u8d39\u65f6\u95f4\uff0c\u4f46\u662f\u7ed3\u679c\u4e0d\u4f1a\u66f4\u5dee\uff0c\u8fd9\u6837\u7b80\u5316\u4e86\u51b3\u7b56\u590d\u6742\u5ea6\u3002</p> <p>P3233</p> <p>~~\u5173\u4e8e\u865a\u6811\u6a21\u677f\u5199\u5047\u4e86\u8c03\u4e86\u4e00\u4e0a\u5348\u8fd9\u4ef6\u4e8b~~</p> <p>\u8fd9\u9053\u9898\u53ca\u5176~~\u6076\u5fc3~~\u590d\u6742,\u9700\u8981\\(6\\)\u6b21\\(dfs\\)\u3002</p> <ol> <li>\u9884\u5904\u7406\\(lca,dep,size\\)</li> </ol> <p>\u500d\u589e\u5904\u7406\\(fa\\)\uff0c\u56e0\u4e3a\u540e\u9762\u9664\u4e86\u6c42\\(lca\\)\u8fd8\u4f1a\u7528\u5230\u3002</p> <ol> <li>\u6c42\u51fa\u865a\u6811\u4e2d\u6bcf\u4e2a\u865a\u6811\u8282\u70b9\u5b50\u6811\u4e2d\u8ddd\u79bb\u6b64\u8282\u70b9\u6700\u8fd1\u7684\"\u5173\u952e\u8282\u70b9\"</li> </ol> <p>\u6240\u6709\u5173\u952e\u8282\u70b9\u90fd\u5728\u865a\u6811\u4e0a\uff0c\u6240\u4ee5\u7b2c\u4e00\u904d\u4ece\u4e0b\u800c\u4e0a\\(dfs\\)\uff0c\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u5728\u5b83\u5b50\u6811\u4e2d\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u5173\u952e\u8282\u70b9(\u53ef\u4ee5\u662f\u81ea\u5df1)\u3002</p> <ol> <li>\u6c42\u51fa\u865a\u6811\u4e2d\u8ddd\u79bb\u6bcf\u4e2a\u865a\u6811\u8282\u70b9\u6700\u8fd1\u7684\"\u5173\u952e\u8282\u70b9\"</li> </ol> <p>\u7b2c\u4e8c\u904d\u4ece\u4e0a\u800c\u4e0b\u6c42\u51fa\u5b50\u6811\u5916\u8d21\u732e\u3002</p> <p>\u6ce8\u610f\uff0c\u6211\u4eec\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4\\(g[u]\\)\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a\u8ddd\u79bb\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a\u7f16\u53f7\u3002</p> <ol> <li>\u6c42\u51fa\u865a\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9\u7f16\u53f7\uff0c\u4ee5\u53ca\u8282\u70b9\u4e0a\u7684\u8d21\u732e\u3002</li> </ol> <p>\u6700\u8fd1\u8282\u70b9\u5c31\u662f\\(num[u]=g[u].second\\),\u800c\u8282\u70b9\u4e0a\u7684\u8d21\u732e\u662f\u6307\uff1a\u5bf9\u4e8e\u865a\u6811\u8282\u70b9\\(u\\)\uff0c\u5176\u6240\u6709\u6ca1\u6709\u5173\u952e\u70b9\u7684\u5b50\u6811\uff0c\u90fd\u5c06\u5f52\\(num[u]\\)\u7ba1\u7406\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u904d\u5386\u865a\u6811\u65f6\uff0c\u53ef\u4ee5\u7528\\(u\\)\u6240\u5728\u7684\u5b50\u6811\u603b\u7ed3\u70b9\u6570\u51cf\u53bb\u6709\u5173\u952e\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u3002</p> <p>\u6709\u5173\u952e\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u9700\u8981\u5728\u539f\u6811\u4e0a\u500d\u589e\u6c42\u51fa\u5bf9\u4e8e\\(v\\)\u6240\u5728\u5b50\u6811\u7684\u6839\\(up[v]\\)\uff0c\u8fd9\u65f6\\(up[v]\\)\u5728\\(u\\)\u4e0b\u9762\uff0c\u51cf\u6389\\(sz[up[v]]\\)\u5373\u53ef\u3002</p> <ol> <li>\u6c42\u51fa\u865a\u6811\u4e0a\u6bcf\u6761\u8fb9\u7684\u8d21\u732e </li> </ol> <p>\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u4e24\u7aef\u70b9\\(u,v\\)\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <p>\u4e00\u662f\\(num[u]=num[v]\\),\u8fd9\u79cd\u60c5\u51b5\u8fd9\u6761\u8fb9\u4e0a\u6240\u6709\u8282\u70b9\u90fd\u5f52\\(num[u]\\)\u7ba1\u5373\u53ef\u3002</p> <p>\u4e8c\u662f\\(num[u]\\not =num[v]\\),\u8fd9\u79cd\u60c5\u51b5\u5148\u6c42\u51fa\u4e2d\u95f4\u70b9\u7684\u6df1\u5ea6\uff0c\u518d\u4ece\\(v\\)\u500d\u589e\u627e\u51fa\u4e2d\u95f4\u70b9\u6807\u53f7\u5373\u53ef\u3002</p> <p>\u5177\u4f53\u5730\uff0c\u4ece\\(num[u]\\)\u5230\\(num[v]\\)\u7684\u94fe\u957f\u5ea6\\(L\\)=\\(dep[num[v]]-dep[u]+g[u].first\\).</p> <p>\u90a3\u4e48\u4e2d\u95f4\u70b9\u7684\u6df1\u5ea6=\\(\\frac{dep[num[v]]-L} 2\\).</p> <ol> <li>\u6e05\u7a7a\u865a\u6811\u53ca\u70b9\u6807\u8bb0</li> </ol> <p>\u9700\u8981\u6e05\u7a7a\\(vis[i],ans[i],up[i],num[i]\\).</p> <p>\u81f3\u6b64\uff0c\u8fd9\u9053\u9898\u624d\u7b97\u505a\u5b8c\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;utility&gt;\nusing namespace std;\ntypedef pair&lt;int,int&gt; PI;\nconst int N=3e5+10,K=20,INF=0x3f3f3f3f;\nint fa[N][K],dep[N],head[2][N],vis[N],a[N],b[N],sz[N],stk[N],ans[N],id[N],num[N],up[N];\nint n,q,u,v,cnt[2],tmp,m,top,tot,rt;\nPI g[N];\nstruct edge {\n    int v,nxt;\n} e[2][N&lt;&lt;1];\nvoid add(int u,int v,int i) {\n    e[i][++cnt[i]].v=v,e[i][cnt[i]].nxt=head[i][u],head[i][u]=cnt[i];\n}\nbool cmp(int a,int b) {\n    return id[a]&lt;id[b];\n}\nint read1(){\n    int x=0;char ch=getchar();\n    while(ch&lt;'0' || ch&gt;'9') ch=getchar();\n    while(ch&gt;='0' &amp;&amp; ch&lt;='9') x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nvoid write1(int x){\n    if(x&gt;9) write1(x/10);\n    putchar(x%10+'0');  \n}\nvoid dfs0(int u,int p) {\n    id[u]=++tot;fa[u][0]=p;sz[u]=1;\n    for(int i=1; i&lt;K; ++i) fa[u][i]=fa[fa[u][i-1]][i-1];\n    for(int i=head[0][u]; ~i; i=e[0][i].nxt) {\n        int v=e[0][i].v;\n        if(v==p) continue;\n        dep[v]=dep[u]+1;\n        dfs0(v,u);\n        sz[u]+=sz[v];\n    }\n}\nvoid dfs1(int u,int p) {\n    if(vis[u]) g[u]=make_pair(0,u);\n    else g[u]=make_pair(INF,0);\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        dfs1(v,u);\n        g[u]=min(g[u],make_pair(g[v].first+dep[v]-dep[u],g[v].second));\n    }\n}\nvoid dfs2(int u,int p,int d,int x) {\n    PI tmp=make_pair(d,x);\n    if(tmp&lt;g[u]) g[u]=tmp;\n    else d=g[u].first,x=g[u].second;\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        dfs2(v,u,d+dep[v]-dep[u],x);\n    }\n}\nvoid dfs3(int u,int p) {\n    num[u]=g[u].second;\n    ans[num[u]]+=sz[u];\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        int k=v;\n        for(int j=K-1;j&gt;=0;--j) if(fa[k][j] &amp;&amp; dep[fa[k][j]]&gt;dep[u]) k=fa[k][j];\n        ans[num[u]]-=sz[up[v]=k];\n        dfs3(v,u);\n    }\n}\nvoid dfs4(int u,int p){\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        if(num[v]==num[u]) ans[num[u]]+=(sz[up[v]]-sz[v]);\n        else{\n            int dis=dep[num[v]]+dep[u]-g[u].first;\n            dis=dis&amp;1?dis+1&gt;&gt;1:(num[v]&lt;num[u]?dis&gt;&gt;1:(dis&gt;&gt;1)+1);\n            int k=v;\n            for(int j=K-1;j&gt;=0;--j) if(fa[k][j] &amp;&amp; dep[fa[k][j]]&gt;=dis) k=fa[k][j];\n            ans[num[u]]+=sz[up[v]]-sz[k];\n            ans[num[v]]+=sz[k]-sz[v];\n        }\n        dfs4(v,u);\n    }\n}\nvoid dfs5(int u,int p){//clear\n    up[u]=num[u]=0;\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        dfs5(v,u);\n    }\n    head[1][u]=-1;\n}\nint getlca(int u,int v) {\n    if(dep[u]&lt;dep[v]) swap(u,v);\n    int k=dep[u]-dep[v];\n    for(int i=K-1; i&gt;=0; --i) if(k&amp;(1&lt;&lt;i)) u=fa[u][i];\n    if(v==u) return u;\n    for(int i=K-1; i&gt;=0; --i) if(fa[u][i]!=fa[v][i]) u=fa[u][i],v=fa[v][i];\n    return fa[u][0];\n}\nvoid insert(int u) {\n    int lca=getlca(u,stk[top]);\n    while(top&gt;1 &amp;&amp; id[stk[top-1]]&gt;=id[lca]) add(stk[top],stk[top-1],1),add(stk[top-1],stk[top],1),--top;\n    if(lca!=stk[top]) add(stk[top],lca,1),add(lca,stk[top],1),stk[top]=lca;\n    stk[++top]=u;\n}\nvoid build() {\n    cnt[1]=-1;\n    sort(a+1,a+m+1,cmp);\n    stk[top=1]=a[1];\n    for(int i=2; i&lt;=m; ++i) insert(a[i]);\n    while(top&gt;1) add(stk[top],stk[top-1],1),add(stk[top-1],stk[top],1),--top;\n    rt=stk[1];\n}\nint main() {\n    memset(head,-1,sizeof head);\n    cnt[0]=-1;\n    scanf(\"%d\",&amp;n);\n    for(int i=1; i&lt;n; ++i) scanf(\"%d%d\",&amp;u,&amp;v),add(u,v,0),add(v,u,0);\n    dfs0(1,0);\n    scanf(\"%d\",&amp;q);\n    for(int i=1; i&lt;=q; ++i) {\n        scanf(\"%d\",&amp;m);\n        for(int j=1; j&lt;=m; ++j) scanf(\"%d\",&amp;a[j]),b[j]=a[j],vis[b[j]]=1;\n        build();\n        dfs1(rt,0);\n        dfs2(rt,0,g[rt].first,g[rt].second);\n        dfs3(rt,0);\n        dfs4(rt,0);\n        ans[num[rt]]+=sz[1]-sz[rt];\n        for(int j=1; j&lt;=m; ++j) printf(\"%d \",ans[b[j]]),ans[b[j]]=vis[b[j]]=0;printf(\"\\n\");\n        dfs5(rt,0);\n    }\n    return 0;\n}\n</code></pre> <p>P7518</p> <p>~~\u505a\u4e86\u6574\u6574\u4e24\u5929\u624d\u8fc7\u7684\u6076\u5fc3\u9898~~</p> <p>~~100\u7d2b\u9898\u796d\uff01~~</p> <p>~~\u601d\u8def\u5f88\u7b80\u5355\uff0c\u4ee3\u7801100\u884c\uff0c\u4f46\u7ec6\u8282\u771f\u7684\u591a~~</p> <p>\u9996\u5148\u53ef\u4ee5\u5c06\u8def\u5f84\\(s\\to t\\)\u62c6\u5206\u4e3a\u4e0a\u884c\\(s\\to lca\\)\u548c\u4e0b\u884c\\(lca\\to t\\)</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6811\u4e0a\u7684\u8282\u70b9\uff0c\u6211\u4eec\u90fd\u53ef\u4ee5\u901a\u8fc7\u500d\u589e\u6765\u6c42\u51fa\\(f[u][j]\\)\uff0c\u8868\u793a\u5b83\u7ecf\u8fc7\u539f\u5e8f\u5217\\(2^j\\)\u4e2a\u5b9d\u77f3\u540e\u5411\u4e0a\u8df3\u5230\u4e86\u54ea\u4e2a\u8282\u70b9\u3002</p> <p>\u6bcf\u6b21\u4e8c\u5206\u627e\u5230\u4e0a\u884c\u8def\u5f84\u4e2d\u7684\u7b2c\u4e00\u4e2a\u4e8e\u539f\u5e8f\u5217\u5bf9\u5e94\u7684\u8282\u70b9(\u8d77\u70b9)\uff0c\u4ece\u5b83\u5f00\u59cb\u500d\u589e\uff0c\u4fbf\u53ef\u4ee5\u89e3\u51b3\u4e0a\u884c\u7684\u60c5\u51b5\u3002\u4e0b\u884c\u4e5f\u540c\u7406\u3002</p> <p>\u63a5\u4e0b\u6765\u5c31\u662f\u4e00\u5806\u7ec6\u8282\u4e86\u3002</p> <ol> <li>\u6c42\u89e3\\(f[u][j]\\).</li> </ol> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u53ea\u8981\u6709\u4e86\\(f[u][0]\\),\u5269\u4f59\u5c31\u53ef\u4ee5\u9012\u63a8\u89e3\u51b3\u3002</p> <p>\u800c\\(f[u][0]\\)\u53ef\u4ee5\u7528\\(c\\)\u4e2a\u6808\\(h\\)\u7ef4\u62a4\u4e00\u4e0b\uff0c\u5373\u5bf9\u4e8e\u6bcf\u4e2a\u5b9d\u77f3\u5f00\u4e00\u4e2a\u6808\u3002</p> <p>\u800c\u56e0\u4e3a\u6211\u4eec\u8981\u77e5\u9053\u6bcf\u4e2a\u5b9d\u77f3\u4e0b\u4e00\u4e2a\u5b9d\u77f3\u7684\u7f16\u53f7\uff0c\u6240\u4ee5\u53ef\u4ee5\u63d0\u524d\u6c42\u4e00\u4e2a\\(nxt[i]\\)\u8868\u793a\u5b9d\u77f3\\(i\\)\u7684\u4e0b\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u6c42\u51fa\\(rk[i]\\),\u8868\u793a\u5b9d\u77f3\\(i\\)\u7684\u76f8\u5bf9\u6392\u540d\u3002</p> <p>\\(dfs\\)\u6bcf\u7ecf\u8fc7\u4e00\u4e2a\u8282\u70b9\uff0c\u5c31\u5c06\u8fd9\u4e2a\u8282\u70b9\u7684\u7f16\u53f7\u52a0\u5165\\(rk[a[u]]\\)\u8fd9\u4e2a\u6808\u91cc\u3002(\u6808\u7684\u4e0b\u6807\u4e3a\u5b9d\u77f3\u76f8\u5bf9\u6392\u540d\u3002)</p> <p>\u6bcf\u6b21\u5bf9\u4e8e\u8282\u70b9\\(u\\)\uff0c\u8bbf\u95ee\\(h[rk[a[u]]+1]\\)\u7684\u6808\u9876(\u6ce8\u610f\u7279\u5224\u6808\u4e3a\u7a7a\uff0c\u4e0d\u7136\u4f1a\\(RE\\))\uff0c\u5c31\u662f\u6df1\u5ea6\u6700\u6df1\u7684\\(f[u][0]\\)\u4e86\u3002</p> <ol> <li>\u4e8c\u5206\u8d77\u70b9</li> </ol> <p>\u4e8c\u5206\u4e00\u5b9a\u8981\u5229\u7528\u5355\u8c03\u6027\uff0c\u7136\u800c\u53ea\u770b\u5b9d\u77f3\u79cd\u7c7b\u65e0\u6cd5\u5f97\u51fa\u5355\u8c03\u6027\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u8981\u7528\u5230\\(dfs\\)\u5e8f\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5b9d\u77f3\\(i\\)\uff0c\u6c42\u51fa\u5b83\u5728\u90a3\u4e9b\\(dfs\\)\u5e8f\u5bf9\u5e94\u7684\u8282\u70b9\u51fa\u73b0\u8fc7\uff0c\u8bb0\u4e3a\\(d[i]\\)\u3002\\(dfs\\)\u5e8f\u4ece\u5c0f\u5230\u5927\u3002</p> <p>\u90a3\u4e48\uff0c\u6211\u4e48\u5c31\u53ef\u4ee5\u6839\u636e\\(dfs\\)\u5e8f\u7684\u6027\u8d28\uff0c\u7528\u6811\u5256\u5c06\u6811\u5206\u6210\u51e0\u6761\u91cd\u94fe\u3002\u91cd\u94fe\u4e0a\\(dfs\\)\u5e8f\u8fde\u7eed\uff0c\u6240\u4ee5\u53ef\u4ee5\u5728\\(d[i]\\)\u4e2d\u4e8c\u5206\u6700\u540e\u4e00\u4e2a\\(\\leq\\)\u6811\u94fe\u4e0b\u7aef\u70b9\\(dfs\\)\u5e8f\u7684\\(dfs\\)\u5e8f\u503c\\(tmp\\)\u3002\u5982\u679c\\(tmp\\)\u5728\\(id[top[t]],id[t]\\)\u4e4b\u95f4\uff0c\u5c31\u8bf4\u660e\u627e\u5230\u4e86\uff0c\u5426\u5219\u7ee7\u7eed\u5411\u4e0a\u627e\u3002</p> <p>\u590d\u6742\u5ea6\\(O(\\log^2n)\\),\u4e00\u5171\\(O(\\log n)\\)\u6761\u94fe\u3002</p> <ol> <li>\u500d\u589e</li> </ol> <p>\u5982\u679c\u627e\u5230\u8d77\u70b9\u518d\u8fdb\u884c\u500d\u589e\uff0c\u4e0d\u7136\u500d\u589e\u5c31\u6ca1\u610f\u4e49\u4e86\u3002</p> <ol> <li>\u4e0b\u884c</li> </ol> <p>~~\u300a\u4e0b\u884c\u4e5f\u540c\u7406\u300b\uff0c\u5f53\u65f6\u6211\u662f\u8fd9\u4e48\u60f3\u7684~~</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u6ce8\u610f\u5230\u4e00\u4e2a\u4e8b\uff1a\u500d\u589e\u6570\u7ec4\u53ea\u80fd\u5411\u4e0a\uff0c\u4e0d\u80fd\u5411\u4e0b\uff0c\u56e0\u4e3a\u4e00\u4e2a\u7236\u4eb2\u5bf9\u5e94\u591a\u4e2a\u513f\u5b50\u3002</p> <p>\u6240\u4ee5\u8fd9\u91cc\u6211\u4eec\u4ecd\u7136\u8981\u6c42\u4e00\u4e2a\u5411\u4e0a\u7684\u500d\u589e\u6570\u7ec4\\(g[u][j]\\),\u53ea\u4e0d\u8fc7\u8981\u6c42\\(h[rk[a[u]-1]\\),\u9006\u7740\u5411\u4e0a\u5373\u987a\u7740\u5411\u4e0b\u3002</p> <p>\u6c42\u51fa\u8fd9\u4e2a\u540e\u53d1\u73b0\uff0c\u6211\u4eec\u9700\u8981\u77e5\u9053\u6700\u7ec8\u7b54\u6848\u624d\u80fd\u4ece\\(t\\)\u5f00\u59cb\u4e8c\u5206\u8d77\u70b9+\u500d\u589e\uff0c\u4e0d\u7136\u8d77\u70b9\u4e0d\u786e\u5b9a\uff0c\u6ca1\u6cd5\u500d\u589e\u3002</p> <p>\u8fd8\u597d\u8fd9\u4e2a\u7b54\u6848\u5177\u6709\u5355\u8c03\u6027\uff0c\u5373\u5982\u679c\u8f83\u5927\u7684\u7b54\u6848\u5df2\u7ecf\u6ee1\u8db3\uff0c\u90a3\u4e48\u8f83\u5c0f\u7684\u7b54\u6848\u4e00\u5b9a\u6ee1\u8db3\u3002(\u76f8\u5f53\u4e8e\u6c42\u51fa\u7684\u5e8f\u5217\u548c\u524d\u9762\u5e8f\u5217\u53ef\u4ee5\u6709\u91cd\u5408\uff0c\u4f46\u4e0d\u80fd\u6709\u7a7a\u9699\u3002)</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u4e8c\u5206\u4e00\u4e2a\u6700\u7ec8\u7b54\u6848\uff0c\u7136\u540e\u4ece\u627e\u5230\u7684\u8d77\u70b9\u5411\u4e0a\u500d\u589e\uff0c\u6ce8\u610f\u8981\u51cf\u6389\u6240\u6709\u8d21\u732e\uff0c\u4e4b\u540e\u5224\u65ad\u4e00\u4e0b\u4e24\u6bb5\u662f\u5426\u6709\u91cd\u53e0\u5373\u53ef\u3002(\u8fd9\u91cc\u7684\u4e24\u6bb5\u5c31\u662f\u505a\u591a\u5411\u524d/\u5411\u540e\u500d\u589e\u4e86\u591a\u5c11\u4e2a\u5b9d\u77f3\u3002)</p> <p>\u5e76\u4e14\uff0c\u8fd9\u4e2a\u4e8c\u5206\u8981\u5224\u65ad\u5982\u679c\\(mid\\)\u5c0f\u4e8e\u4e0a\u884c\u7684\u7b54\u6848\uff0c\u90a3\u4e48\u660e\u663e\u6210\u7acb\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u89e3\u51b3\u4e86\u8fd9\u9053\u9898\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;vector&gt;\n#include&lt;stack&gt;\nusing namespace std;\nconst int N=2e5+10,M=5e4+10,K=23;\nint b[N],a[N],head[N],sz[N],top[N],son[N],fa[N],dep[N],id[N],dfn[N],f[N][K],g[N][K],rk[N];\nint n,m,c,q,cnt,tot,u,v,lca,num;\nvector&lt;int&gt; d[N];\nstack&lt;int&gt; h[N];\nstruct edge{\n    int v,nxt;\n}e[N&lt;&lt;1];\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nint read1(){\n    int x=0;char ch=getchar();\n    while(ch&lt;'0' || ch&gt;'9') ch=getchar();\n    while(ch&gt;='0' &amp;&amp; ch&lt;='9') x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nvoid write1(int x){\n    if(x&gt;9) write1(x/10);\n    putchar(x%10+'0');\n}\nvoid dfs1(int u,int p){\n    sz[u]=1;\n    h[rk[a[u]]].push(u);\n    f[u][0]=h[rk[a[u]]+1].empty()?0:h[rk[a[u]]+1].top(),g[u][0]=h[rk[a[u]]-1].empty()?0:h[rk[a[u]]-1].top();\n    for(int i=1;i&lt;K;++i) f[u][i]=f[f[u][i-1]][i-1],g[u][i]=g[g[u][i-1]][i-1];\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p) continue;\n        fa[v]=u,dep[v]=dep[u]+1;\n        dfs1(v,u);\n        sz[u]+=sz[v];\n        if(sz[son[u]]&lt;sz[v]) son[u]=v;\n    }\n    h[rk[a[u]]].pop();\n}\nvoid dfs2(int u,int t){\n    top[u]=t,id[u]=++tot,dfn[tot]=u;\n    if(son[u]) dfs2(son[u],t);\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==fa[u] || v==son[u]) continue;\n        dfs2(v,v);\n    }\n}\nint getlca(int u,int v){\n    while(top[u]!=top[v]){\n        if(dep[top[u]]&lt;dep[top[v]]) swap(v,u);\n        u=fa[top[u]];\n    }\n    return dep[u]&lt;dep[v]?u:v;\n}\nvoid Get(int &amp;u,int &amp;now,int x,int t){\n    u=0,now=0;\n    while(id[t]&gt;=id[lca]){\n        int idx=upper_bound(d[b[x]].begin(),d[b[x]].end(),id[t])-d[b[x]].begin()-1;\n        if(idx&gt;=0 &amp;&amp; d[b[x]][idx]&gt;=max(id[lca],id[top[t]])) {\n            u=dfn[d[b[x]][idx]];now=x;\n            break;\n        }\n        t=fa[top[t]];\n    }\n}\nbool check(int ans,int x,int t){\n    if(x&lt;ans) return true;\n    int u=0,now=0;\n    Get(u,now,x,t);\n    if(!now) return false;\n    for(int j=K-1;j&gt;=0;--j) if(g[u][j] &amp;&amp; id[g[u][j]]&gt;id[lca]) u=g[u][j],now-=(1&lt;&lt;j);\n    return now&lt;=ans;\n}\nvoid work(int s,int t){\n    lca=getlca(s,t);int u=0,now=0;\n    Get(u,now,1,s);\n    if(now) for(int j=K-1;j&gt;=0;--j) if(f[u][j] &amp;&amp; id[f[u][j]]&gt;=id[lca]) u=f[u][j],now+=(1&lt;&lt;j);\n    int l=1,r=c,ans=0;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(check(now+1,mid,t)) ans=mid,l=mid+1;\n        else r=mid-1;\n    }\n    write1(ans),putchar('\\n');\n}\nint main(){\n    memset(head,-1,sizeof head),cnt=-1;\n    n=read1(),m=read1(),c=read1();\n    for(int i=1;i&lt;=c;++i) b[i]=read1();\n    for(int i=1;i&lt;=n;++i) a[i]=read1();\n    for(int i=1;i&lt;=c;++i) rk[b[i]]=i;\n    for(int i=1;i&lt;n;++i) u=read1(),v=read1(),add(u,v),add(v,u);\n    dfs1(1,0);\n    dfs2(1,1);\n    for(int i=1;i&lt;=tot;++i) d[a[dfn[i]]].push_back(i);\n    q=read1();\n    for(int i=1;i&lt;=q;++i) u=read1(),v=read1(),work(u,v);\n    return 0;\n}\n</code></pre> <p>P2597</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u4f1a\u706d\u7edd\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6240\u6709\u98df\u7269\u90fd\u706d\u7edd\u4e86\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u8fd9\u4e9b\u98df\u7269\u7684\u5171\u540clca\u4e00\u5b9a\u706d\u7edd\u3002\u6240\u4ee5\u53ef\u4ee5\u5728\u62d3\u6251\u6392\u5e8f\u8fc7\u7a0b\u4e2d\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\u7ef4\u62a4\u4e00\u4e2a\\(dad\\)\u6570\u7ec4\uff0c\u5b58\u6240\u6709\u98df\u7269\u7684\u5171\u540clca\u3002\u6c42\u51fa\u6570\u7ec4\u540e\uff0c\u5c06\\(dad[i]\\)\u4e0ei\u8fde\u8fb9\uff0c\u6784\u6210\u65b0\u7684\u706d\u7edd\u6811\u3002\u7b54\u6848\u4e3a\\(sz[u]-1\\)\u3002\u5728\u6bcf\u6b21\u62d3\u6251\u65f6\uff0c\u7531\u4e8e\u62d3\u6251\u5e8f\u51b3\u5b9a\u5f53\u524d\u70b9\u4e4b\u524d\u6240\u6709\u70b9\u5df2\u7ecf\u641c\u7d22\u8fc7\uff0c\u6240\u4ee5\u5b83\u5728\u65b0\u7684\u706d\u7edd\u6811\u7684\u500d\u589e\u6570\u7ec4\u53ef\u4ee5\u552f\u4e00\u786e\u5b9a\u3002\u6240\u4ee5\u76f4\u63a5\u66f4\u65b0\u500d\u589e\u6570\u7ec4\u3002\\(dad\\)\u9ed8\u8ba4\u4e3a-1\u3002\u904d\u5386\\(u\\)\u7684\u98df\u7269\\(v\\),\u82e5\u5f53\u524d\u70b9\\(dad\\)\u5df2\u7ecf\u6709\u503c\uff0c\u5219\u66f4\u65b0\\(dad[i]=lca(dad[i],v)\\)\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#include&lt;vector&gt;\n#include&lt;queue&gt;\nusing namespace std;\nconst int N=1e5+10,M=2e5+10,K=20;\nstruct edge{\n    int v,nxt;\n}e[M&lt;&lt;1];\nint head[N],dad[N],ind[N],dep[N],fa[N][K],sz[N];\nint cnt,n,u;\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvector&lt;int&gt; g[N];\nqueue&lt;int&gt; q;\nint getlca(int u,int v){\n    if(u==v) return u;\n    if(dep[u]&lt;dep[v]) swap(u,v);\n    int k=dep[u]-dep[v];\n    for(int i=0;i&lt;K;++i){\n        if((k&gt;&gt;i)&amp;1) u=fa[u][i];\n    }\n    if(u==v) return u;\n    for(int i=K-1;i&gt;=0;--i){\n        if(fa[u][i]!=fa[v][i]) u=fa[u][i],v=fa[v][i];\n    }\n    return fa[u][0];\n}\nvoid dfs(int u,int p){\n    sz[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p) continue;\n        dfs(v,u);\n        sz[u]+=sz[v];\n    }\n}\nint main(){\n    memset(head,-1,sizeof head);\n    memset(dad,-1,sizeof dad);\n    cnt=-1;\n    scanf(\"%d\",&amp;n);\n    for(int v=1;v&lt;=n;++v){\n        while(1){\n            scanf(\"%d\",&amp;u);\n            if(u==0) break;\n            ++ind[v];\n            g[u].push_back(v);\n        }\n    }\n\n\n    for(int i=1;i&lt;=n;++i){\n        if(!ind[i]){\n            q.push(i);\n            dad[i]=0;\n        }\n    }\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        add(u,dad[u]),add(dad[u],u);\n        fa[u][0]=dad[u],dep[u]=dep[dad[u]]+1;\n        for(int i=1;i&lt;K;++i) fa[u][i]=fa[fa[u][i-1]][i-1]; \n        for(int i=0;i&lt;g[u].size();++i){\n            int v=g[u][i];\n            if(dad[v]==-1){\n                dad[v]=u;\n            }else{\n                dad[v]=getlca(u,dad[v]);\n            }\n            if(!(--ind[v])){\n                q.push(v);\n            } \n        }\n    }\n    dfs(0,0);\n    for(int i=1;i&lt;=n;++i){\n        printf(\"%d\\n\",sz[i]-1);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E5%87%8F%E5%B0%91%E6%97%A0%E7%94%A8%E7%8A%B6%E6%80%81/","title":"\u51cf\u5c11\u65e0\u7528\u72b6\u6001","text":"<p>CF1766D</p> <p>\u7531\u4e8e\u6ee1\u8db3<code>x+k=a*d[i]</code>\u7684\u6700\u5c0fk\u4e00\u5b9a\u6ee1\u8db3<code>x+k=a*t*d[j]</code>,\u5176\u4e2d<code>d[j]</code>\u4e3a\u8d28\u56e0\u5b50\uff0c<code>d[i]</code>\u4e3a\u56e0\u5b50</p> <p>\u6240\u4ee5\u53ef\u4ee5\u53ea\u679a\u4e3e\u8d28\u56e0\u5b50\uff0c\u590d\u6742\u5ea6\u7531 \\(O(\\sqrt n)\\) \u53d8\u4e3a \\(O(\\log n)\\) </p> <p>CF1870E</p> <p>\u5b9a\u4e49\u597d\u7684MEX\u533a\u95f4\u4e3a\u6ee1\u8db3MEX\u4e3a\u67d0\u4e00\u4e2a\u503c\\(k\\)\u7684\u6700\u5c0f\u533a\u95f4\u3002\u8fd9\u6837\u7684\u533a\u95f4\u53ea\u6709 \\(O(n)\\) \u4e2a\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3e\u8fd9 \\(O(n)\\) \u4e2a\u533a\u95f4\u5c31\u53ef\u4ee5\u3002</p>"},{"location":"my%20past/OI/%E5%88%86%E6%B2%BB/","title":"\u5206\u6cbb","text":"<p>P4755</p> <p>\u4e00\u9053\u795e\u5947\u7684\u9898</p> <p>\u672c\u6765\u60f3\u4e86\u4e2a\\(\\Theta(nlogn)\\)\u7684\u7b97\u6cd5\uff0c\u7ed3\u679c\u53ea\u5f97\u4e8620pts</p> <p>\u60f3\u6cd5\u662f\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u5355\u8c03\u9012\u589e\u7684\u5e8f\u5217\uff0c\u5bf9\u5185\u7684\u7b54\u6848\u8d21\u732e\u4e3a\u6240\u67091\u4e58\u4ee51\u540e\u9762\u7684\u90a3\u6bb5\u957f\u5ea6\uff1b\u5bf9\u5916\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4\uff0c\u6700\u5927\u503c\u6c38\u8fdc\u4e3a\u5e8f\u5217\u6700\u540e\u4e00\u4e2a\u6570</p> <p>hack\uff1a</p> <p>6</p> <p>1 3 9 3 12 4</p> <p>\u6ca1\u6709\u8003\u8651\u5230\u540e\u9762\u66f4\u5927\u7684\u6570\u5bf9\u7b54\u6848\u7684\u5f71\u54cd</p> <p>\u6b63\u89e3\uff1a</p>"},{"location":"my%20past/OI/%E5%88%86%E6%B2%BB/#_2","title":"\u542f\u53d1\u5f0f\u679a\u4e3e","text":"<p>\u8003\u8651\u5206\u6cbb.\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4[l,r],\u7528st\u8868\\(\\Theta(1)\\)\u627e\u51fa\u6700\u5927\u503c\u53ca\u5176\u4f4d\u7f6e\uff1b</p> <p>\u968f\u540e\u5206\u7c7b\u9012\u5f52(l,m),(m+1,r)\u6216(l,m-1),(m,r)</p> <p>\u6700\u540e\u7edf\u8ba1\u81ea\u5df1\u7684\u7b54\u6848.</p> <p>\u5bf9\u4e8e\u4e24\u6bb5\u5b50\u533a\u95f4\uff0c\u6c38\u8fdc\u542f\u53d1\u5f0f\u5730\u679a\u4e3e\u5c0f\u533a\u95f4\uff0c\u8fd9\u6837\u7684\u76ee\u7684\u662f\u5c06\u603b\u679a\u4e3e\u6b21\u6570\u5747\u644a\u4e3a\\(\\Theta(nlogn)\\)\uff0c\u52a0\u4e0a\u4e3b\u5e2d\u6811\u7684\\(\\Theta(logn)\\)\u5e94\u8be5\u4e3a\\(\\Theta(nlog^2n)\\).</p> <p>\u6bcf\u6b21\u679a\u4e3e\u7684\u6811\u7684\u8d21\u732e\u4e3a\u5927\u533a\u95f4\u4e2d&lt;=\\(\\frac {maxn}{a[i]}\\)\u7684\u6570\u7684\u4e2a\u6570\uff0c\u7528\u4e3b\u5e2d\u6811\u7ef4\u62a4.</p> <p>\u679a\u4e3e\u5c0f\u533a\u95f4\u7684\u6b63\u786e\u6027\uff1a \u56e0\u4e3a\u5927\u533a\u95f4\u6c38\u8fdc\u7528\u4e3b\u5e2d\u6811\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\u4e3a\\(\\Theta(logn)\\)\uff1b\u5206\u6cbb\u5171\u6709\\(\\log n\\)\u5c42\uff0c\u6bcf\u5c42\u5c0f\u533a\u95f4\u52a0\u5728\u4e00\u8d77\u6700\u574f\u60c5\u51b5\u4e3a\\(\\frac{n}{2}\\)\u957f\u5ea6\uff0c\u56e0\u6b64\u603b\u590d\u6742\u5ea6\u4e3a\\(\\Theta(nlogn)\\)</p>"},{"location":"my%20past/OI/%E5%8C%BA%E9%97%B4dp/","title":"\u533a\u95f4dp\u603b\u7ed3","text":"<p>1) \u4ec0\u4e48\u60c5\u51b5\u8981\u679a\u4e3e\u65ad\u70b9\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\\(f[l][k]+f[k+1][r]\\)\uff1f</p> <ul> <li>\u4e3a\u4e86\u8003\u8651\u533a\u95f4\u4e0e\u533a\u95f4\u5408\u5e76\u5bfc\u81f4\u7684\u65b0\u8d21\u732e\u7684\u52a0\u5165,\u56e0\u4e3a\u4e00\u6b65\u4e00\u6b65\u8f6c\u79fb\u4f1a\u6f0f\u6389\u7ec6\u8282\uff0c\u5177\u4f53\u6765\u8bf4\u5c31\u662f\u533a\u95f4\u7684\u7b54\u6848\u5408\u5e76\u540e\u4f1a\u6539\u53d8\uff0c\u53d8\u5c11\u6216\u53d8\u591a(P4170)\u3002</li> </ul> <p>2) \u4ec0\u4e48\u65f6\u5019\u53ef\u4ee5\u4e0d\u7528/\u4e0d\u80fd\u679a\u4e3e\u65ad\u70b9\uff1f</p> <ul> <li>\u5f53\u533a\u95f4\u4e0d\u5177\u5907\u53ef\u5408\u5e76\u6027(P5044/CF360B)\u6216\u9898\u76ee\u660e\u786e\u8f6c\u79fb\u662f\u4e00\u6b65\u4e00\u6b65\u7684(P1005)\u6216\u679a\u4e0d\u679a\u4e3e\u65ad\u70b9\u65e0\u6240\u8c13\uff0c\u4f46\u4e00\u6b65\u4e00\u6b65\u8f6c\u79fb\u53ef\u4ee5\u51cf\u5c11\u72b6\u6001\u6570\u7684(P4767)</li> </ul> <p>3) \u50cfP4158\u548cP4767\u8fd9\u79cd\u5e26\u6709\u6570\u91cf\u9650\u5236\u7684\u5e8f\u5217\u95ee\u9898\u5c31\u4e0d\u7b97\u533a\u95f4dp\u4e86\uff0c\u7b97\u7ebf\u6027dp.</p> <p>~~\u603b\u4e4b\u5177\u4f53\u60c5\u51b5\u9760\u76f4\u89c9~~</p>"},{"location":"my%20past/OI/%E5%8C%BA%E9%97%B4dp/#_1","title":"\u7edf\u8ba1\u6700\u503c\u7c7b","text":"<p>P1880</p> <p>\u6a21\u677f\u9898</p> <p>\u6ce8\u610f\u73af\u5f62\u9700\u8981\u5f002\u500d\u7a7a\u95f4</p> <p>P1063</p> <p>\u4e0eP1880\u5341\u5206\u7c7b\u4f3c\uff0c\u6ce8\u610f\u6bcf\u6b21\u589e\u52a0\u7684\u6570\u503c\u4e3a\\(a[b]* a[k+1]* a[e+1]\\)</p> <p>\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <pre><code>for(int l=1;l&lt;=n+n;++l){\n        for(int b=1;b+l-1&lt;=n+n;++b){\n            int e=b+l-1;\n            for(int k=b;k&lt;e;++k){\n                dp[b][e]=max(dp[b][e],dp[b][k]+dp[k+1][e]+a[b]*a[k+1]*a[(e+1)]);\n            } \n        }\n    }\n</code></pre> <p>P1220</p> <p>\u6ce8\u610f\u5230\u7279\u6b8a\u6027\u8d28\uff1a</p> <p>\u6700\u4f73\u65b9\u6848\u4e00\u5b9a\u53d6\u5f97\u662f\u8fde\u7eed\u7684\u533a\u95f4\u3002</p> <p>\u5047\u5982\u6709:</p> <p><pre><code>5 3\n2 10\n3 20\n5 20\n6 30\n8 10\n</code></pre> \u5f00\u59cb\u65f6\u60f3\u8981\u53d61\u53f7\u548c2\u53f7\uff0c\u90a3\u4e48\u5148\u53d61\u518d\u53d62\u80af\u5b9a\u6ca1\u6709\u5148\u53d62\u518d\u53d61\u597d\uff0c\u56e0\u4e3a\u53d61\u65f6\u7ecf\u8fc72\uff0c\u800c\u5173\u706f\u4e0d\u9700\u8981\u65f6\u95f4 \u56e0\u6b64\uff0c\u6240\u6709\u72b6\u6001\u90fd\u662f\u8fde\u7eed\u533a\u95f4\uff0c\u4fbf\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <pre><code>for(int l=c;l&gt;=1;--l){\n        for(int r=c;r&lt;=n;++r){\n            dp[l][r][l]=min(dp[l][r][l],min(dp[l+1][r][l+1]+(a[l+1]-a[l])*(sum-x[r]+x[l]),dp[l+1][r][r]+(a[r]-a[l])*(sum-x[r]+x[l]))); \n            dp[l][r][r]=min(dp[l][r][r],min(dp[l][r-1][l]+(a[r]-a[l])*(sum-x[r-1]+x[l-1]),dp[l][r-1][r-1]+(a[r]-a[r-1])*(sum-x[r-1]+x[l-1])));\n        }\n    }\n</code></pre> <p>P2466</p> <p>\u4e0e\u4e0a\u9762\u7684\u76f8\u4f3c\uff0c\u6bcf\u6b21\u79fb\u52a8\u540e\u5c0f\u7403\u90fd\u4f1a\u4e0b\u843d\uff0c\u76f8\u5f53\u4e8e\u6d88\u8017\u4e86\u6700\u7ec8\u7684\u4ef7\u503c\uff0c\u6240\u4ee5\u6700\u5c0f\u5316\u8fd9\u4e2a\u6d88\u8017\u5373\u53ef\uff0c\u8f6c\u79fb\u65b9\u7a0b\u540c\u4e0a\u9762\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\ntypedef double db;\nconst int N=1e3+10;\nconst db INF=1e16;\ndb f[N][N][2],res,ans;\nstruct node{\n    int x,y,v;\n}a[N];\nint s[N],sum,n,x;\nbool cmp(node a,node b);\nvoid init();\nvoid dp();\nint Abs(int x);\ndb Min(db a,db b);\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;x);\n    for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;a[i].x);\n    for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;a[i].y);\n    for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;a[i].v);\n    init();\n    dp();\n    return 0;\n}\nbool cmp(node a,node b){\n    return a.x&lt;b.x;\n}\nint Abs(int x){\n    return x&gt;=0?x:-x;\n}\ndb Min(db a,db b){\n    return a&lt;=b?a:b;\n}\nvoid init(){\n    sort(a+1,a+n+1,cmp);\n    for(int i=1;i&lt;=n;++i) s[i]=s[i-1]+a[i].v,sum+=a[i].v;\n    for(int i=1;i&lt;=n;++i) res+=(db)(a[i].y)/1000.0;\n    for(int i=1;i&lt;=n;++i)\n        for(int j=1;j&lt;=n;++j) f[i][j][0]=f[i][j][1]=INF;\n    for(int i=1;i&lt;=n;++i) f[i][i][0]=f[i][i][1]=(db)(Abs(x-a[i].x)*sum)/1000.0;\n}\nvoid dp(){\n    for(int l=2;l&lt;=n;++l){\n        for(int b=1;b+l-1&lt;=n;++b){\n            int e=b+l-1;\n            f[b][e][0]=Min(f[b][e][0],Min(f[b+1][e][0]+(db)(Abs(a[b+1].x-a[b].x)*(sum-s[e]+s[b]))/1000.0,f[b+1][e][1]+(db)(Abs(a[e].x-a[b].x)*(sum-s[e]+s[b]))/1000.0));\n            f[b][e][1]=Min(f[b][e][1],Min(f[b][e-1][0]+(db)(Abs(a[e].x-a[b].x)*(sum-s[e-1]+s[b-1]))/1000.0,f[b][e-1][1]+(db)(Abs(a[e].x-a[e-1].x)*(sum-s[e-1]+s[b-1]))/1000.0));\n        }\n    }\n    ans=Min(f[1][n][0],f[1][n][1]);\n    printf(\"%.3lf\",res-ans);    \n}\n/*\n3 3\n-4 -2 2\n22 30 26\n1 9 8\n*/\n</code></pre> <p>P1650</p> <p>\u8fd9\u9053\u9898\u4e00\u4e2a\u91cd\u8981\u7684\u6027\u8d28\u5c31\u662f\uff1a\u5bf9\u4e8e\u7530\u5fcc\u5168\u4e0d\u8f93\u7684\u51fa\u9a6c\u5e8f\u5217\uff0c\u4e00\u5b9a\u6ee1\u8db3\u4ece\u5927\u5230\u5c0f:</p> <p>$$A_1 \\geq A_2 \\geq... \\geq A_n\\</p> <p>\u5047\u8bbe\u6709A_i&lt;A_{i+1},\u4e14A_i\\geq B_i,A_{i+1}\\geq B_{i+1},B_i\\geq B_{i+1},\\\u90a3\u4e48\u5c31\u53ef\u4ee5\u4ea4\u6362A_i \u548cA_{i+1}\u3002 $$ \u540c\u6837\u80fd\u8bc1\u660e\u5bf9\u4e8e\u7530\u5fcc\u5168\u8f93\u7684\u5e8f\u5217\u6ee1\u8db3\u4ece\u5c0f\u5230\u5927\u3002</p> <p>\u4e8e\u662f\uff0c\u4efb\u610f\u7684\u72b6\u6001\u90fd\u662f\u4eceA\u5e8f\u5217\u5934\u548c\u4e3a\u53bb\u9664\u4e00\u4e9b\u5143\u7d20\u540e\u5f62\u6210\u7684\u8fde\u7eed\u5e8f\u5217\u3002\u8fd9\u6837\u7684\u8bdd\uff0c\u533a\u95f4DP\u548c\u8d2a\u5fc3\u90fd\u53ef\u4ee5\u505a\u4e86\u3002</p> <p>\u8bbef[i][j]\u8868\u793aA\u5e8f\u5217\u8fd8\u5269i\u5230j\u5339\u9a6c\u65f6\u7684\u6700\u4f18\u89e3\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=2010;\nint n;\nint a[N],b[N],f[N][N];\nbool cmp(int a,int b){\n    return a&gt;b;\n}\nint main(){\n    memset(f,-0x3f,sizeof f);\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;b[i]);\n    sort(a+1,a+n+1,cmp);\n    sort(b+1,b+n+1,cmp);\n    f[1][n]=0;\n    for(int num=0,l=n-1;l&gt;=1;--l){\n        num=n-l;\n        for(int i=1,j=0;i+l-1&lt;=n;++i){\n            j=i+l-1;\n            int g1=a[i-1]&gt;b[num]?200:(a[i-1]==b[num]?0:-200);\n            int g2=a[j+1]&gt;b[num]?200:(a[j+1]==b[num]?0:-200);\n            f[i][j]=max(f[i][j],f[i-1][j]+g1);\n            f[i][j]=max(f[i][j],f[i][j+1]+g2);\n        }\n    }\n    int ans=-0x3f3f3f3f;\n    for(int i=1,tmp=0;i&lt;=n;++i){\n        tmp=f[i][i]+(a[i]&gt;b[n]?200:(a[i]==b[n]?0:-200));\n        ans=max(ans,tmp);\n    }\n    printf(\"%d\",ans);\n    return 0;\n} \n/*\n3\n92 83 71\n95 87 74\n4\n87 84 83 82\n90 87 86 85\n4\n87 85 84 83\n90 87 86 82\n*/\n</code></pre> <p>P2587 ~~\u627f\u63a5\u4e0a\u6587~~</p> <p>\u8fd9\u9053\u9898\u6570\u636e\u8303\u56f4\u5c31\u6ca1\u90a3\u4e48\u53cb\u597d\u4e86\uff0c\u8d39\u7528\u6d41\u548cdp\u90fd\u884c\u4e0d\u901a\uff0c\u6b64\u65f6\u6211\u4eec\u8003\u8651\u8d2a\u5fc3\u3002</p> <p>\u56e0\u4e3a\u6709\u4e86\u8fde\u7eed\u6027\uff0c\u6240\u4ee5\u6211\u4eec\u53ea\u9700\u8981\u6bd4\u8f83a\uff0cb\u5e8f\u5217\u7684\u5934\u548c\u5c3e\u5c31\u884c\u4e86\uff0c\u6240\u4ee5\u6709\u56db\u4e2a\u6307\u9488\u3002</p> <p>\u4e0b\u9762\u5206\u60c5\u51b5\u8ba8\u8bba\u53d6\u6700\u5927\u503c\uff1a</p> <p>0.\u5148\u4ece\u5927\u5230\u5c0f\u6392\u5e8f</p> <p>1.a[la]&gt;b[lb],\u56e0\u4e3a\u8d62\u7684\u5e8f\u5217\u90fd\u662f\u5355\u8c03\u9012\u51cf\u7684\uff0c\u6240\u4ee5\u4e0d\u7528\u72b9\u8c6b\u76f4\u63a5\u603c\uff0c\u8d62\u4e0b\u4e00\u5c40\uff1b</p> <p>2.a[la]&lt;b[lb],\u6b64\u65f6b[lb]\u5c31\u662f\u6240\u6709\u6570\u4e2d\u6700\u5927\u7684\uff0ca\u4e0d\u7ba1\u51fa\u4ec0\u4e48\u90fd\u4e00\u5b9a\u8f93\uff0c\u6240\u4ee5\u7834\u7f50\u7834\u6454\uff0c\u8d2a\u5fc3\u7684\u53d6a\u7684\u6700\u5c0f\u503c\u603c\u5b83\u3002</p> <p>3.a[la]==b[lb].</p> <p>\u56e0\u4e3aa[la]\u5df2\u7ecf\u4e0eb[lb]\u76f8\u7b49\uff0c\u90a3\u4e48a[la]\u4e00\u5b9a\u5927\u4e8e\u7b49\u4e8eb[lb+1],\u6b64\u65f6\u5982\u679ca\u6700\u5c0f\u603cb\u6700\u5927\u8f93\uff0ca\u6700\u5927\u603cb\u6b21\u5927\u8d62\uff0c\u83b7\u5f97\u7684\u7ed3\u679c\u4e00\u5b9a\u4e0d\u5dee\u4e8ea\u6700\u5927\u4e0eb\u6700\u5927\u603c\u6210\u5e73\u5c40\uff08\u56e0\u4e3a\u6d88\u8017\u4e86b\u4e24\u5458\u5927\u5c06\uff0c\u800c\u4e00\u80dc\u4e00\u8d1f\u4e0e\u4e00\u5e73\u5c40\u7ed3\u679c\u4e00\u6837\uff09,\u6240\u4ee5\u9047\u5230\u5e73\u5c40\u5c31\u518d\u5206\u7c7b\uff1a</p> <p>1) a[ra]&gt;b[rb],\u65e2\u7136\u80fd\u8d62\uff0c\u90a3\u5c31\u603c</p> <p>2) a[ra]&lt;=b[rb],\u6b64\u65f6a[ra]\u65f6\u6700\u5c0f\u7684\uff0c\u4e00\u5b9a\u4f1a\u8f93\uff0c\u4e0e\u5176\u8ba9\u5b83\u4e0eb\u5c0f\u7684\u8f93\uff0c\u4e0d\u5982\u8ba9\u4ed6\u6d88\u8017\u6389b\u6700\u5927\u7684\u3002\u6ce8\u610f\u5f53\u5e8f\u5217\u53ea\u6709\u4e00\u4e2a\u6570\u65f6\uff0ca[ra]==b[lb]\u8981\u7279\u5224\u3002</p> <p>\u90a3\u4e48\u6700\u5c0f\u503c\u540c\u7406\u3002</p> <p>code time: <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=1e5+10;\nint a[N],b[N],n;\nbool cmp(int a,int b){\n    return a&gt;b;\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;b[i]);\n    sort(a+1,a+n+1,cmp);\n    sort(b+1,b+n+1,cmp);\n    int la=1,lb=1,ra=n,rb=n,ans=0;\n    for(int i=1;i&lt;=n;++i){\n        if(a[la]&gt;b[lb]){\n            ans+=2;\n            la++;\n            lb++;\n        }else if(a[la]&lt;b[lb]){//b[lb] biggest\n            ra--;\n            lb++;\n        }else{\n            if(a[ra]&gt;b[rb]){\n                ans+=2;\n                ra--;\n                rb--;\n            }else{//a[ra] smallest\n                if(a[ra]==b[lb])ans+=1;\n                ra--;\n                lb++;\n            }\n        }\n    }\n    printf(\"%d \",ans);\n    la=1,lb=1,ra=n,rb=n,ans=0;\n    for(int i=1;i&lt;=n;++i){\n        if(a[ra]&lt;b[rb]){\n            ra--;\n            rb--;\n        }else if(a[ra]&gt;b[rb]){//b[rb] smallest\n            ans+=2;\n            la++;\n            rb--;\n        }else{\n            if(a[la]&lt;b[lb]){ \n                la++;\n                lb++;\n            }else{//a[la] biggest\n                ans+=2;\n                if(a[la]==b[rb])ans-=1;\n                la++;\n                rb--;\n            }\n        }\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n</code></pre></p> <p>P3205</p> <p>\u6ce8\u610f\u5230\u6bcf\u79cd\u961f\u5f62\u53ea\u6709\u4e24\u79cd\u72b6\u6001\uff0c\u4e00\u79cd\u662f\u5de6\u8fb9\u7684\u6700\u540e\u8fdb\u961f\uff0c\u4e00\u79cd\u65f6\u53f3\u8fb9\u7684\u6700\u540e\u8fdb\u961f\uff0c\u56e0\u6b64\u5b9a\u4e49\u72b6\u6001\uff1a</p> <p>f[i][j][0/1]\u8868\u793ai\u5230j\u533a\u95f4\u7684\u5de6/\u53f3\u6700\u540e\u8fdb\u961f\u7684\u961f\u5f62</p> <p>\u5219\u8f6c\u79fb\u65b9\u7a0b\uff1a <pre><code>    memset(dp,0,sizeof dp);\n    for(int i=1;i&lt;=n;++i)dp[i][i][0]=1,dp[i][i][1]=0;//\u6ce8\u610f\uff0c\u662f\u5751\n    for(int l=1;l&lt;=n;++l){\n        for(int b=1;b+l-1&lt;=n;++b){\n            int e=b+l-1;\n            if(a[b]&lt;a[b+1])dp[b][e][0]=(dp[b][e][0]+dp[b+1][e][0])%P;\n            if(a[b]&lt;a[e])dp[b][e][0]=(dp[b][e][0]+dp[b+1][e][1])%P;\n            if(a[e]&gt;a[b])dp[b][e][1]=(dp[b][e][1]+dp[b][e-1][0])%P;\n            if(a[e]&gt;a[e-1])dp[b][e][1]=(dp[b][e][1]+dp[b][e-1][1])%P;//%P\n        }\n    }\n</code></pre> \u6ce8\u610f\u5f53(b+1==e)\u548c(b==e-1)\u65f6\uff0c\u5c06\u540c\u4e00\u79cd\u521d\u59cb\u72b6\u6001\u7b97\u4e86\u4e24\u904d\uff0c\u56e0\u6b64\u521d\u59cb\u5316\u65f6,\u5b9a\u4e49\u4e00\u4e2a\u4e3a0\uff0c\u53e6\u4e00\u4e2a\u4e3a1\u5373\u53ef\uff0c\u987a\u5e8f\u65e0\u6240\u8c13</p> <p>P1005</p> <p>\u4e0e3205\u5f88\u50cf\uff0c~~\u5c31\u662f\u9ad8\u7cbe\u5ea6\u592a\u70e6\u4eba\u4e86~~</p> <p>\u8bbef[i][j]\u8868\u793ai\u5230j\u90fd\u53d6\u5b8c\u7684\u6700\u5927\u503c.\u8f6c\u79fb\u65b9\u7a0b\uff1a <pre><code>for(int i=1;i&lt;=m;++i){\n        f[i][i]=tmp[i]&lt;&lt;1;\n    }\n    for(int l=2;l&lt;=m;++l){\n        for(int b=1;b+l-1&lt;=m;++b){\n            int e=b+l-1;\n            f[b][e]=max(f[b][e],2*f[b][e-1]+2*tmp[e]);\n            f[b][e]=max(f[b][e],2*f[b+1][e]+2*tmp[b]);\n        }\n    }\n</code></pre></p> <p>P3147</p> <p>\u5de7\u5999\u5730\u5c06\u5927\u7684\u4e8c\u7ef4\u72b6\u6001\u53d8\u4e3a\u5c0f\u7684</p> <p>\u8bbef[k][i]\u8868\u793a\u4ece\u5de6\u7aef\u70b9i\u4f4d\u7f6e\u80fd\u5408\u6210k\u7684\u53f3\u7aef\u70b9\u4f4d\u7f6e\u4fe1\u606f</p> <p>\u5219\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <p>f[k][i]=f[k-1][f[k-1][i]]</p> <p>\u590d\u6742\u5ea6\\(\\Theta(NK)\\)</p> <pre><code>for(int i=1;i&lt;=n;++i){\n        f[a[i]][i]=i+1;\n        maxn=max(maxn,a[i]);\n    }\n    for(int k=1;k&lt;=58;++k){\n        for(int i=1;i&lt;=n;++i){\n            f[k][i]=f[k-1][f[k-1][i]]==0?f[k][i]:f[k-1][f[k-1][i]];\n            if(f[k][i])maxn=max(k,maxn);\n        }\n    }\n</code></pre> <p>P4170</p> <p>\u82e5a[b]==a[e],\u5219\u5728\u4e00\u5f00\u59cb\u53ef\u4ee5\u90fd\u67d3\u4e86\uff0c\u6240\u4ee5\u7ee7\u627ff[b+1][e]\u548cf[b][e-1]</p> <p>\u82e5a[b]!=a[e],\u90a3\u5c31\u666e\u901a\u5730\u65ad\u6210\u4e24\u6bb5\u3002 <pre><code>for(int l=1;l&lt;=n;++l){\n        for(int b=1;b+l-1&lt;=n;++b){\n            int e=b+l-1;\n            if(a[b]==a[e])f[b][e]=min(f[b][e],f[b+1][e]);\n            if(a[b]==a[e])f[b][e]=min(f[b][e],f[b][e-1]);\n            for(int k=b;k&lt;e;++k){\n                f[b][e]=min(f[b][e],f[b][k]+f[k+1][e]);\n            }\n        }\n    }\n</code></pre> * \u4e3a\u4ec0\u4e48\u533a\u95f4dp\u4e0d\u80fd\u6bcf\u6b21\u53ea\u8f6c\u79fb\u4e00\u6b65\uff0c\u800c\u8981\u679a\u4e3e\u65ad\u70b9\u5462\uff1f</p> <p>\u56e0\u4e3a\u679a\u4e3e\u65ad\u70b9\u53ef\u4ee5\u628a\u5927\u533a\u95f4\u4e2d\u7684\u5c0f\u533a\u95f4\u679a\u4e3e\u51fa\u6765\uff0c\u4ece\u800c\u4e0d\u4f1a\u6f0f\u6389\u7ec6\u8282\u3002</p> <p>\u4ee5P4170\u4e3e\u4f8b\uff0c\u9762\u5bf9ABCBAABA\u8fd9\u4e2a\u4e32\u65f6\uff0c\u5982\u679c\u4e00\u6b65\u4e00\u6b65\u679a\u4e3e\uff0c\u5c31\u4e0d\u80fd\u770b\u5230BCB\u53ef\u4ee5\u4e24\u6b65\u89e3\u51b3\uff0c\u800c\u662f\u4f1a\u5224\u5b9a\u4e3a3\u6b65:</p> <p>AABA 2</p> <p>BAABA 3</p> <p>CBAABA 4</p> <p>BCBAABA 5 (X)</p> <p>\u8fd9\u662f\u56e0\u4e3a CB \u8fd9\u4e2a\u4e32\u4e2d\u7684B\u88ab\u5305\u5728\u4e86\u5927\u533a\u95f4\u91cc\u9762\uff0c\u6240\u4ee5\u6ca1\u6709\u679a\u4e3e\u5230\u3002</p> <p>P1622</p> <p>\u8bbef[i][j]\u8868\u793a\u7b2ci\u53f7\u5230\u7b2cj\u53f7\u72af\u4eba\u5168\u90e8\u91ca\u653e\u7684\u6700\u5c0f\u503c\uff0c\u5e76\u4e14\u5305\u542ba[i-1]\u5230a[j+1]\u4e4b\u95f4\u7684\u6240\u6709\u623f\u95f4\u3002</p> <p>\u4f8b\uff1a0---3---6---14---21</p> <p>\u5219f[1][2]\u8868\u793a---3---6---</p> <p>\u6ce8\u610fa\u7684\u4e24\u7aef\u5e94\u8be5\u8bbe\u4e3a0\u548cn+1\uff0c\u4e0d\u7136\u6574\u4e2a\u533a\u95f4\u5c31\u77ed\u4e862\u4e2a\u5355\u4f4d</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=1e3+10,M=110;\nint f[N][N];\nint a[N];\nint n,m;\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;++i)scanf(\"%d\",&amp;a[i]);\n    sort(a+1,a+m+1,cmp);\n    a[0]=0;\n    a[m+1]=n+1;\n    for(int l=1;l&lt;=m;++l){\n        for(int b=1;b+l-1&lt;=m;++b){\n            int e=b+l-1;\n            f[b][e]=999999999;\n            for(int k=b;k&lt;=e;++k){\n                f[b][e]=min(f[b][e],f[b][k-1]+f[k+1][e]+a[e+1]-a[b-1]-1-1); \n            }\n        }\n    }\n    printf(\"%d\",f[1][m]);\n    return 0;\n} \n</code></pre> <p>P7914</p> <p>~~\\(O(n^3)\\)\u80fd\u8fc7\u662f\u6211\u6ca1\u60f3\u5230\u7684~~</p> <p>\u8fd9\u9053\u9898\u6700\u9ebb\u70e6\u7684\u5730\u65b9\u662f\u5224\u91cd\u3002</p> <p>\u5047\u8bbe\u6709\u4e00\u4e2aAB\u4e32\u662f\u8fd9\u6837\u7684\uff1a</p> <pre><code>()()()\n</code></pre> <p>\u90a3\u4e48\uff0c\u5408\u5e76\u533a\u95f4\u65f6\u80af\u5b9a\u8981\u679a\u4e3e\u65ad\u70b9\uff0c\u800c\u5982\u679c\u4e0d\u52a0\u9650\u5236\u7684\u8bdd\uff0c\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\uff1a</p> <p><pre><code>1.()+()()\n2.()()+()\n</code></pre> \u8fd9\u6837\uff0c\u540c\u4e00\u4e2a\u4e32\u5c31\u4f1a\u7b97\u4e24\u904d\uff0c\u5c31\u9519\u4e86\u3002</p> <p>\u540c\u6837\u7684\uff0cASB\u4e32\u4e5f\u4f1a\u51fa\u73b0\u8fd9\u79cd\u60c5\u51b5\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u7c7b\u4f3c\u7ebf\u6027\u7b5b\u7684\u601d\u60f3\u53d6\u5224\u91cd\u3002</p> <p>\u7ebf\u6027\u7b5b\u662f\u8ba9\u6bcf\u4e2a\u6570\u90fd\u7531\u6700\u5c0f\u7684\u8d28\u6570\u7b5b\u6389\uff0c\u598212\u53ea\u75312 6\u7b5b\uff0c\u800c\u4e0d\u80fd\u75313 4\u7b5b\u6389\u3002</p> <p>\u540c\u7406\uff0c()()()\u53ea\u80fd\u7531()+()()\u66f4\u65b0\uff0c\u800c\u4e0d\u80fd\u7531()()+()\u66f4\u65b0\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u8fd9\u6837\u8bbe\u72b6\u6001\uff1a</p> <p><pre><code>struct node{\n    int A,S,AS,SA,AA,AAS,SAA;\n}f[N][N];\n</code></pre> \u5176\u4e2dAS,SA\u6307\u7531\"\u6700\u5c0f\"\u7684A\u4e32\u5f97\u51fa\u7684\u6784\u578b\uff0cAAS,SAA\u6307\u975e\"\u6700\u5c0f\"\u7684AA\u4e32\u5f97\u51fa\u7684\u6784\u578b\u3002</p> <p>\"\u6700\u5c0f\"\u662f\u6307\u4e25\u683c\u7531\u62ec\u53f7\u5305\u7740\uff0c\u5982(),(S),(A),(AS),(SA)\u90fd\u5c5e\u4e8e\u6700\u5c0f,\u5373A;</p> <p>\u800cAB,ASB\u5c5e\u4e8e\u975e\u6700\u5c0f,\u5373AA\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\u5c31\u662f\u4e0d\u53ef\u518d\u62c6\u5206\u7684A\u4e32\u3002</p> <p>\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\u5c31\u597d\u63a8\u4e86\u3002</p> <p>1) *\u548c()\u76f4\u63a5\u521d\u59cb\u5316\u5f97\u5230\u3002</p> <p>2) S\u53ef\u4ee5\u7531\u66f4\u5c0f\u7684S\u63a8\u51fa\u6765\uff0c\u53ea\u8981\u957f\u5ea6\u5c0f\u4e8e\u7b49\u4e8ek\u5e76\u4e14\u4e0d\u8986\u76d6\u56fa\u5b9a\u62ec\u53f7\u5c31\u884c\u3002</p> <p>3) A\u53ef\u4ee5\u7531\u6240\u6709(),(S),(AS),(SA),(A),(AAS),(SAA)\u5f97\u6765\u3002</p> <p>4) SA,AS,AAS,SAA\u53ef\u4ee5\u679a\u4e3e\u65ad\u70b9\uff1aAS=A S,SAA=S AA\u7b49\u3002</p> <p>5) AA\u540c\u6837\u679a\u4e3e\u65ad\u70b9\uff0c\u53ef\u4ee5\u7531\u6700\u5c0f\u5f97A\u548cAS\u4e0eA\u548cAA\u62fc\u63a5\u5f97\u6765\uff1aAA=(A+AS)* (A+AA);</p> <p>code time:</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt; \n#define int long long \nusing namespace std;\nconst int N=550,P=1e9+7;\nstruct node{\n    int A,S,AS,SA,AA,AAS,SAA;\n}f[N][N];\nint n,k,a[N];\nchar ch[N];\nbool ok(int i,int j){//(...)\n    if(a[i]!=1 &amp;&amp; a[i]!=-2 &amp;&amp; a[j]!=1 &amp;&amp; a[j]!=-1)return true;\n    else return false;\n}\nbool getS(int l,int i,int j){\n    if(l&gt;k)return false;\n    if((f[i][j-1].S==1 &amp;&amp; a[j]!=-1 &amp;&amp; a[j]!=-2) || (f[i+1][j].S==1 &amp;&amp; a[i]!=-1 &amp;&amp; a[i]!=-2))return true;\n    else return false;\n}\nvoid init(){\n    memset(f,0,sizeof f);\n    for(int i=1;i&lt;=n;++i){\n        if(a[i]==0 || a[i]==1){\n            f[i][i].S=1;//*\n        }else f[i][i].S=0;\n    }\n    for(int i=1;i+1&lt;=n;++i){\n        if(ok(i,i+1)){\n            f[i][i+1].A=1;//()\n        }else f[i][i+1].A=0;\n    }\n}\n\nvoid dp(){\n    init();\n    for(int l=1;l&lt;=n;++l){\n        for(int i=1,j=0;i+l-1&lt;=n;++i){\n            j=i+l-1;\n            if(ok(i,j)){\n                f[i][j].A=(f[i][j].A+f[i+1][j-1].AA+f[i+1][j-1].A+f[i+1][j-1].S+f[i+1][j-1].SA+f[i+1][j-1].AS+f[i+1][j-1].SAA+f[i+1][j-1].AAS)%P;\n                //(AA) (S) (A) (AS) (SA) (AAS) (SSA) \n            }\n            for(int p=i;p&lt;j;++p){\n                f[i][j].AS=(f[i][j].AS+f[i][p].A*f[p+1][j].S)%P;\n                //AS\n                f[i][j].SA=(f[i][j].SA+f[i][p].S*f[p+1][j].A)%P;\n                //SA\n                f[i][j].AAS=(f[i][j].AAS+f[i][p].AA*f[p+1][j].S)%P;\n                //AAS\n                f[i][j].SAA=(f[i][j].SAA+f[i][p].S*f[p+1][j].AA)%P;\n                //SAA\n\n            }\n            for(int p=i;p&lt;j;++p){\n                f[i][j].AA=(f[i][j].AA+(f[i][p].A+f[i][p].AS)*(f[p+1][j].A+f[p+1][j].AA))%P;\n                //AB\n                //ASB\n            } \n            if(getS(l,i,j)) f[i][j].S=1;//S\n        }\n    }\n    printf(\"%lld\",(f[1][n].A+f[1][n].AA)%P); \n}\nsigned main(){\n    //freopen(\"bracket4.in\",\"r\",stdin);\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    scanf(\"%s\",ch);\n    for(int i=0;i&lt;n;++i){\n        if(ch[i]=='*'){\n            a[i+1]=1;\n        }else if(ch[i]=='('){\n            a[i+1]=-1;\n        }else if(ch[i]==')'){\n            a[i+1]=-2;\n        }else{//?\n            a[i+1]=0;\n        }\n    }\n    dp();\n\n    return 0;\n}\n/*\n4 2\n()()\n\n6 2\n()()()\n\n7 3\n(*??*??\n\n(**)*()\n(**(*))\n(*(**))\n(*)**()\n(*)(**)\n\n10 2\n???(*??(?)\n\n\n(**(*))(*)\n(()(*))(*)\n()((*))(*)\n()*(**)(*)\n(*)(**)(*)\n()*(*)*(*)V\n(*)(*)*(*)\n\n\n()*(*()())  //()\n(*)(*()())\n(*)(*)(())  //)(\n()*(*)(())\n(()(**)())  //*)\n()((**)())\n(**(**)())\n(**(*)*())V //)*\n()((*)*())\n(()(*)*())\n(*((*))())  //))\n((*(*))())\n\n*/\n</code></pre> * \u590d\u6742\u5ea6\u8ba1\u7b97\uff1a \u5176\u5b9e\u4f20\u7edf\u7684\u533a\u95f4dp\u4e0d\u662f\\(\\Theta(N^3)\\),\u800c\u662f\\(O(n^3)\\),\u5e76\u4e14\u8981\u5c0f\u5f88\u591a\u3002</p> <p>\u5f53\u679a\u4e3e\u7684\u533a\u95f4\u957f\u5ea6\u4e3al\u65f6\uff0cl\u662f\u4ece1\u5230n\u53d8\u5316\u7684\uff0c\u8fd9\u4f7f\u5f97\u6bcf\u6b21\u518d\u679a\u4e3e\u533a\u95f4\u5de6\u7aef\u70b9\u7684\u6b21\u6570\u65f6\u4ecen\u52301\u53d8\u5316\u7684\uff0c\u800c\u6bcf\u6b21\u679a\u4e3e\u65ad\u70b9\u90fd\u8981\u679a\u4e3el\u6b21\uff0c\u6240\u4ee5\u603b\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u662f $$\\sum_{i=1}^n(n-i+1)* i=\\sum_{i=1}^nf(i)\\ \u5373\u5bf9f(i)\u79ef\u5206\uff1a\\ \\int_1^nf(i)di=F(n)-F(1) \\ \\because f(i)= -i^2+(n+1)i \\</p> <p>\\therefore F(i)=-\\frac13i^3+\\frac{n+1}{2}i^2\\</p> <p>\\therefore \u539f\u5f0f=-\\frac13n^3+\\frac12n^3+\\frac12n^2+\\frac13-\\frac12-\\frac n2\\ =\\frac16n^3+\\frac12n^2-\\frac12n-\\frac16\\ =O(\\frac16 n^3) $$</p> <p>~~\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u4e0d\u7528\u56db\u8fb9\u5f62\u4f18\u5316\u76f4\u63a5\u6c34\u8fc7~~</p> <p>P2470</p> <p>\u597d\u9898\u3002</p> <p>\u4e3a\u4e86\u65b9\u4fbf\u8868\u793a\uff0c\u5047\u8bbe\u6bcf\u4e2a\u4e32\u7684\u5f00\u5934\u90fd\u6709\\(M\\)\uff0c\u6700\u540e\u7b54\u6848\\(-1\\)\u5373\u53ef\u3002</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u80fd\u591f\u538b\u7f29\u7684\u4e32\u53ea\u6709\u4e00\u79cd\uff0c\u5c31\u662f\u4e2d\u95f4\u6ca1\u6709\\(M\\)\u7684\uff0c\u524d\u540e\u76f8\u540c\u7684\u4e32\u3002</p> <p>\u4f8b\u5982,\\(abcbcabcbc\\)\u524d\u540e\u76f8\u7b49\uff0c\u53ef\u4ee5\u538b\u7f29\u6210\\(abcbcR\\).</p> <p>\u867d\u7136\\(aMbcR\\)\u662f\\(abcbc\\)\u7684\u4e00\u4e2a\u538b\u7f29\uff0c\u4f46\u56e0\u4e3a\\(aMbcRaMbcR\\)\u4e2d\u95f4\u542b\u6709\\(M\\)\u4e14\\(M\\)\u524d\u6709\u4e1c\u897f\\((a)\\)\uff0c\u6240\u4ee5\u4e0d\u80fd\u53d8\u6210\\(aMbcRR(abcbcbcbc)\\)\u3002</p> <p>\u7531\u6b64\u53ef\u4ee5\u8bbe\u4e24\u79cd\u72b6\u6001\uff0c\\(f[i][j][0]\\)\u548c\\(f[i][j][1]\\).</p> <p>\\(f[i][j][0]\\)\u8868\u793a\u53ea\u6709\u5f00\u5934\u6709\u4e00\u4e2a\\(M\\)\uff0c\u5e76\u4e14\u4e2d\u95f4\u4e0d\u5305\u542b\\(M\\)\u7684\u72b6\u6001\u3002</p> <p>\\(f[i][j][1]\\)\u8868\u793a\u5f00\u5934\u6709\\(M\\),\u5e76\u4e14\u4e2d\u95f4\u6709\u4e00\u4e2a\u53ca\u4ee5\u4e0a\\(M\\)\u7684\u72b6\u6001\u3002</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u957f\u5ea6\u4e3a\u5076\u6570\u4e14\u524d\u540e\u76f8\u7b49\u7684\u4e32\uff0c\u53ef\u4ee5\u52a0\u4e00\u4e2a\\(R\\)\u538b\u7f29\u3002</p> <p>\u5bf9\u4e8e\u53ea\u6709\u4e00\u4e2a\\(M\\)\u7684\u72b6\u6001\uff0c\u53ef\u4ee5\u7531\u5c0f\u7684\u533a\u95f4\u52a0\u4e0a\u672a\u538b\u7f29\u7684\u539f\u4e32\u7684\u6765\u3002</p> <p>\u5bf9\u4e8e\u591a\u4e2a\\(M\\)\u7684\u72b6\u6001\u5219\u53ef\u4ee5\u679a\u4e3e\u65ad\u70b9\u3002</p> <p>code time:</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=55;\nint f[N][N][2];\nint n;\nint a[N];\nchar ch[N];\nbool check(int l,int r){\n    int len=r-l+1;\n    if(len&amp;1)return 0;\n    int mid=l+r&gt;&gt;1;\n    for(int i=l;i&lt;=mid;++i)\n        if(a[i]!=a[i-l+mid+1])return 0;\n    return 1;\n}\nvoid init(){\n    scanf(\"%s\",ch);\n    n=strlen(ch);\n    for(int i=0;i&lt;n;++i)a[i+1]=ch[i]-'a'+1;\n    for(int i=1;i&lt;=n;++i)\n        for(int j=i;j&lt;=n;++j)f[i][j][0]=f[i][j][1]=j-i+1+1;\n}\nvoid dp(){\n    for(int l=1;l&lt;=n;++l){\n        for(int i=1,j,mid;i+l-1&lt;=n;++i){\n            j=i+l-1;\n            mid=i+j&gt;&gt;1;\n            if(check(i,j))f[i][j][0]=min(f[i][j][0],f[i][mid][0]+1);\n            for(int k=i;k&lt;j;++k){\n                f[i][j][0]=min(f[i][j][0],f[i][k][0]+j-k);\n                f[i][j][1]=min(f[i][j][1],min(f[i][k][0],f[i][k][1])+min(f[k+1][j][0],f[k+1][j][1]));\n            }\n        }\n    }\n}\nint main(){\n    init();\n    dp();\n    printf(\"%d\",min(f[1][n][0],f[1][n][1])-1);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E5%8C%BA%E9%97%B4dp/#_2","title":"\u8bb0\u5fc6\u5316\u641c\u7d22","text":"<p>UVA10559</p> <p>\u770b\u5230\u8fd9\u9898\u5f88\u5bb9\u6613\u60f3\u5230\\(f[i][j]\\)\u8868\u793a\u5c06\\(i\\)\u5230\\(j\\)\u5168\u90e8\u6d88\u9664\u80fd\u4ea7\u751f\u7684\u6700\u5927\u8d21\u732e\u3002</p> <p>\u7136\u800c\uff0c\u95ee\u9898\u5728\u4e8e\uff0c\u4e0d\u4e00\u5b9a\u5c06\u8fd9\u4e2a\u533a\u95f4\u6240\u6709\u90fd\u6d88\u9664\u7684\u51b3\u7b56\u5c31\u662f\u6700\u4f18\u51b3\u7b56\uff0c\u4ed6\u4e0d\u6ee1\u8db3\u6700\u4f18\u5b50\u7ed3\u6784\uff0c\u5373\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u6709\u5b50\u95ee\u9898\u6700\u4f18\u89e3\u5f97\u6765\u3002</p> <p>\u6bd4\u5982\uff1a\u53ef\u4ee5\u5c06\u533a\u95f4\u4e2d\u95f4\u638f\u7a7a\uff0c\u7559\u4e0b\u67d0\u4e9b\u989c\u8272\u7684\u65b9\u5757\u4e0e\u533a\u95f4\u5916\u7684\u540c\u8272\u5757\u4e00\u8d77\u6d88\u9664\u3002</p> <p>\u8fd9\u662f\u8bf4\u660e\uff0c\u72b6\u6001\u63cf\u8ff0\u4e0d\u591f\u6e05\u6670\u3002\u6211\u4eec\u8981\u52a0\u7ef4\u3002</p> <p>\u8bbe\\(f[i][j][k]\\)\u8868\u793a\u6d88\u9664\u533a\u95f4\\(i\\)\u5230\\(j\\)\u4ee5\u53ca\u4e0e\\(a[j]\\)\u540c\u8272\u7684\uff0c\u53f3\u8fb9\u7684\\(k\\)\u4e2a\u5757\u4ea7\u751f\u7684\u6700\u5927\u8d21\u732e\u3002</p> <p>\u6b64\u65f6\u5bf9\u4e8e\\(j\\)\u548c\u5b83\u53f3\u8fb9\u7684\\(k\\)\u4e2a\u540c\u8272\u5757\u6709\u6d88\u9664\u548c\u4fdd\u7559\u4e24\u79cd\u51b3\u7b56\u3002</p> <p>1) \u6d88\u9664</p> <p>\u8fd9\u65f6\u53ea\u8981\u5c06\\(a[j]\\)\u4e0e\u53f3\u8fb9\\(k\\)\u4e2a\u5757\u4e00\u8d77\u6d88\u9664\u5c31\u884c\u3002\u8d21\u732e\\((k+1)^2\\)\u3002\u5269\u4e0b\u7684\u53e6\u4f5c\u8003\u8651\u3002 $$ f[i][j][k]=max(f[i][j][k],dfs(i,j-1,0)+(k+1)* (k+1)); $$</p> <p>\u81f3\u4e8e\u5c06\u8fde\u7eed\\(x\\)\u4e2a\\(j\\)\u5de6\u8fb9\u7684\u540c\u8272\u5757\u4e5f\u4e00\u540c\u6d88\u9664\u8fd9\u4e2a\u51b3\u7b56\uff0c\u4f1a\u88ab\u5305\u542b\u5728\u4fdd\u7559\u4e2d\u3002</p> <p>2) \u4fdd\u7559</p> <p>\u4fdd\u7559\u6307\u4fdd\u7559\u7740\\(j\\)\u548c\u5b83\u53f3\u8fb9\u7684\\(k\\)\u4e2a\u540c\u8272\u5757\uff0c\u4e0e\u533a\u95f4\u5de6\u8fb9\u7684\u4e00\u4e9b\u5757\u4e00\u8d77\u6d88\u53bb\uff0c\u5373\u7d2f\u79ef\\(k+1+p\\)\u4e2a\u540c\u8272\u5757\u4e00\u8d77\u6d88\u53bb\u3002</p> <p>\u5f53\u7136\uff0c\u4e0d\u4e00\u5b9a\u8981\u5c06\u6240\u6709\u540c\u8272\u5757\u90fd\u4e00\u6b21\u6027\u6d88\u53bb\uff0c\u53ef\u80fd\u53f3\u8fb9\u4e00\u90e8\u5206\u8fde\u7eed\u6d88\u9664\uff0c\u5de6\u8fb9\u7684\u6240\u6709\u540c\u8272\u5757\u90fd\u5355\u72ec\u6d88\u9664\uff0c\u8ba9\u4ed6\u4eec\u4e2d\u95f4\u7684\u5176\u4ed6\u989c\u8272\u5757\u8fde\u7eed\u6d88\u9664\u624d\u662f\u6700\u4f73\u7b54\u6848\u3002</p> <p>\u6240\u4ee5\u8981\u679a\u4e3e\u65ad\u70b9\uff0c\u800c\u8fd9\u4e2a\u65ad\u70b9\u4e0e\\(a[j]\\)\u540c\u8272\u3002\u8fd9\u4e2a\u53ef\u4ee5\u9884\u5904\u7406\u51fa\\(pre[j]\\).</p> <p>$$ f[i][j][k]=max(f[i][j][k],dfs(i,p,k+1)+dfs(p+1,j-1,0)); $$ <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=220;\nint f[N][N][N];\nint pre[N],vis[N],a[N];\nint T,n;\nvoid init() {\n    memset(pre,0,sizeof pre);\n    memset(vis,0,sizeof vis);\n    memset(f,0,sizeof f);\n    scanf(\"%lld\",&amp;n);\n    for(int i=1; i&lt;=n; ++i) {\n        scanf(\"%lld\",&amp;a[i]);\n        if(vis[a[i]])pre[i]=vis[a[i]];\n        vis[a[i]]=i;\n    }\n}\nint dfs(int i,int j,int k) {\n    if(i&gt;j)return 0;\n    if(f[i][j][k])return f[i][j][k];\n    f[i][j][k]=max(f[i][j][k],dfs(i,j-1,0)+(k+1)*(k+1));\n    for(int p=pre[j]; p&gt;=i; p=pre[p]) {\n        f[i][j][k]=max(f[i][j][k],dfs(i,p,k+1)+dfs(p+1,j-1,0));\n    }\n    return f[i][j][k];\n}\n\nsigned main() {\n    scanf(\"%lld\",&amp;T);\n    for(int t=1; t&lt;=T; ++t) {\n        init();\n        printf(\"Case %lld: %lld\\n\",t,dfs(1,n,0));\n    }\n    return 0;\n}\n</code></pre> ~~dp\u771f\u662f\u77ed\u5c0f\u7cbe\u608d\u7684\u4e1c\u897f~~</p> <p>P5044 naive\u7248</p> <p>\u5982\u679c\u8003\u8651\\(19pts\\)\u53ef\u4ee5\u533a\u95f4dp,\\(O(n^2)\\).</p> <p>\u8bbe\\(f[i][j]\\)\u8868\u793a\u4ece\\(i\\)\u5230\\(j\\)\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <p>\u9996\u5148\u8bbe\\(x\\)\u4e3a\u533a\u95f4\u6700\u5927\u503c\u7684\u4f4d\u7f6e\u3002</p> <p>\u6211\u4eec\u8003\u8651\u5f53\u9009\u53d6\u7684\u70b9\u5728\\(x\\)\u5de6\u8fb9\u65f6\uff0c\u53f3\u8fb9\u7684\u70b9\u8d21\u732e\u5168\u90e8\u4e3a\\(a_x\\),\u5de6\u8fb9\u7684\u70b9\u8d21\u732e\u5219\u4e3a\\(f[i][x-1]\\),\u53f3\u8fb9\u540c\u7406\uff0c\u6240\u4ee5\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ f[l][r]=\\min(f[l][x-1]+(r-x+1)* a[x],f[x+1][r]+(x-l+1)* a[x]) \\] <ul> <li> <p>\u7ed3\u8bba\uff1a</p> </li> <li> <p>\u8be5\u9898\u5177\u6709\u5355\u8c03\u6027\uff0c\u5373\u6bcf\u4e2a\u70b9\u7684\u8d21\u732e\u53ea\u7531\u533a\u95f4\u6700\u5927\u503c\u53ca\u5176\u4f4d\u7f6e\u51b3\u5b9a\uff0c\u8fd9\u6837\u8f6c\u79fb\u65f6\u5c31\u53ef\u4ee5\u53ea\u8003\u8651\u6700\u5927\u503c\uff0c\u964d\u4f4e\u8f6c\u79fb\u96be\u5ea6\u3002</p> </li> <li> <p>\u627e\u5355\u8c03\u6027\u65f6\u5c31\u8981\u8003\u8651\u54ea\u4e9b\u6761\u4ef6\u4f1a\u4f7f\u8d21\u732e\u5355\u4e00\u5316\uff0c\u6bd4\u5982\u6700\u5927\u503c\u4f1a\u4f7f\u5b83\u5de6/\u53f3\u7684\u533a\u95f4\u8d21\u732e\u5168\u90e8\u53d8\u4e3a\u81ea\u5df1\u3002</p> </li> </ul> <p>P4767 naive\u7248</p> <p>\u8bbe\\(f[i][j]\\)\u8868\u793a\u524d\\(i\\)\u4e2a\u6751\u5e84\u653e\u4e86\\(j\\)\u4e2a\u90ae\u5c40\u3002</p> <p>\u4e00\u4e2a\u4e00\u4e2a\u8f6c\u79fb\uff0c\u65b9\u7a0b\u4e3a</p> \\[ f[i][j]=\\min_{k=0}^{i-1}(f[i][j],f[k][j-1]+w(k+1,i)) \\] <p>\u5176\u4e2d\\(w(k+1,i)\\)\u4e3a\u8ba1\u7b97\\(k+1\\)\u5230\\(i\\)\u7684\u6700\u5c0f\u8ddd\u79bb\u548c\u3002</p> <p>\u56e0\u4e3a\u6570\u5b66\u4e0a\u8ddd\u79bb\u548c\u4e00\u5b9a\u662f\u4e2d\u4f4d\u6570\u6700\u5c0f\uff0c\u6240\u4ee5\u76f4\u63a5\u66b4\u529b\u6c42\u89e3\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=1e3+10;\nint f[N][N];\nint p,v;\nint a[N];\nint w(int l,int r){\n    int mid=l+r&gt;&gt;1,ans=0;\n    for(int i=l;i&lt;=mid-1;++i)ans+=a[mid]-a[i];\n    for(int i=mid+1;i&lt;=r;++i)ans+=a[i]-a[mid];\n    return ans;\n}\nint main(){\n    scanf(\"%d%d\",&amp;v,&amp;p);\n    for(int i=1;i&lt;=v;++i)scanf(\"%d\",&amp;a[i]);\n    memset(f,0x3f,sizeof f);\n    f[0][0]=0;\n    for(int i=1;i&lt;=v;++i){\n        for(int j=1;j&lt;=p;++j){\n            for(int k=0;k&lt;i;++k){\n                f[i][j]=min(f[i][j],f[k][j-1]+w(k+1,i));\n            }\n        }   \n    }\n    printf(\"%d\",f[v][p]);\n    return 0;\n} \n</code></pre> <ul> <li> <p>\u7ed3\u8bba\uff1a</p> </li> <li> <p>\\(w\\)\u7684\u6c42\u89e3\u5177\u6709\u5355\u8c03\u6027\uff0c\u53ef\u4ee5\u5e2e\u52a9\u7b80\u5316\u8f6c\u79fb\u3002</p> </li> <li> <p>\u5982\u679c\u679a\u4e3e\u65ad\u70b9\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u7684\u8bdd\uff0c\u65e2\u8981\u5c06\u90ae\u5c40\u4e2a\u6570\\(p\\)\u5408\u5e76\uff0c\u53c8\u8981\u5c06\u5de6\u53f3\u7aef\u70b9\\(l,r\\)\u5408\u5e76\uff0c\u8981\u4e24\u4e2a\u65ad\u70b9\uff0c\u80af\u5b9a\u4e0d\u884c\u3002\u4e8b\u5b9e\u4e0a\uff0c\u679a\u4e3e\u65ad\u70b9\u5408\u5e76\u533a\u95f4\u53ea\u6709\u5728\u5408\u5e76\u4e24\u4e2a\u533a\u95f4\u65f6\uff0c\u4e24\u4e2a\u533a\u95f4\u4e4b\u95f4\u4f1a\u6709\u65b0\u8d21\u732e\u65f6\uff0c\u624d\u9700\u8981\u3002\u50cf\u8fd9\u9898\uff0c\u5de6\u53f3\u533a\u95f4\u5408\u5e76\u5c31\u662f\u5408\u5e76\u4e86\uff0c\u4e4b\u95f4\u6ca1\u6709\u65b0\u8d21\u732e\uff0c\u90ae\u5c40\u4e2a\u6570\u7684\u589e\u52a0\u4e5f\u6ca1\u6709\u65b0\u8d21\u732e\uff0c\u5c31\u53ef\u4ee5\u4e00\u4e2a\u4e00\u4e2a\u5730\uff0c\u4e0d\u7528\u53f3\u533a\u95f4\u503c\u5730\u8f6c\u79fb\u3002</p> </li> <li> <p>\u8003\u8651\\([1\\ 2\\  5]\\ [6\\  7\\  8]\\),\u8fd9\u6837\u7684\u6570\u636e\u4f1a\u51fa\u9519\uff1f\u4e0d\uff0c\u56e0\u4e3a\\([1\\ 2]\\ [5\\ 6\\ 7\\ 8]\\)\u5373\u53ef\u6c42\u51fa\u6b63\u786e\u7b54\u6848\u3002</p> </li> </ul> <p>P4676</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u8bbe\\(f[i][j]\\)\u8868\u793a\u5c06\u5b8c\u5168\u5c5e\u4e8e\u8fd9\u4e2a\u533a\u95f4\u7684\u6240\u6709\u5916\u661f\u4eba\u5168\u90e8\u6d88\u9664\u7684\u6700\u5c0f\u503c\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5148\\(O(n)\\)\u627e\u51fa\u8fd9\u4e2a\u533a\u95f4\u5185\u8ddd\u79bb\u6700\u5927\u7684\u5916\u661f\u4eba\\(p\\)\u3002\u56e0\u4e3a\u5b83\u6700\u5927\uff0c\u4e0d\u4f1a\u88ab\u522b\u4eba\u987a\u5e26\u6d88\u9664\uff0c\u6240\u4ee5\u5fc5\u6709\u4e00\u4e2a\u64cd\u4f5c\u662f\u9488\u5bf9\u8fd9\u4e2a\u6700\u5927\u5916\u661f\u4eba\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u679a\u4e3e\\([a[p].l,a[p].r]\\)\u8fd9\u4e2a\u533a\u95f4\u7684\u65ad\u70b9\u5373\u53ef\uff0c\u90a3\u4e48\u4e1c\u7ebf\u81ea\u7136\u662f\\(a[p].d\\),\u8f6c\u79fb\u65b9\u7a0b:</p> \\[ f[i][j]=\\min(f[i][j],f[i][k-1]+f[k+1][j]+a[p].d) \\] <p>\u4e3a\u4ec0\u4e48\u8981\u5b8c\u5168\u5c5e\u4e8e\uff1f\u56e0\u4e3a\u5982\u679c\u8de8\u8d8a\u5f53\u524d\u533a\u95f4\u5230\u522b\u7684\u5730\u65b9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u6700\u5927\u5c31\u53ef\u80fd\u88ab\u591a\u4e2a\u65ad\u70b9\u679a\u4e3e\u5230\uff0c\u76f8\u5f53\u4e8e\u7b97\u91cd\u4e86\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=660,INF=1e18;\nstruct node{\n    int l,r,d;\n}a[N];\nint f[N][N];\nint b[N];\nint T,n,cnt,tot;\nbool cmp(int a,int b){return a&lt;b;}\nvoid lsh(){\n    sort(b+1,b+cnt+1,cmp);\n    tot=unique(b+1,b+cnt+1)-b-1;\n    for(int i=1;i&lt;=n;++i) a[i].l=lower_bound(b+1,b+tot+1,a[i].l)-b,a[i].r=lower_bound(b+1,b+tot+1,a[i].r)-b;\n}\nvoid dp(){\n    for(int i=1;i&lt;=tot;++i)\n        for(int j=i;j&lt;=tot;++j) f[i][j]=INF;\n    for(int l=1;l&lt;=tot;++l){\n        for(int i=1;i+l-1&lt;=tot;++i){\n            int j=i+l-1,pos=-1,maxn=-1;\n            for(int k=1;k&lt;=n;++k) if(i&lt;=a[k].l &amp;&amp; a[k].r&lt;=j &amp;&amp; a[k].d&gt;maxn) maxn=a[k].d,pos=k;\n            if(pos==-1){f[i][j]=0;continue;}\n            for(int k=a[pos].l;k&lt;=a[pos].r;++k) f[i][j]=min(f[i][j],f[i][k-1]+f[k+1][j]+a[pos].d);\n        }\n    }\n    printf(\"%lld\\n\",f[1][tot]);\n}\nsigned main(){\n    scanf(\"%lld\",&amp;T);\n    while(T--){\n        scanf(\"%lld\",&amp;n);cnt=0;tot=0;\n        for(int i=1;i&lt;=n;++i) scanf(\"%lld%lld%lld\",&amp;a[i].l,&amp;a[i].r,&amp;a[i].d),b[++cnt]=a[i].l,b[++cnt]=a[i].r;\n        lsh();\n        dp();\n    }\n    return 0;\n}\n</code></pre> <p>P5851</p> <p>\u4e0e\u4e0a\u9762\u7c7b\u4f3c\uff0c\u53ea\u662f\u6bcf\u6b21\\(dp\\)\u662f\u518d\u679a\u4e3e\u533a\u95f4\u5c31\u4f1a\u53d8\u6210\\(O(n^2m)=O(n^4)\\)\u7684\u590d\u6742\u5ea6\uff0c\u6240\u4ee5\u6211\u4eec\u9884\u5904\u7406\u4e00\u4e0b\\(g[k][i][j]\\),\u8868\u793a\u5bf9\u4e8e\\([i,j]\\)\u8fd9\u4e2a\u533a\u95f4\u4e2d\u5305\u542b\\(k\\)\u70b9\u7684\uff0c\u6240\u6709\u5b50\u533a\u95f4\u7684\u6700\u5927\u503c\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=330;\nint a[N][N][N];\nint f[N][N];\nint n,m,l,r,w;\nvoid init(){\n    for(int k=1;k&lt;=n;++k)\n        for(int i=k;i&gt;=1;--i)\n            for(int j=k;j&lt;=n;++j)\n                a[k][i][j+1]=max(a[k][i][j+1],a[k][i][j]),a[k][i-1][j]=max(a[k][i-1][j],a[k][i][j]);\n} \nvoid dp(){\n    for(int l=1;l&lt;=n;++l)\n        for(int i=1;i+l-1&lt;=n;++i){\n            int j=i+l-1;\n            //for(int k=i;k&lt;j;++k) f[i][j]=max(f[i][j],f[i][k]+f[k+1][j]);\n            for(int k=i;k&lt;=j;++k) f[i][j]=max(f[i][j],f[i][k-1]+f[k+1][j]+a[k][i][j]);\n        }\n    printf(\"%lld\",f[1][n]);\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld%lld\",&amp;w,&amp;l,&amp;r);\n        for(int k=l;k&lt;=r;++k) a[k][l][r]=max(a[k][l][r],w); \n    }\n    init();\n    dp();\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E5%8F%8C%E6%8C%87%E9%92%88/","title":"\u5c3a\u53d6\u6cd5 two-pointers","text":""},{"location":"my%20past/OI/%E5%8F%8C%E6%8C%87%E9%92%88/#_1","title":"\u7528\u9014","text":"<p>\u7528\u6765\u5904\u7406\u4e00\u4e9b\u5177\u6709\u5355\u8c03\u6027\u7684\u533a\u95f4\u95ee\u9898\u3002</p> <p>\u4e3b\u8981\u6d41\u7a0b\u5c31\u662f\u679a\u4e3e\u4e00\u4e2a\u5de6\u7aef\u70b9\\(l\\)\uff0c\u6c42\u51fa\u5408\u6cd5\u5e8f\u5217\u5bf9\u5e94\u7684\u53f3\u7aef\u70b9\\(r\\).</p> <p>\u5355\u8c03\u6027\u53ef\u80fd\u6307\u5bf9\u4e8e\u4e00\u4e2a\u5de6\u7aef\u70b9\\(l\\)\uff0c\u4e00\u4e2a\u5408\u6cd5\u7684\u5e8f\u5217\u4e3a\\([l,r]\\)\uff0c\u90a3\u4e48\\([l,r-1]\\)\u548c\\([l+1,r]\\)\u4e00\u5b9a\u4e0d\u5408\u6cd5,\u7b49\u7b49\u3002\u8fd9\u5206\u522b\u4fdd\u8bc1\u4e86\u53f3\u7aef\u70b9\u4e0d\u4f1a\u5de6\u79fb\u548c\u5de6\u7aef\u70b9\u53f3\u79fb\u4e0d\u4f1a\u6f0f\u89e3\u3002</p> <p>\u5c3a\u53d6\u6cd5\u7684\u590d\u6742\u5ea6\u4e00\u822c\u4e3a\\(O(n)\\)\uff0c\u56e0\u4e3a\u5355\u8c03\u6027\u4fdd\u8bc1\u5411\u53f3\u987a\u5e8f\u679a\u4e3e\\(l\\)\u65f6\uff0c\\(r\\)\u4e0d\u4f1a\u5411\u5de6\u79fb\u52a8\u3002</p> <p>\"\u5c3a\u53d6\u6cd5\u5c31\u662f\u5728\u5bf9\u4e8e\u679a\u4e3e\u6bcf\u4e00\u4e2a l \u7684\u65f6\u5019,\u53e6\u4e00\u4e2a\u5750\u6807 r \u7ef4\u62a4\u7684\u7b54\u6848\u4e5f\u662f\u5355\u8c03\u7684\u65f6\u5019\u53ef\u4ee5\u4f7f\u7528,\u80fd\u591f\u5747\u644a\u679a\u4e3e\u7684\u65f6\u95f4\u4ece\u800c\u628a\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230 O(n) . \"</p>"},{"location":"my%20past/OI/%E5%8F%8C%E6%8C%87%E9%92%88/#_2","title":"\u4f8b\u9898","text":"<p>P1638</p> <p>\u679a\u4e3e\\(l\\)\u5e76\u6c42\u51fa\u6bcf\u4e2a\u5408\u6cd5\u7684\u53f3\u7aef\u70b9\\(r\\),\u5e76\u7edf\u8ba1\u6700\u5c0f\u503c\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\nusing namespace std;\nconst int N=1e6+10;\nint n,m,el,er;\nint a[N],cnt[N];\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n    int l=1,r=0,now=0,ans=n+1;\n    for(;l&lt;=n;){\n        while(now&lt;m &amp;&amp; r&lt;n)now+=!cnt[a[++r]]++?1:0;\n        if(now&lt;m)break;\n        if(ans&gt;r-l+1)el=l,er=r,ans=r-l+1;\n        now-=!--cnt[a[l++]]?1:0;\n    }\n    printf(\"%d %d\",el,er);\n    return 0;\n} \n</code></pre> <p>UVA11572</p> <p>\u5982\u679c\\([l,r]\\)\u4e0d\u5408\u6cd5\uff0c\u5219\\([l,r+1]\\)\u4e00\u5b9a\u4e0d\u5408\u6cd5\uff0c\u8fd9\u5c31\u4fdd\u8bc1\u5355\u8c03\u6027\uff1a\u5982\u679c\\([l,r]\\)\u4e0d\u5408\u6cd5\uff0c\u5c31\u4e0d\u7528\u679a\u4e3e\u540e\u9762\u7684\\(r\\)\u4e86\uff0c\u76f4\u63a5\u53f3\u79fb\\(l\\).</p> <ul> <li>\u6240\u6709\u7684\u5c3a\u53d6\u90fd\u662f\u53ea\u8981\u6ee1\u8db3/\u4e0d\u6ee1\u8db3\u67d0\u4e00\u6761\u4ef6\u5c31\u53ef\u4ee5\u53f3\u79fb\\(l\\)\u5e76\u4e14\\(r\\)\u4e0d\u4f1a\u5de6\u79fb\u3002</li> </ul> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=1e6+10;\nint T,n;\nint a[N],cnt[N],b[N];\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nvoid init(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]),b[i]=a[i];\n    sort(b+1,b+n+1,cmp);\n    int tot=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i&lt;=n;++i)a[i]=lower_bound(b+1,b+tot+1,a[i])-b;\n}\nint main(){\n    scanf(\"%d\",&amp;T);\n    while(T--){\n        init();\n        int l=1,r=0,ans=0;\n        memset(cnt,0,sizeof cnt);\n        for(;l&lt;=n;){\n            while(r&lt;n){\n                if(cnt[a[r+1]])break;\n                else cnt[a[++r]]++;\n            }\n            ans=max(ans,r-l+1);\n            --cnt[a[l++]];\n        }\n        printf(\"%d\\n\",ans);\n    }\n    return 0;\n}\n</code></pre> <p>AT4142</p> <p>\u8fd9\u9898\u4e5f\u6ee1\u8db3\u5355\u8c03\u6027\u3002</p> <p>\u8bbe\\(a_l+...+a_r=sum_a,a_lxor...xora_r=sum_b\\),\u5219\u6ee1\u8db3\\(sum_a\\geq sum_b\\),\u6240\u4ee5\u5982\u679c\\(sum_a&gt;sum_b\\)\uff0c\u540e\u9762\u7684\\(r\\)\u90fd\u4e0d\u7528\u679a\u4e3e\u4e86\u3002</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=2e5+10;\nint n;\nint a[N];\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]);\n    int l=1,r=0,sum=0,nowa=0,nowb=0;\n    for(;l&lt;=n;){\n        while(r&lt;n){\n            if((nowa+a[r+1])&gt;(nowb^a[r+1]))break;\n            ++r;\n            nowa+=a[r];\n            nowb^=a[r];\n        }\n        sum+=r-l+1;\n        nowa-=a[l];\n        nowb^=a[l];\n        l++;\n    }\n    printf(\"%lld\",sum);\n    return 0;\n} \n</code></pre> \u4e5f\u53ef\u4ee5\u4e8c\u5206\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\\(l\\)\u4e8c\u5206\u51fa\u6700\u540e\u6ee1\u8db3\\(sum_a=sum_b\\)\u7684\u53f3\u7aef\u70b9\\(r\\),\u65f6\u95f4\u590d\u6742\u5ea6\\(O(nlogn)\\)</p> <ul> <li>\u7ed3\u8bba\uff1a\u4e8c\u5206\u4e0d\u4e00\u5b9a\u8981\u4e8c\u5206\u7b54\u6848\uff0c\u4e5f\u53ef\u4ee5\u5bf9\u5de6\u7aef\u70b9\u6bcf\u6b21\u90fd\u4e8c\u5206\u53f3\u7aef\u70b9\u3002</li> </ul> <p>CF47E</p> <p>~~\u5c5e\u4e8e\u6709\u601d\u8def\u4f46\u5199\u4e0d\u5bf9\u4ee3\u7801\u7684\u9898\u4e86~~</p> <p>\u4e00\u5f00\u59cb\u770b\u9898\u5c31\u6ce8\u610f\u5230\\(0&lt;\\alpha&lt;\\frac\\pi4\\),\u8fd9\u610f\u5473\u7740\u629b\u7269\u7ebf\u7684\u9ad8\u5ea6\u548c\u8ddd\u79bb\u65f6\u5355\u8c03\u9012\u589e\u7684\u3002</p> \\[x=\\frac{v^2\\sin2\\alpha}{g}\\\\y=\\frac{v\\sin\\alpha}{g}\\] <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u7528\u5c3a\u53d6\u6cd5\u4e86,\u56e0\u4e3a\u5982\u679c\u70ae\u5f39\u6253\u5728\u5899\u4e0a\uff0c\u90a3\u4e48\u6bd4\u4ed6\u89d2\u5ea6\u5c0f\u7684\u70ae\u5f39\u4e5f\u4e00\u5b9a\u6253\u5728\u5899\u4e0a\u3002</p> <p>\u5bf9\u4e8e\u6240\u6709\u70ae\u5f39\u7684\u89d2\u5ea6\u6392\u4e2a\u5e8f\uff0c\u5bf9\u5899\u7684\u6a2a\u5750\u6807\u4e5f\u6392\u4e2a\u5e8f\u3002</p> <p>\u5982\u679c\u8ba1\u7b97\u51fa\\(y\\leq 0\\)\u8bf4\u660e\u6253\u5728\u5730\u4e0a\uff0c\u76f4\u63a5\u8ba1\u7b97\u5730\u4e0a\u6a2a\u5750\u6807\u3002</p> <p>\u5982\u679c\u8ba1\u7b97\\(0&lt;y\\leq s[l].y\\),\u8bf4\u660e\u6253\u5728\u5899\u4e0a\u3002</p> <p>\u6700\u540e\u76f4\u63a5\u8f93\u51fa\\(ans[i]\\)\u5373\u53ef\u3002</p> <p>CF430B</p> <ul> <li>\u8fd9\u9898\u63d0\u9192\u6211\u4eec\u53cc\u6307\u9488\u4e0d\u4e00\u5b9a\u8981\u50cf\"\u5c3a\"\u4e00\u6837\u4ece\u5de6\u5230\u53f3\u626b\u533a\u95f4\uff0c\u8fd8\u53ef\u4ee5\u4ece\u4e2d\u95f4\u5411\u4e24\u8fb9\u6269\u6563\u3002</li> </ul> <p>\u6ce8\u610f\u7b2c\u4e00\u6b21\u7684\u8ba1\u6570\\(cnt-1\\).</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\nusing namespace std;\nconst int N=220;\nint n,k,x,maxn;\nint a[N];\nint main(){\n    scanf(\"%d%d%d\",&amp;n,&amp;k,&amp;x);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n    for(int i=0;i&lt;=n;++i){\n        int l=i,r=i+1,now=x,cnt=1,ans=0,flag=-1;\n        for(int time=1;;time++){\n            while(l&gt;=1 &amp;&amp; now==a[l])--l,++cnt;\n            while(r&lt;=n &amp;&amp; now==a[r])++r,++cnt;\n            if(cnt&lt;=2)break;\n            ans+=cnt+flag;\n            if(a[l]!=a[r] || l==0 &amp;&amp; r==n+1)break;\n            now=a[l];\n            cnt=0;\n            flag=0;\n        }\n        maxn=max(maxn,ans);\n    }\n    printf(\"%d\",maxn);\n    return 0;\n} \n/*\n50 2 1\n1 1 2 2 1 2 1 1 2 2 1 2 1 2 1 1 2 2 1 2 1 2 2 1 2 1 2 1 2 2 1 1 2 2 1 1 2 2 1 2 1 1 2 1 1 2 2 1 1 2\n*/\n</code></pre> <p>CF939E</p> <p>\u8d2a\u5fc3\u5c3a\u53d6\u6cd5\u3002</p> <p>\u6709\u4e24\u6761\u91cd\u8981\u6027\u8d28\u3002</p> <p>1) \u5bf9\u4e8e\u4e00\u4e2a\u52a0\u5165\u7684\u65b0\u6570\u4e00\u5b9a\u8981\u9009\u3002</p> <p>$$ \u539f\u5f0f ans=Max-\\frac{sum}{n}\\</p> <p>\u8003\u8651\u7528\u65b0\u7684\u6700\u5927\u66ff\u6362\u6389\u539f\u6765\u7684\u6700\u5927\uff0c\u8bbe\u65b0\u7684\u6700\u5927\u6bd4\u539f\u6765\u6700\u5927\u5927 \\Delta(x)\\ ans=\\frac{(Max+\\Delta(x))\\times n-(sum+\\Delta(x))}{n}\\</p> <p>\u56e0\u4e3a n\\geq 1\uff0cans\u4e00\u5b9a\u53d8\u5927\uff08\u4f18\u79c0\uff09 $$ 2) \u5bf9\u4e8e\u96c6\u5408 s \u5269\u4e0b\u7684\u6570\uff0c\u4e00\u5b9a\u662f\u9009\u524d\u9762\u51e0\u4e2a\u5c0f\u7684\u6570\uff0c\u5e76\u4e14\u9009\u7684\u6570\u7684\u4e2a\u6570\u662f\u5355\u8c03\u4e0d\u51cf\u7684\u3002</p> <p>\u53ef\u4ee5\u610f\u4f1a\u4e00\u4e0b\u8bc1\u660e\uff0c\u4e00\u5b9a\u662f\u9009\u6bd4\u5f53\u524d\u96c6\u5408\u5e73\u5747\u6570\u5c0f\u7684\u6570\u52a0\u8fdb\u6765\uff0c\u4f7f\u5e73\u5747\u6570\u66f4\u5c0f\uff0c\u7b54\u6848\u624d\u4f1a\u53d8\u5f97\u66f4\u5927\u3002 $$ \u539f\u5f0f ans=Max-\\frac{sum}{n}\\</p> <p>\u8003\u8651\u65b0\u52a0\u4e00\u4e2a\u6570 \\Delta(x)\\ \u65b0\u7684\u5f0f\u5b50 ans=Max-\\frac{sum+\\Delta(x)}{n+1}\\</p> <p>\u82e5\u65b0\u5f0f\u51cf\u53bb\u539f\u5f0f&gt;0\uff0c\u5219\u65b0\u5f0f\u66f4\u4f18\u79c0\\ \u65b0\u5f0f\u51cf\u539f\u5f0f\u5f97\\ -\\frac{sum+\\Delta(x)}{n+1}+\\frac{sum}{n}\\</p> <p>\u7b49\u4e8e\\ \\frac{sum-n\\times \\Delta(x)}{n\\times(n+1)}&gt;0\\</p> <p>\u5f97\u51fa\u66f4\u4f18\u79c0\u6761\u4ef6\u4e3a\uff1asum-n\\times \\Delta(x)&gt;0\uff0c\u5373 \\Delta(x) &lt;\\frac{sum}{n}\\ $$</p> <p>\u8bc1\u6bd5\uff0c\u53ef\u4ee5\u7528\u5c3a\u53d6\u6cd5\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define db double\n#define int long long \nusing namespace std;\nconst int N=5e5+10;\nint n,cnt,tot;\nint vis[N],q[N];\ndb res[N],a[N],sum[N];\nint read1(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }   \n    while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid work(){\n    int l=1,r=0;\n    db ans=-1.0;\n    for(int i=1;i&lt;=cnt;++i)sum[i]=sum[i-1]+a[i];\n    for(int i=1;i&lt;=cnt;++i){\n        if(!vis[i])continue;\n        ans=-1.0;\n        while(l&lt;=i){\n            db tmp=(double)(a[i]-(double)(sum[l]+a[i])/(l+1));\n            if(tmp&gt;ans)ans=tmp,++l;\n            else{\n                --l;\n                break;  \n            }\n        }\n        if(l==i+1)--l;\n        res[i]=ans;\n    }\n    for(int i=1;i&lt;=tot;++i)printf(\"%.10lf\\n\",res[q[i]]);\n\n}\nsigned main(){\n    cnt=0,tot=0;\n    n=read1();\n    for(int i=1,op;i&lt;=n;++i){\n        op=read1();\n        if(op==1){\n            a[++cnt]=(double)read1();\n        }else{\n            vis[cnt]=1;\n            q[++tot]=cnt;\n        }\n    }\n    work();\n    return 0;   \n}\n</code></pre>"},{"location":"my%20past/OI/%E5%9B%BE%E8%AE%BA/","title":"\u56fe\u8bba","text":"<p>P5881</p> <p>\u8bbe\u5bf9\u4e8e\u6bcf\u4e2a\u6570\\(i\\)\u7684\u6574\u6570\u56e0\u5f0f\u90e8\u5206\u4e3a\\(h(i)\\),\u5219\\(gcsd(x,y)=h(gcd(x,y))^2=gcd(h(x),h(y))^2\\)</p> <p>\u539f\u95ee\u9898\u662f\u5bf9\u4e8e\u6240\u6709\\(gcsd(x,y)&gt;x\\)\u7684\u6570\u8fde\u8fb9\uff0c\u6c42\u51fa\u6240\u6709\u8fde\u901a\u5757\u4e2a\u6570\u4ee5\u53ca\u5757\u5185\u6700\u5927\\(c_i\\)\u7684\u548c\u3002</p> <p>\u6240\u4ee5\u7528\u7ebf\u6027\u7b5b\u6c42\u51fa\u6bcf\u4e2a\u6570\u7684\\(h(i)\\),\u5bf9\u4e8e\\(h(a_i) \\leq x\\)\u7684\u6570\\(a_i\\)\uff0c\u53ef\u4ee5\u76f4\u63a5\u629b\u5f03\uff0c\u56e0\u4e3a\u4ed6\u4eec\u81ea\u59cb\u81f3\u7ec8\u4e0d\u4f1a\u4ea7\u751f\u8fb9\u3002</p> <p>\u5bf9\u4e8e\\(h(a_i)&gt;x\\),\u5b83\u4eec\u7684\u5927\u5c0f\u4e0d\u4f1a\u8d85\u8fc7\\(\\sqrt a\\),\u6240\u4ee5\u53ea\u9700\u8981\\(\\sqrt a\\)\u4e2a\u70b9\u5c31\u53ef\u4ee5\u89e3\u51b3\uff0c\\(h(a_i)\\)\u76f8\u540c\u7684\u6570\u53ef\u4ee5\u770b\u6210\u4e00\u4e2a\u70b9\uff0c\\(c\\)\u5c31\u662f\u6700\u5927\u503c\u3002</p> <p>\u8fd9\u6837\uff0c\u5bf9\u4e8e\\(x\\)\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u540e\uff0c\u518d\u4e00\u6b21\u5411\u56fe\u4e2d\u52a0\u8fb9\uff0c\u7528\u5e76\u67e5\u96c6\u7ef4\u62a4\u7b54\u6848\u5373\u53ef\u3002</p> <ul> <li>\u7ed3\u8bba\uff1a</li> </ul> <p>1) \u5bf9\u4e8e\u8fb9\u6570\u8f83\u591a\u7684\u60c5\u51b5\uff0c\u5982\u679c\u6240\u6709\u8fb9\u90fd\u662f\u4e00\u4e2a\u4e00\u4e2a\u533a\u95f4\u5730\u52a0\u5165\uff0c\u5c31\u53ef\u4ee5\u7ebf\u6bb5\u6811\u4f18\u5316\u5efa\u56fe\uff1b\u5426\u5219\uff0c\u5c31\u8981\u601d\u8003\u5220\u70b9\u5220\u8fb9\uff0c\u5c06\u4e0d\u4f1a\u6d89\u53ca\u5230\u7684\u70b9\u53bb\u9664\u3002</p> <p>2) \u7ebf\u6027\u7b5b\u7684\u597d\u5904\u5c31\u662f\uff0c\u5bf9\u6bcf\u4e2a\u6570\u90fd\u53ea\u9700\u8981\u8003\u8651\u5b83\u7684\u6700\u5c0f\u8d28\u56e0\u5b50\uff0c\u56e0\u4e3a\u5728\u5b83\u4e4b\u524d\u7684\u6570\u5df2\u7ecf\u6c42\u597d\u4e86\uff0c\u800c\u8fd9\u4e00\u6b65\u4e00\u5b9a\u662f\u7531\u6700\u5c0f\u8d28\u56e0\u5b50\u7b5b\u51fa\u6765\u7684\u3002\u4e0d\u4ec5\u662f\u7b5b\u6cd5\uff0c\u8bb8\u591adp\u4e5f\u9075\u5faa\u8fd9\u6837\u7684\u5355\u8c03\u6027\u66f4\u65b0\u539f\u5219\u3002\u8fd9\u6837\u53ef\u4ee5\u51cf\u5c11\u7ef4\u62a4\u7684\u4e1c\u897f\uff0c\u5982\u8fd9\u9898\u4ece\u7ef4\u62a4\u6240\u6709\u7684\u8d28\u56e0\u5b50\u53d8\u6210\u53ea\u9700\u8981\u7ef4\u62a4\u6700\u5c0f\u8d28\u56e0\u5b50\u3002</p>"},{"location":"my%20past/OI/%E5%A4%8D%E6%9D%82%E5%BA%A6/","title":"\u770b\u4f3c\u9519\u8bef\u7684\u590d\u6742\u5ea6\u7684\u6e10\u8fd1\u5904\u7406","text":""},{"location":"my%20past/OI/%E5%A4%8D%E6%9D%82%E5%BA%A6/#thetanlogn","title":"\u5806\u7684\u5efa\u7acb \\(\\Theta(nlogn)\\)","text":"<p>\u5f53\u6211\u4eec\u8bd5\u56fe\u5c06n\u4e2a\u6570\u7b80\u79f0\u5806\u65f6\uff0c\u4e00\u822c\u8ba4\u4e3a\u5c06\u6240\u6709\u6570\u66b4\u529b\u52a0\u5165\u5806\uff0c\u4e00\u6b21\u590d\u6742\u5ea6\\(\\Theta(logn)\\)\uff0c\u603b\u590d\u6742\u5ea6\u4e3a\\(\\Theta(nlogn)\\)\uff0c\u4e8b\u5b9e\u4e0a\uff0c\u5176\u6e10\u8fd1\u590d\u6742\u5ea6\u4e3a\\(\\Theta(n)\\) \u8bbe\\(\\Theta(h)\\)\u8868\u793a\u9ad8\u5ea6\u4e3ah\u7684\u6570\u52a0\u5165\u5806\u7684\u590d\u6742\u5ea6 \u603b\u4ee3\u4ef7\u4e3a $$\\sum_{h=0}^{\\lfloor logn\\rfloor}\\lceil \\frac{n}{2^{h+1}} \\rceil\\Theta(h)=\\Theta(n\\sum_{h=0}^{\\lfloor logn\\rfloor}\\frac{h}{2^{h}}) \\ \u53c8\\because \u6839\u636e\u7b49\u6bd4\u6570\u5217\u6c42\u548c\uff0c\\sum_{h=0}^{n}\\frac{h}{2^{h}}=2-\\frac{1}{2^{n-1}}-n\\frac{1}{2^n}\\ \\therefore \\sum_{h=0}^{n}\\frac{h}{2^{h}}=2(n-&gt;+\\infty) \\therefore \\Theta(2n) $$ </p>"},{"location":"my%20past/OI/%E5%A4%8D%E6%9D%82%E5%BA%A6/#_2","title":"\u5f00\u5e73\u65b9 &amp; \u53d6\u5bf9\u6570","text":"<p>\u8fd9\u4e24\u79cd\u64cd\u4f5c\u4e00\u822c\u4e0d\u8d85\u8fc710\uff0c\u4e3a\u5e38\u6570\u7ea7\u522b</p> <p>\u4f8b\uff1a\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\u6240\u6709\u6570\u5f00\u5e73\u65b9\uff0c\u56e0\u4e3a\u5f006\u6b21\u4ee5\u5185\u5c31\u80fd\u5f97\u52301\u62160\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\\(\\Theta(6nlogn)\\),\u800c\u4e0d\u662f\\(\\Theta(mnlogn)\\)</p>"},{"location":"my%20past/OI/%E5%A4%8D%E6%9D%82%E5%BA%A6/#_3","title":"\u9636\u4e58 &amp; \u8d28\u6570\u8fde\u4e58","text":"<p>\u8fd9\u4e24\u79cd\u64cd\u4f5c\u4e00\u822c\u4e0d\u8d85\u8fc710\uff0c\u4e3a\u5e38\u6570\u7ea7\u522b</p> <p>\u4f8b\uff1a\u5bf9\u4e8e\u4e24\u4e2a\u96c6\u5408\uff0c\u53ea\u8981\u5176\u4e2d\u4e24\u4e2a\u6570\u6709&gt;=p\u7684\u8d28\u56e0\u6570\uff0c\u5219\u5408\u5e76\u4e24\u4e2a\u96c6\u5408\uff0c\u95ee[a,b]\u5185\u5171\u6709\u591a\u5c11\u96c6\u5408\u3002\u56e0\u4e3a\u4e00\u4e2a\u6570\u6700\u591a\u67096\u4e2a\u8d28\u56e0\u6570\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\\(\\Theta(6n)\\),\u800c\u4e0d\u662f\\(\\Theta(n^2)\\)</p>"},{"location":"my%20past/OI/%E5%B9%B6%E6%9F%A5%E9%9B%86/","title":"\u5e76\u67e5\u96c6","text":"<p>P1653</p> <p>\u6bcf\u4e2a\u7334\u5b50\u6389\u4e0b\u53d6\u5f97\u65f6\u5019\uff0c\u5c31\u662f\u5b83\u4e0e1\u65ad\u5f00\u8fde\u63a5\u5f97\u65f6\u5019\uff0c\u6240\u4ee5\u53ef\u4ee5\u5012\u7740\u641c\uff0c\u6bcf\u6b21\u7528\u5e76\u67e5\u96c6\u5c06\u4e24\u4e2a\u7334\u5b50\u8fde\u63a5\u4e0a\uff0c\u5c06\u6bcf\u4e2a\u7334\u5b50\u4e0e1\u8054\u901a\u5f97\u65f6\u95f4\u8bb0\u5f55\u4e0b\u6765\u5373\u53ef\u3002</p> <p>P2661</p> <p>\u5bf9\u4e8e\u6709\u5411\u73af\uff0c\u53ef\u4ee5\u7528\u5e76\u67e5\u96c6\u6c42\u89e3\u3002</p> <p>\u8bbe\\(d[a]\\)\u8868\u793a\u8282\u70b9\\(a\\)\u5230\u6839\u8282\u70b9\u7684\u8ddd\u79bb\uff0c\u90a3\u4e48\u6bcf\u6b21\u8def\u5f84\u538b\u7f29\u65f6\u90fd\u8981\u66f4\u65b0\\(d[a]\\).</p> <p>\u5047\u8bbe\u8282\u70b9\\(d[b]=0\uff0cd[a]=x\\),\u90a3\u4e48\u5f53\\(d[b]=y\\)\u65f6\uff0c\\(d[a]=x+y\\),\u5373\\(d[a]+=d[lst]\\).\u4e0d\u7528\u5173\u5fc3\\(a\\)\u7684\u7236\u8282\u70b9\u600e\u6837\u53d8\u5316\uff0c\u56e0\u4e3a\u5df2\u7ecf\u8def\u5f84\u538b\u7f29\u8fc7\uff0c\u6240\u6709\u8282\u70b9\u90fd\u5df2\u7ecf\u5e76\u5728\u4e00\u4e2a\u6839\u8282\u70b9\u4e0a\uff0c\u800c\u8fd9\u4e2a\u6839\u8282\u70b9\\(d[b]=0\\),\u6240\u4ee5\u53ea\u9700\u8981\u5173\u5fc3\u5b83\u7684\u503c\u7684\u53d8\u5316\u91cf\uff0c\u5373\\(d[lst]-0=d[lst]\\).</p> <p>\u56e0\u4e3a\u6839\u636e\u9898\u610f\uff0c\u6bcf\u4e2a\u8282\u70b9\u53ea\u6709\u4e00\u4e2a\u7236\u4eb2\uff0c\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0\u591a\u4e2a\u7236\u8282\u70b9\u5bfc\u81f4\u7684\u6df7\u4e71\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bf4\\(d[b]=0\\).</p> <p>\u800c\u5224\u65ad\u73af\u7684\u65f6\u5019\uff0c\u56e0\u4e3a\u4e0d\u77e5\u9053\u90a3\u4e2a\u8282\u70b9\u7684\\(d[ ]=0\\),\u6240\u4ee5\u8fd4\u56de\\(da]+d[b]+1\\)\u5373\u53ef\u3002</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=2e5+10;\nint n,minn,k;\nint fa[N],d[N];\nint getfa(int u){\n    if(fa[u]!=u){\n        int lst=fa[u];\n        fa[u]=getfa(fa[u]);\n        d[u]+=d[lst];\n    }\n    return fa[u];\n}\nvoid add(int a,int b){\n    int x=getfa(a),y=getfa(b);\n    if(x!=y){\n        fa[x]=y;d[a]=d[b]+1;\n    }else minn=min(minn,d[a]+d[b]+1);\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    minn=0x3f3f3f3f;\n    for(int i=1;i&lt;=n+1;++i)fa[i]=i;\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%d\",&amp;k);\n        add(i,k);\n    }\n    printf(\"%d\",minn);\n    return 0;\n} \n</code></pre> * \u7ed3\u8bba\uff1a\u5e76\u67e5\u96c6\u7684\u6838\u5fc3\u662f\u6839\u8282\u70b9\uff0c\u6240\u6709\u53f6\u5b50\u8282\u70b9\u53ea\u9700\u8981\u8003\u8651\u5b83\u7684\u6700\u9ad8\u7ea7\u6839\u8282\u70b9\u7684\u503c\u7684\u53d8\u5316\uff0c\u4e0d\u7528\u8003\u8651\u6b21\u7ea7\u6839\u8282\u70b9\u7684\u503c\u7684\u53d8\u5316\u3002</p>"},{"location":"my%20past/OI/%E6%95%B0%E5%AD%A6/","title":"\u6cf0\u52d2\u7ea7\u6570","text":""},{"location":"my%20past/OI/%E6%95%B0%E5%AD%A6/#_2","title":"\u6cf0\u52d2\u591a\u9879\u5f0f","text":"<p>\u7528\u6765\u6c42\u89e3f(x)\u67d0\u4e00\u70b9\u9644\u8fd1\u7684\u8fd1\u4f3c\u51fd\u6570g(x),f(x)\u662f\u4e00\u4e9b\u4e0d\u592a\u597d\u6c42\u503c\u7684\u51fd\u6570\uff0cg(x)\u5219\u662f\u6bd4\u8f83\u597d\u8ba1\u7b97\u7684\u51fd\u6570\u3002\u4f8b\u5982\uff1a $$ cos(x_0)\u5728x_0=0\u65f6\u7684\u6cf0\u52d2\u591a\u9879\u5f0f\u53ef\u4ee5\u662fg(x)=1-\\frac12 x^2,\u6216 g(x)=1-\\frac12 x^2+\\frac1{24}x^4 $$</p> <p>\u8fd9\u6837\u53ef\u4ee5\u8ba1\u7b97\u51fd\u6570\u7684\u8fd1\u4f3c\u503c\uff0c\u4e00\u822c\u5e42\u6b21\u8d8a\u9ad8\uff0c\u7cbe\u786e\u5ea6\u8d8a\u9ad8\u3002</p> <p>\\(1-\\frac12x^2\\)</p> <p></p> <p>\\(1-\\frac12x^2+\\frac1{24}x^4\\)</p> <p></p> <p>\u5728\u8fd9\u4e2a\u70b9\\(x_0\\)\u9644\u8fd1\u65f6\u7684g(x)\u65f6\u6bd4\u8f83\"\u8d34\u5408\"\u539f\u51fd\u6570\u7684\uff0c\u79f0\u4e3a\u6536\u655b\uff1b</p> <p>\u5982\u679c\u79bb\u5f97\u8fdc\u4e86\uff0c\u5c31\u4f1a\u8fdc\u79bb\u539f\u51fd\u6570\uff0c\u79f0\u4e3a\u53d1\u6563\u3002</p> <p>\u6211\u4eec\u79f0\u6536\u655b\u7684\u6700\u5927\u8303\u56f4\u4e3a\u6536\u655b\u534a\u5f84\u3002</p>"},{"location":"my%20past/OI/%E6%95%B0%E5%AD%A6/#_3","title":"\u6cf0\u52d2\u7ea7\u6570","text":"<p>\u5c06g(x)\u7684\u51fd\u6570\u5e42\u6b21\u62d3\u5c55\u5230\u65e0\u7a77\u5927\uff0c\u90a3\u4e48g(x)\u7684\u503c\u5c31\u79f0\u4e3a\u6cf0\u52d2\u7ea7\u6570</p> \\[G(x)=\\sum_{n=0}^\\infty g(x,n)=  \\sum_{n=0}^{\\infty}\\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n=f(x_0)+f'(x_0)(x-x_0)+\\frac {f''(x_0)}{2!}(x-x_0)^2+...+ \\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n+...\\] \\[ \\frac{f^{(n)}(x_0)}{n!}(x-x_0)^n \u5c31\u662fG(x)\u4e2d\u7684\u7b2cn\u9879g(x,n)\\]"},{"location":"my%20past/OI/%E6%95%B0%E5%AD%A6/#_4","title":"\u5e94\u7528","text":""},{"location":"my%20past/OI/%E6%95%B0%E5%AD%A6/#cmath-pow","title":"cmath pow","text":"<p>\u7528\u8fd9\u79cd\u65b9\u6cd5\u53ef\u4ee5\u5c06\u590d\u6742\u5ea6\u964d\u81f3O(1)</p> <p>\u901a\u8fc7\u4ee5\u4e0b\u4ee3\u7801</p> <pre><code>pow(b,n)=exp(n*log(b));//log(b)=lnb\n</code></pre> <p>\u5c31\u662f\\(b^n=e^{n* lnb}\\)\u6765\u4f18\u5316\uff0c\u56e0\u4e3aexp\u548clog\u7684\u590d\u6742\u5ea6\u53ef\u4ee5\u901a\u8fc7\u6cf0\u52d2\u5c55\u5f00\u6c42\u51fa\u4ed6\u4eec\u5728\u6bcf\u4e2a\u70b9\u9644\u8fd1\u7684\u4f4e\u9636\u8fd1\u4f3c\u51fd\u6570\uff0c\u901a\u8fc7\u67e5\u8868\u7684\u65b9\u5f0fO(1)\u83b7\u53d6\u51fd\u6570\u503c\u3002</p> <p>\u4f8b\u5982\uff1a</p> <p>$$1.e^x,\u5728x=0\u5904\u5c55\u5f00 \\f(x)=e^x ,\u5219\\g(0,n)=x^{n}\\ \\therefore G(x)=\\sum_{n=0}^\\infty x^{n}=1+x+x^2+x^3+...+x^n+...\\ 2.lnx \\f(x)=lnx,\u5728x=1\u5904\u5c55\u5f00\\ G(x)=(x-1)-\\frac12(x-1)^2+\\frac13(x-1)^3-\\frac14(x-1)^4+\\frac15(x-1)^5+...\\</p> <p>$$</p>"},{"location":"my%20past/OI/%E6%95%B0%E5%AD%A6/#09991","title":"0.999...=1","text":""},{"location":"my%20past/OI/%E6%95%B0%E5%AD%A6/#_5","title":"\u76f4\u63a5\u8ba1\u7b97","text":"\\[\\frac19=0.111... \\\\ 9 * \\frac19=0.999... \\\\ 9 * \\frac19=1 \\\\ \\therefore 0.999...=1 $$ ## \u8bbe\u6570 $$x=0.999...\\\\ 10 * x=9.999... \\\\10 * x-1 * x=9 * x=9 \\\\x=1 \\\\\\therefore 0.999...=1 $$ ## \u6781\u9650 $$ 0.999...=\\lim_{n\\to\\infty}1-\\frac1{10^n}\\\\ \\lim_{n\\to\\infty}\\frac1{10^n}=0 \\\\\\therefore0.999...=1 \\] <p>\u7136\u800c\uff0c\u8fd9\u4e9b\u90fd\u4e0d\u591f\u4e25\u8c28</p>"},{"location":"my%20past/OI/%E6%95%B0%E5%AD%A6/#dedekind","title":"\u6234\u5fb7\u91d1\u5206\u5272\uff08Dedekind\uff09","text":"\\[ \u8bbe t=0.999......\uff0c\u4f5c\u4e24\u4e2a\u6709\u7406\u6570\u96c6\u7684\u5206\u5272 \\\\ A={ [x|x&lt;t,x\u6709\u7406\u6570 ]}\uff0cB={[x|x&gt;=t,x\u6709\u7406\u6570]} \\\\ C={[x|x&lt;1,x\u6709\u7406\u6570]}\uff0cD={[x|x&gt;=1,x\u6709\u7406\u6570]} \\\\ \u5206\u5272A/B\u786e\u5b9a\u4e86\u5b9e\u6570t=0.999......(\u6211\u4eec\u6682\u65f6\u4e0d\u77e5\u9053t=0.999...\u662f\u6709\u7406\u6570\u8fd8\u662f\u65e0\u7406\u6570) \\\\ \u5206\u5272C/D\u786e\u5b9a\u4e86\u6709\u7406\u65701 \\\\ \u4e3a\u8bc1\u660e t=1\uff0c\u6211\u4eec\u53ea\u9700\u8981\u8bc1\u660e\u8fd9\u4e24\u4e2a\u5206\u5272\u662f\u76f8\u540c\u7684\uff0c\u5373\u8bc1\u660e A=C \\\\ \u82e5\u6709\u7406\u6570 x\u2208A\uff0c\u5219\u663e\u7136\u6709 x&lt;1\uff0c\u4e8e\u662f x\u2208C \\\\ \u82e5\u6709\u7406\u6570 x\u2208C\uff0c\u5219 x&lt;1\uff0c\u4e0d\u59a8\u8bbe x&gt;0 \\\\ \u6839\u636e\u6709\u7406\u6570\u7684\u5b9a\u4e49\uff0c\u6211\u4eec\u53ef\u4ee5\u628ax\u7528\u5206\u6570\u7684\u5f62\u5f0f\u8868\u793a\u4e3a \\\\ x=\\frac pq\uff0c(p\uff0cq\u4e3a\u6b63\u6574\u6570) \\\\ \u65e2\u71360&lt;x&lt;1\uff0c\u5219\u5fc5\u6709p&lt; q \\\\ \u4e8e\u662f\u75311-\\frac pq&gt;=\\frac 1q&gt;0\uff0c\u53ef\u5f97\u5b58\u5728\u6b63\u6574\u6570n(\\frac{p+1}q&lt;=1 \u53ef\u4ee5\u8bc1\u660e\uff0c\u56e0\u4e3ap,q\u90fd\u662f\u6b63\u6574\u6570)\uff0c\u4f7f\u5f97 \\\\ \\frac 1q&gt;\\frac1{10^n}&gt;0(x\u662f\u786e\u5b9a\u7684\u6570\uff0c\u5219q\u5b58\u5728\uff0c\u5219\u6bd4\u5b83\u9ad8\u9636\u7684n\u4e00\u5b9a\u5b58\u5728\uff0c\u4e0d\u7528\u7ea0\u7ed3\u65e0\u7a77\u5927\u7684\u4e8b) \\\\ x=\\frac pq&lt;=1-\\frac 1q&lt;1-\\frac1{10^n}=0.99...9(n\u4e2a9)&lt; t \\\\ \u65e2\u7136x&lt;t\uff0c\u8fd9\u5c31\u8bf4\u660ex\u2208A \\\\ \u7531\u4e0a\uff0c\u6211\u4eec\u5c31\u5f97\u5230\u4e86A=C\uff0c\u4ece\u800c\uff0cA/B\u548cC/D\u662f\u4e24\u4e2a\u76f8\u540c\u7684\u5206\u5272\uff0c\u56e0\u6b64\uff0c 0.999...=t=1 \\] <p>Orz</p>"},{"location":"my%20past/OI/%E6%9C%80%E7%9F%AD%E8%B7%AF/","title":"\u6700\u77ed\u8def","text":""},{"location":"my%20past/OI/%E6%9C%80%E7%9F%AD%E8%B7%AF/#floyd","title":"\u5168\u6e90\u7b97\u6cd5Floyd","text":"<p>Q.\u4e3a\u4ec0\u4e48\u4e2d\u8f6c\u70b9k\u8981\u653e\u5728\u6700\u5916\u5c42\uff1f A.\u56e0\u4e3afloyd\u7684\u5b9e\u8d28\u662fdp. \u7528f[k][i][j]\u8868\u793a\u7ecf\u8fc7i\u5230j\u7684\u901a\u8fc71...k\u7684\u8def\u5f84</p> <p>\u5219 <pre><code>f[k][i][j]=min(f[k-1][i][j],f[k-1][i][k]+f[k-1][k][j]);\n</code></pre> \u7531\u4e8e\u6700\u5916\u9762\u4e00\u5c42\u7701\u7565\u6389\uff0c\u6240\u4ee5\u5f97\u51fafloyd\u5e38\u89c1\u7684\u5f0f\u5b50\uff1b \u4f46\u662f\uff1a</p> <p>\u201c\u4f60\u8981\u77e5\u9053\u4ed6\u662f\u4ece\u4e0a\u4e00\u5c42k\u8f6c\u79fb\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u5f53\u524d\u7684f[i][j]\u90fd\u5e94\u8be5\u662f\u5b8c\u6210\u4e0a\u4e00\u5c42\u52a8\u6001\u89c4\u5212\u7684\uff0c\u5982\u679ck\u4e0d\u662f\u5728\u6700\u5916\u5c42\uff0c\u90a3\u4e48f[i][j]\u5c31\u4e0d\u662f\u5b8c\u6210\u4e0a\u4e00\u5c42\u52a8\u6001\u89c4\u5212\u7684\u540e\u7684\u72b6\u6001\uff0c\u6709\u53ef\u80fd\u6709\u7684\u70b9\u6ca1\u6709\u7ecf\u8fc7k-1\u8fd9\u4e2a\u70b9\u7684\u677e\u5f1b\u3002\u201d</p> <p>:)</p>"},{"location":"my%20past/OI/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_2","title":"\u5168\u6e90\u4e4b\u8def\u5f84\u7edf\u8ba1","text":"<p>P2047 (\\(2^{11}-1\\))</p> <p>\u8fd9\u9053\u9898\uff0c\u4e00\u5f00\u59cb\u601d\u8def\u662f\u5bf9\u7684\uff0c\u540e\u6765\u8d8a\u505a\u8d8a\u9519orz</p> <p>\u7528C[i][j]\u8868\u793ai\u5230j\u4e4b\u95f4\u7684\u6700\u77ed\u8def\u5f84\u6570\u76ee</p> <p>\u8f6c\u79fb\u65b9\u7a0b:(floyd==dp)</p> <p><pre><code>void floyd() {\n    for(int k=1; k&lt;=n; ++k) {\n        for(int i=1; i&lt;=n; ++i) {\n            for(int j=1; j&lt;=n; ++j) {\n                if(i==j || i==k || j==k)continue;\n                if(dis[i][j]&gt;dis[i][k]+dis[k][j]) {\n                    dis[i][j]=dis[i][k]+dis[k][j];\n                    C[i][j]=C[i][k]*C[k][j];\n                    continue;   \n                }\n                if(dis[i][j]==dis[i][k]+dis[k][j]){\n                    C[i][j]+=C[i][k]*C[k][j];\n                }\n            }\n        }\n    }\n    return;\n}\n</code></pre> \u7edf\u8ba1\u7b54\u6848:\u5f53dis[i][k]+dis[k][j]==dis[i][j]\u65f6\uff0c\u8fd9\u6761\u7ecf\u8fc7k\u7684\u8def\u5f84\u4e00\u5b9a\u662fi\u5230j\u7684\u6700\u77ed\u8def\uff0c\u5219: <pre><code>void sum() {\n    for(int k=1; k&lt;=n; ++k) {\n        for(int i=1; i&lt;=n; ++i) {\n            for(int j=1; j&lt;=n; ++j) {\n                if(i==k || j==k || i==j)continue;\n                if(dis[i][k]+dis[k][j]==dis[i][j]) {\n                    ans[k]+=(C[i][k]*C[k][j]*1.0)/(C[i][j]*1.0);\n                }\n            }\n        }\n    }\n}\n</code></pre> * \u4e3a\u4ec0\u4e48floyd\u8fd9\u79cd\u66f4\u65b0\u6700\u77ed\u8def\u6761\u6570\u7684\u65b9\u5f0f\u662f\u5bf9\u7684\u5462\uff0c\u540c\u4e00\u6761\u8def\u4e0a\u7684\u4e0d\u540c\u70b9\u4f1a\u4e0d\u4f1a\u5bf9\u8fd9\u6761\u8def\u505a\u51fa\u91cd\u590d\u7684\u8d21\u732e\u5462\uff1f</p> <ul> <li>\u5176\u5b9e\u662f\u4e0d\u4f1a\u7684\uff0c\u8fd9\u662f\u7531\u4e8efloyd\u662f\u6309\u4e2d\u8f6c\u70b9k\u7684\u987a\u5e8f\u5b9e\u73b0\u7684\u7279\u6027\u3002</li> </ul> <p></p> <p>\u5047\u8bbe\u6309\u7167b,c,d\u7684\u987a\u5e8f(k)\u66f4\u65b0C[a][e]\uff0c\u5219\u7b2c\u4e00\u6b21C[a][e]=C[a][b]* C[b][e],\u56e0\u4e3aC[b][e]\u6ca1\u6709\u66f4\u65b0\u8fc7,\u5176\u503c\u4e3a0\uff0c\u6240\u4ee5C[a][e]\u6ca1\u6709\u53d8\u5316;c\u540cb;\u53ea\u6709d\u65f6\uff0cC[a][d]=C[d][e]=1,\u6240\u4ee5C[a][e]=1,\u7b26\u5408\u5b9e\u9645\u60c5\u51b5\u3002</p> <p>\u6362\u53e5\u8bdd\u8bf4\uff0c\\(C[i][k]\\)\u662f\u73b0\u5728\uff0c\\(C[i][j]\\)\u662f\u672a\u6765\uff0c\u56e0\u4e3a\\(dp\\)\u7684\u65e0\u540e\u6548\u6027\uff0c\u6240\u4ee5\u672a\u6765\u4e0e\u8fc7\u53bb\u65e0\u5173\uff0c\u5373\u4e0e\\(C[i][k]\\)\u91cc\u9762\u7684\u5c0f\u533a\u95f4\u65e0\u5173\uff0c\u4e0d\u4f1a\u88ab\u66f4\u65b0\u5230\u3002</p> <p>\u7efc\u4e0a\uff0c\u4e0d\u4f1a\u51fa\u73b0\u91cd\u590d\u8ba1\u7b97\u7684\u60c5\u51b5\uff0c\u56e0\u4e3a\u53ea\u6709\u6700\u540e\u4e00\u6b21\u66f4\u65b0\u624d\u6709\u6548\u3002</p>"},{"location":"my%20past/OI/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_3","title":"\u5206\u5c42\u56fe","text":"<ul> <li>\u4e0e\u7f51\u7edc\u6d41\u7684\u5efa\u56fe\u7c7b\u4f3c\uff0c\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u5efa\u6a21 <p>P4568</p> </li> </ul> <p>\u8fd9\u9898\u6709\u4e24\u79cd\u601d\u8def\uff0c\u4e00\u79cd\u662fdp\uff0c\u53e6\u4e00\u79cd\u662f\u5206\u5c42\u56fe\uff0c\u6211\u7528\u7684\u7b2c\u4e00\u79cd</p> <p>1.dp\u53ef\u4ee5\u8bbedis[n][k]\u8868\u793a\u7528k\u6b21\u514d\u8d39\u4f18\u60e0\u540e\u5230\u8fben\u7684\u6700\u77ed\u8def\uff0c\u5219\u8f6c\u79fb\uff1a <pre><code>        if(dis[v][k1]&gt;dis[u][k1]+w &amp;&amp; k1&lt;=k){\n                dis[v][k1]=dis[u][k1]+w;\n                if(!vis[v][k1]){\n                    q.push(node(dis[v][k1],v,k1));\n                }\n            }\n            if(dis[v][k1+1]&gt;dis[u][k1] &amp;&amp; k1+1&lt;=k){\n                dis[v][k1+1]=dis[u][k1];\n                if(!vis[v][k1+1]){\n                    q.push(node(dis[v][k1+1],v,k1+1));\n                }   \n            }\n        }\n</code></pre> \u8fd9\u91cc\u53ef\u4ee5\u7528\u7ed3\u6784\u4f53\u6765\u4fdd\u5b58\u6bcf\u4e2a\u8282\u70b9\u7528\u7684k\uff0c\u5728\u5168\u90fd\u8fdb\u961f\uff1b</p> <p>\u4e5f\u53ef\u4ee5\u76f4\u63a5\u5728\u6700\u5916\u5c42\u679a\u4e3ek\uff0c\u505ak\u6b21\u6700\u77ed\u8def</p> <p>2.\u5206\u5c42\u56fe\u677f\u5b50</p> <p>\u76f4\u63a5\u5efa\u51fak\u5c420\u8fb9\uff0c\u8868\u793a\u6bcf\u4e2a\u822a\u73ed\u514d\u8d39\u642d\u4e58\u540e\u75280\u8d39\u7528\u8df3\u8f6c\u5230\u76ee\u7684\u5730\u3002</p>"},{"location":"my%20past/OI/%E6%9C%80%E7%9F%AD%E8%B7%AF/#dijkstra","title":"dijkstra","text":"<p>1.priority_queue\u5199\u6cd5\uff0c\u6700\u5e38\u7528\uff0c\u6ce8\u610f\u7ed3\u6784\u4f53\u6784\u9020\u51fd\u6570\u548c\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u5199\u6cd5\uff0c\u522b\u8bb0\u9519\u4e86\u3002</p> <p><pre><code>struct node{\n    int dis,pos;\n   bool operator &lt;(const node &amp;x)const{\n        return x.dis&lt;dis; \n   }\n   node(int d,int p){\n    dis=d,pos=p;\n   }\n}e[N&lt;&lt;1];\nvoid dijkstra()\n{\n    for(int i=0;i&lt;N;++i)dis[i]=INF;\n    dis[s] = 0;\n    q.push( node(0,s) );\n    while( !q.empty() )\n    {\n        node u = q.top().pos;\n        q.pop();\n        if( vis[u] )continue;\n        vis[u] = 1;\n        for( int i = head[u]; ~i; i = e[i].nxt )\n        {\n            int v = e[i].v,w=e[i].w;\n            if( dis[v] &gt; dis[u] + w )\n            {\n                dis[v] = dis[u] + w;\n                if( !vis[v] )\n                {\n                    q.push( node (dis[v], v) );\n                }\n            }\n        }\n    }\n}\n</code></pre> 2.\u624b\u5199\u5806\uff1a\u6bd4\u7b2c\u4e00\u79cd\u5feb\u4e86hin\u591a\uff0c\u8d39\u7528\u6d41\u7b49\u5f88\u591a\u7528\u5230\u6700\u77ed\u8def\u4e14\u6570\u636e\u91cf\u5f88\u5927\u7684\u9898\u5c31\u8981\u7528\u624b\u5199\u5806\u4e86\uff0c\u80fd\u5feb1\u500d\u5de6\u53f3\u3002</p> <p>P1629 \u6a21\u677f\u9898</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=1e4+10,M=2e5+10,INF=1e14;\nstruct hp{\n    int dis,pos;\n}heap[N];\nstruct node{\n    int v,w,nxt,t;\n}e[M&lt;&lt;1];\nint head[N],dis[N],vis[N];\nint cnt,n,m,u,v,w,tot;\nvoid add(int u,int v,int w,int t){\n    e[++cnt].v=v;\n    e[cnt].w=w;\n    e[cnt].t=t;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n    return;\n}\nvoid push(int d,int p){\n    heap[++tot].dis=d,heap[tot].pos=p;\n    int now=tot;\n    while(now&gt;1){\n        int nxt=now&gt;&gt;1;\n        if(heap[nxt].dis&lt;=heap[now].dis)break;\n        swap(heap[nxt],heap[now]);\n        now=nxt;\n    }\n    return;\n}\nint pop(){\n    int ans=heap[1].pos;\n    swap(heap[1],heap[tot]);\n    tot--;\n    int now=1;\n    while(now*2&lt;=tot){\n        int nxt=now&lt;&lt;1;\n        if(now*2+1&lt;=tot &amp;&amp; heap[nxt].dis&gt;heap[nxt+1].dis)nxt++;\n        if(heap[nxt].dis&gt;=heap[now].dis)break;\n        swap(heap[nxt],heap[now]);\n        now=nxt;\n    }\n    return ans;\n}\nbool empty(){\n    return tot==0;\n}\nvoid dij(){\n    //memset(dis,0x3f,sizeof dis);\n    for(int i=0;i&lt;N;++i)dis[i]=INF;\n    memset(vis,0,sizeof vis);\n    dis[1]=0;\n    tot=0;\n    push(0,1);\n    while(!empty()){\n        int u=pop();\n        if(vis[u])continue;\n        vis[u]=1;\n        for(int i=head[u];~i;i=e[i].nxt){\n            int v=e[i].v,w=e[i].w,t=e[i].t;\n            if(t &amp;&amp; dis[v]&gt;dis[u]+w){\n                dis[v]=dis[u]+w;\n                if(!vis[v]){\n                    push(dis[v],v);\n                }\n            }\n        }\n    }\n    return;\n}\nsigned main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld%lld\",&amp;u,&amp;v,&amp;w);\n        add(u,v,w,1);\n        add(v,u,w,0);\n    }\n    dij();\n    int ans=0;\n    for(int i=2;i&lt;=n;++i){\n        ans+=dis[i];\n    }\n    for(int i=0;i&lt;=m*2-1;i+=2){\n        e[i].t=0;\n        e[i^1].t=1;\n    }\n    dij();\n    for(int i=2;i&lt;=n;++i){\n        ans+=dis[i];\n    }\n    printf(\"%lld\",ans);\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/%E6%9C%80%E7%9F%AD%E8%B7%AF/#spfa","title":"SPFA","text":"<p>~~\u636e\u8bf4\u5b83\u6b7b\u4e86~~ bellman-ford \u7684\u6c11\u95f4\u52a0\u5f3a\u7248\u3002 <pre><code>bool SPFA(){\n    int s=1;\n    for(int i=0;i&lt;N;++i)dis[i]=INF;\n    memset(vis,0,sizeof vis);\n    vis[s]=1;\n    dis[s]=0;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        vis[u]=0;\n        for(int i=head[u];~i;i=e[i].nxt){\n            int v=e[i].v,w=e[i].w;\n            if(dis[v]&gt;dis[u]+w){\n                dis[v]=dis[u]+w;\n                if(!vis[v]){\n                    vis[v]=1;\n                    q.push(v);\n                }\n            }\n        }\n    }\n}\n</code></pre></p>"},{"location":"my%20past/OI/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_4","title":"\u4e8c\u5206\u8282\u70b9","text":"<p>\u5728\u4e00\u4e9b\u9898\u4e2d\u4f1a\u7ed9\u4f60\u8282\u70b9\u7684\u6743\u503c\uff0c\u5e76\u8981\u6c42\u7ecf\u8fc7\u7684\u8282\u70b9\u7684\u6743\u503c\u6700\u5927\u503c\u4e0d\u8d85\u8fc7k\uff0c\u6c42\u6700\u77ed\u8def\u3002\u8fd9\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u4e8c\u5206\u6743\u503c\u7684\u9650\u5236\uff0c\u5c06\u4e0d\u6ee1\u8db3\u7684\u8282\u70b9~~ban\u6389~~,\u7136\u540e\u8dd1\u6700\u77ed\u8def\u5373\u53ef\u3002</p> <p>P1462 \u6a21\u677f\u9898</p>"},{"location":"my%20past/OI/%E6%9C%80%E7%9F%AD%E8%B7%AF/#_5","title":"\u53cd\u5411\u5efa\u8fb9","text":"<p>\u7ecf\u5178\u7684\u6700\u77ed\u8def\u89e3\u9898\u65b9\u6cd5</p> <p>P1629 \u6a21\u677f\u9898</p> <p>P5663</p> <p>~~\u8003\u573a\u4e0a\u9001\u8d70\u6211\u7684\u9898\uff0c\u796d\u6211\u76842019~~</p> <p>\u76f4\u63a5\u641c\u7d22\u76f4\u63a5\u7206\u70b8\uff0c\u66f4\u4f55\u51b5\u6211\u8003\u573a\u4e0a\u6839\u672c\u6ca1\u5199\u5bf9</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u5047\u8bbe\u4ece\\(u\\)\u51fa\u53d1\u53bb\\(v\\),\u5982\u679c\\(u,v\\)\u4e4b\u95f4\u7684\u8ddd\u79bb\u7b49\u4e8e\\(L\\),\u90a3\u4e48\u6240\u6709\u8ddd\u79bb\\(u\\)\u4e3a\\(L+2,L+4,...\\)\u7684\u70b9\u90fd\u53ef\u4ee5\u5230\u8fbe\uff1b</p> <p>\u800c\u5bf9\u4e8e\\(L+1\\)\uff0c\u5219\u4e0d\u4e00\u5b9a\u6709\uff0c\u9700\u8981\u4ece\\(L\\)\u8f6c\u79fb\u800c\u6765\u3002</p> <p>\u6240\u4ee5\u8fd9\u9053\u9898\u53d8\u6210\u4e86\u4e00\u9053\u6c42\u5947\u5076\u8def\u5f84\u7684\u9898\u3002</p> <p>\u5947\u5076\u8def\u5f84\u5c31\u662f\u6307\u5c06\u6574\u4e2a\u56fe\u5206\u6210\u957f\u5ea6\u4e3a\u5947\u6570\u7684\u8def\u5f84\u6838\u5076\u6570\u7684\u8def\u5f84\uff0c\u5e76\u5206\u522b\u4e92\u76f8\u66f4\u65b0\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u53ea\u9700\u8981\\(dijkstra\\)\u5373\u53ef\u6c42\u51fa\u6240\u6709\u8def\u5f84\u8ddd\u79bb\u3002</p> <p>\u5982\u679c\\(dis[a][t]&gt;L(L \\&amp; 1= t)\\),\u5219\u4e0d\u7528\u63d0\u4f9b\u96f6\u4ef6,\u5426\u5219\u5c31\u8981\u63d0\u4f9b\u96f6\u4ef6\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;queue&gt;\n#define int long long \nusing namespace std;\nconst int N=1e5+10;\nint n,m,q,cnt,u,v,a,L;\nint head[N],dis[N][2],vis[N][2];\nstruct edge{\n    int v,nxt;\n}e[N&lt;&lt;1];\nstruct node{\n    int dis,pos,type;\n    bool operator &lt;(const node &amp;x)const{\n        return x.dis&lt;dis;\n    }\n    node(int d,int p,int t){\n        dis=d,pos=p,type=t;\n    }\n};\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid dij(int s){\n    memset(dis,0x3f,sizeof dis);\n    memset(vis,0,sizeof vis);\n    priority_queue&lt;node&gt; q;\n    q.push(node(0,s,0));\n    dis[s][0]=0;\n\n    while(!q.empty()){\n        node tmp=q.top();q.pop();\n        int u=tmp.pos,t=tmp.type;\n        if(vis[u][t])continue;\n        vis[u][t]=1;\n        for(int i=head[u];~i;i=e[i].nxt){\n            int v=e[i].v;\n            if(dis[v][1]&gt;dis[u][0]+1){\n                dis[v][1]=dis[u][0]+1;\n                if(!vis[v][1])q.push(node(dis[v][1],v,1));\n            }\n            if(dis[v][0]&gt;dis[u][1]+1){\n                dis[v][0]=dis[u][1]+1;\n                if(!vis[v][0])q.push(node(dis[v][0],v,0));\n            }\n        }\n    }\n}\nsigned main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%lld%lld%lld\",&amp;n,&amp;m,&amp;q);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;u,&amp;v);\n        add(u,v),add(v,u);\n    }   \n    dij(1);\n    for(int i=1;i&lt;=q;++i){\n        scanf(\"%lld%lld\",&amp;a,&amp;L);\n        if(L&amp;1){\n            if(dis[a][1]&gt;L)printf(\"No\\n\");\n            else printf(\"Yes\\n\");\n        }else{\n            if(dis[a][0]&gt;L)printf(\"No\\n\");\n            else printf(\"Yes\\n\");\n        }\n    }\n    return 0;\n} \n</code></pre> <p>P7997</p> <p>~~\u53c8\u662f\u8003\u573a\u4e0a\u8650\u6211\u5343\u767e\u904d\u7684\u9898~~</p> <p>\u8fd9\u9898\u4e5f\u662f\u5947\u5076\u8def\u5f84\u7684\u677f\u5b50\u9898\uff0c\u5982\u679c\u4e00\u4e2a\u6570\\(i\\)\u5c0f\u4e8e\\(a[j]\\)\uff0c\u5219\u4e00\u5b9a\u53ef\u4ee5\u53bb\u5230\\(i+a[j]\\)\u540e\u518d\u56de\u5230\\(i\\);\u5e76\u4e14\u603b\u70b9\u6570\u53ea\u6709\\(2* MAXa=4000\\)\u4e2a\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u6700\u77ed\u8def\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;queue&gt;\n#define int long long \nusing namespace std;\nconst int N=1e4+10,M=4e6+10;\nint n,T,L,m,cnt,MAX;\nint a[N],head[N],vis[N][2],dis[N][2],ans[N];\nstruct node{\n    int dis,pos,type;\n    bool operator &lt;(const node &amp;x)const{\n        return x.dis&lt;dis;\n    }\n    node(int d,int p,int t){\n        dis=d,pos=p,type=t;\n    }\n};\nstruct edge{\n    int v,nxt;\n}e[M&lt;&lt;1];\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid init(){\n    for(int i=0;i&lt;=MAX+MAX-1;++i)\n        for(int j=1;j&lt;=n;++j)\n            add(i,i&gt;=a[j]?i-a[j]:i+a[j]);\n}\nvoid dij(int s){\n    memset(dis,0x3f,sizeof dis);\n    memset(vis,0,sizeof vis);\n    priority_queue&lt;node&gt; q;\n    q.push(node(0,s,0));\n    dis[s][0]=0;\n    while(!q.empty()){\n        node tmp=q.top();q.pop();\n        int u=tmp.pos,t=tmp.type;\n        if(vis[u][t])continue;\n        vis[u][t]=1;\n        for(int i=head[u];~i;i=e[i].nxt){\n            int v=e[i].v;\n            if(dis[v][1]&gt;dis[u][0]+1){\n                dis[v][1]=dis[u][0]+1;\n                if(!vis[v][1])q.push(node(dis[v][1],v,1));\n            }\n            if(dis[v][0]&gt;dis[u][1]+1){\n                dis[v][0]=dis[u][1]+1;\n                if(!vis[v][0])q.push(node(dis[v][0],v,0));\n            }\n        }\n    }\n}\nsigned main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%lld%lld\",&amp;n,&amp;T);\n    for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;a[i]),MAX=max(MAX,a[i]);\n    init();\n    dij(0);\n    for(int i=1;i&lt;=T;++i){\n        scanf(\"%lld\",&amp;m);\n        for(int i=MAX+MAX-1;i&gt;=0;--i){\n            if(dis[i][m&amp;1]&lt;=m){\n                printf(\"%lld\\n\",i);\n                break;\n            }\n        }\n    }\n    return 0;\n}\n</code></pre> <p>P1027</p> <p>~~sb\u9898\u771f\u9ebb\u70e6\uff0c\u5199nm\u4e24\u5c0f\u65f6~~</p> <p>\u5c31...\u76f4\u63a5\u6700\u77ed\u8def\u5c31\u884c\u4e86\uff0c\u4f46\u5efa\u56fe\u8d3c\u9ebb\u70e6\u3002SPFA\u8fd8\u6ca1\u6b7b\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\n#include&lt;queue&gt;\nusing namespace std;\ntypedef double db;\nconst int N=1e3+10,INF=0x3f3f3f3f,M=1e6+10;\nint cnt,n,m,T,s,A,B;\ndb tmp,t;\nint num[N];\nint vis[N],head[N];\ndb dis[N];\nstruct edge{\n    int v,nxt;\n    db w;\n}e[M];\nstruct city{\n    int x,y;\n    db T;\n}c[N];\ninline db Dis(int i,int j){int _x=c[i].x-c[j].x,_y=c[i].y-c[j].y;return (db)sqrt(_x*_x+_y*_y);}\ninline int _Dis(int i,int j){int _x=c[i].x-c[j].x,_y=c[i].y-c[j].y;return (_x*_x+_y*_y);}\ninline int g(int x,int y){return 4*(x-1)+y;}\nvoid add(int u,int v,db w){e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;}\nvoid init(){for(int i=1;i&lt;=4*s;++i)dis[i]=(db)INF;}\nvoid cal(int i){\n    int n1=g(i,1),n2=g(i,2),n3=g(i,3);\n    int x1=c[n1].x, y1=c[n1].y, x2=c[n2].x, y2=c[n2].y, x3=c[n3].x, y3=c[n3].y;\n    int ab=_Dis(n1,n2),bc=_Dis(n2,n3),ac=_Dis(n1,n3);\n    int x4=0,y4=0;\n    if(ab+ac==bc)x4=x2+x3-x1,y4=y2+y3-y1;\n    if(ab+bc==ac)x4=x1+x3-x2,y4=y1+y3-y2;\n    if(bc+ac==ab)x4=x1+x2-x3,y4=y1+y2-y3;\n    c[g(i,4)].x=x4,c[g(i,4)].y=y4;\n}\n\nvoid SPFA(int S){\n    queue&lt;int&gt; q;\n    init();\n    memset(vis,0,sizeof vis);\n    dis[S]=0.0;vis[S]=1;\n    q.push(S);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        vis[u]=0;\n        for(int i=head[u];~i;i=e[i].nxt){\n            int v=e[i].v;db w=e[i].w;\n            if(dis[u]+w&lt;dis[v]){\n                dis[v]=dis[u]+w;\n                if(!vis[v]) vis[v]=1,q.push(v); \n            }   \n        }\n    }\n}\ndb Min(db a,db b){\n    return a&lt;b?a:b;\n}\nint main(){\n    scanf(\"%d\",&amp;T);\n    while(T--){\n        memset(head,-1,sizeof head);\n        cnt=-1;\n        scanf(\"%d%lf%d%d\",&amp;s,&amp;t,&amp;A,&amp;B);\n        for(int i=1;i&lt;=s;++i){\n            for(int j=1;j&lt;=3;++j) scanf(\"%d%d\",&amp;c[g(i,j)].x,&amp;c[g(i,j)].y),num[g(i,j)]=i;\n            cal(i);num[g(i,4)]=i;\n            scanf(\"%lf\",&amp;tmp);\n            for(int j=1;j&lt;=4;++j) c[g(i,j)].T=tmp;\n        }\n        for(int i=1;i&lt;=4*s;++i){\n            for(int j=1;j&lt;=4*s;++j){\n                if(i==j)continue;\n                if(num[i]==num[j]) add(i,j,c[i].T*Dis(i,j));\n                else add(i,j,t*Dis(i,j));\n            }\n        }\n        db ans=(db)INF;\n        for(int i=0;i&lt;=3;++i){\n            SPFA(4*A-i);\n            for(int j=0;j&lt;=3;++j) ans=Min(ans,dis[4*B-j]);\n        }\n        printf(\"%.1lf\\n\",ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E6%9E%84%E9%80%A0/","title":"\u6784\u9020","text":""},{"location":"my%20past/OI/%E6%9E%84%E9%80%A0/#_2","title":"\u9012\u63a8\u6784\u9020+\u77e9\u9635\u52a0\u901f","text":"<p>\u77e9\u9635\u4e58\u6cd5\u6709\u4ecb\u7ecd\u3002</p> <p>P3990</p> <ol> <li>\u6734\u7d20\\(dp\\)</li> </ol> \\[ f[i][j]= \\left\\{  \\begin{array}{ll} f[i+1][j-1]+f[i+1][j-3]+...\\\\f[i][j-1]+f[i][j-3]+...\\\\f[i-1][j-1]+f[i-1][j-3]+... \\end{array} \\right . \\] <p>\u590d\u6742\u5ea6\\(O(nm^2)\\)</p> <p>2.\u5c0f\u4f18\u5316\\(dp\\)</p> <p>\u6ce8\u610f\u5230 $$ f[i][j-2]= \\left{  \\begin{array}{ll} f[i+1][j-3]+...\\f[i][j-3]+...\\f[i-1][j-3]+... \\end{array} \\right . $$</p> <p>\u56e0\u6b64</p> \\[ f[i][j]=f[i-1][j-1]+f[i][j-1]+f[i+1][j-1]+f[i][j-2]\\times [j\\geq 4] \\] <p>\u6ce8\u610f\u7279\u5224\uff0c\u56e0\u4e3a\u53ea\u6709\\(j\\geq 4\\)\u65f6\u624d\u6709\\(f[i][j-3]...\\)\u8fd9\u4e9b\u9879\uff0c\u624d\u9700\u8981\u52a0\u4e0a\\(f[i][j-2]\\),\u4e0d\u7136\u4f1a\u91cd\u590d\u3002\u5982\\(f[1][3]\\)\u53ea\u4f1a\u52a0\u4e0a\\(f[1][1]\\)\u8fd9\u4e2a\u521d\u59cb\u503c\uff0c\u800c\\(f[1][1]\\)\u4e0d\u662f\u9012\u63a8\u5f97\u6765\u7684\u3002</p> <p>\u590d\u6742\u5ea6\\(O(nm)\\)</p> <ol> <li>\u77e9\u9635\u52a0\u901f</li> </ol> \\[\\left[ \\begin{matrix} f_{1,j}\\\\f_{2,j}\\\\...\\\\f_{n,j}\\\\f_{1,j-1}\\\\f_{2,j-1}\\\\...\\\\f_{n,j-1} \\end{matrix} \\right]= S \\times  \\left[ \\begin{matrix} f_{1,j-1}\\\\f_{2,j-1}\\\\...\\\\f_{n,j-1}\\\\f_{1,j-2}\\\\f_{2,j-2}\\\\...\\\\f_{n,j-2} \\end{matrix} \\right] \\\\ n=3\u65f6\uff0cS=\\\\ \\left[ \\begin{matrix}1&amp;1&amp;0&amp;1&amp;0&amp;0\\\\1&amp;1&amp;1&amp;0&amp;1&amp;0\\\\0&amp;1&amp;1&amp;0&amp;0&amp;1\\\\1&amp;0&amp;0&amp;0&amp;0&amp;0\\\\0&amp;1&amp;0&amp;0&amp;0&amp;0\\\\0&amp;0&amp;1&amp;0&amp;0&amp;0 \\end{matrix}\\right] \\] <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=110,P=30011;\nint n,m;\nint g[N][N];\nstruct ma{\n    int f[N][N],n,m;\n    ma(){\n        memset(f,0,sizeof f),n=m=0;\n    }\n}s,t,ans;\nma operator *(ma a,ma b){\n    ma c=ma();\n    int x=a.n,y=a.m,z=b.m;\n    c.n=x,c.m=z;\n    for(int i=0;i&lt;x;++i)\n        for(int j=0;j&lt;z;++j)\n            for(int k=0;k&lt;y;++k) c.f[i][j]=(c.f[i][j]+a.f[i][k]*b.f[k][j]%P)%P;\n    return c;\n}\nma kp(ma x,int p){\n    if(p&lt;=1) return x;\n    if(p&amp;1) return x*kp(x*x,p&gt;&gt;1);\n    else return kp(x*x,p&gt;&gt;1);\n}\nvoid init(){\n    t.n=t.m=n+n;\n    for(int i=0;i&lt;n;++i){\n        int l=max(0ll,i-1),r=min(n-1,i+1);\n        for(int j=l;j&lt;=r;++j) t.f[i][j]=1;\n        t.f[i][n+i]=t.f[n+i][i]=1;  \n    }\n    memset(g,0,sizeof g);\n    g[1][1]=1;\n    for(int j=2;j&lt;=3;++j){\n        for(int i=1;i&lt;=n;++i){\n            if(i+1&lt;=n) g[i][j]+=g[i+1][j-1];\n            if(i-1&gt;=1) g[i][j]+=g[i-1][j-1];\n            g[i][j]+=g[i][j-1];\n            if(j-3&gt;=1) g[i][j]+=g[i][j-2];\n        }\n    }\n    s.n=n+n,s.m=1;\n    for(int i=0;i&lt;n;++i) s.f[i][0]=g[i+1][3];\n    for(int i=n;i&lt;n+n;++i) s.f[i][0]=g[i-n+1][2];\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    init();\n    if(m&lt;=3){\n        printf(\"%lld\",g[n][m]%P);       \n    }else{\n        ans=kp(t,m-3)*s;\n        printf(\"%lld\",ans.f[n-1][0]%P);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E6%9E%84%E9%80%A0/#_3","title":"\u65b9\u6848\u6784\u9020","text":"<p>P7854</p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u70b9\u60f3\u505a\u522b\u4eba\u7684\u513f\u5b50\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6743\u503c\\(a_i\\)\u4e0e\u7236\u4eb2\u7684\u6743\u503c\\(a_j\\)\u6ee1\u8db3\uff1a\\(a_j|a_i\\).</p> <p>\u6240\u4ee5\uff0c\u5bf9\u4e8e\u6240\u6709\u70b9\uff0c\u6211\u4eec\u5148\u6309\u7167\u6743\u503c\u5927\u5c0f\u4ece\u5927\u5230\u5c0f\u6392\u4e2a\u5e8f\u3002</p> <p>\u7136\u540e\u5bf9\u4e8e\u5f53\u524d\u70b9\\((u,a_u)\\)\u5c06\u6240\u6709\u6ca1\u6709\u7236\u4eb2\u8282\u70b9\u5e76\u4e14\\(a_u|a_v\\)\u7684\u70b9\\(v\\)\u8fde\u5728\\(u\\)\u7684\u4e0b\u9762\u3002</p> <p>\u540c\u65f6\uff0c\u5982\u679c\u4e00\u4e2a\u70b9\u6709\u7236\u4eb2\u8282\u70b9\\((p,a_p)\\),\\(a_v\\)\u8fd8\u662f\\(a_u\\)\u7684\u500d\u6570\uff0c\u5e76\u4e14\\(\\gcd(a_p,a_u)=a_u\\),\u8bf4\u660e\\(a_p\\)\u4e00\u5b9a\u53ef\u4ee5\u4f5c\u4e3a\\(a_u\\)\u7684\u5b50\u8282\u70b9(\u56e0\u4e3a\u4ece\u5927\u5230\u5c0f\u8003\u8651\uff0c\u6240\u4ee5\\(a_u\\)\u4e00\u5b9a\u6bd4\\(a_p\\)\u5c0f)\uff0c\u90a3\u4e48\u8df3\u8fc7\u4e0d\u7528\u5904\u7406\uff1b</p> <p>\u5426\u5219\uff0c\u8bf4\u660e\\(a_p\\)\u4e0d\u80fd\u4f5c\u4e3a\\(a_u\\)\u7684\u5b50\u8282\u70b9\uff0c\u90a3\u4e48\\(v\\)\u540c\u65f6\u6709\u4e24\u4e2a\u6839\u8282\u70b9\\(u,p\\)\uff0c\u4e0d\u6ee1\u8db3\uff0c\u8f93\u51fa\\(-1\\).</p> <p>\u5efa\u5b8c\u6811\u540e\uff0c\u8fd9\u68f5\u6811\u6ee1\u8db3\u6240\u6709\u8282\u70b9\u6709\u552f\u4e00\u7236\u4eb2\u8282\u70b9\u5e76\u4e14\u6743\u503c\u90fd\u662f\u7236\u4eb2\u8282\u70b9\u7684\u500d\u6570\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u8fd8\u9700\u8981\u5224\u65ad\u662f\u5426\u51fa\u73b0\\(\\gcd(i,j)=k\\)\u4e14\\(k\\)\u6ca1\u51fa\u73b0\u8fc7\u7684\u60c5\u51b5\u3002</p> <p>\u5982\uff1a <pre><code>3\n1 4 6\n</code></pre></p> <p>\u8fd9\u79cd\u3002</p> <p>\u9996\u5148\uff0c\u5c06\u6240\u6709\u51fa\u73b0\u8fc7\u7684\uff0c\u662f\\(k\\)\u500d\u6570\u7684\u8282\u70b9\u62ff\u51fa\u6765\u3002\u5982\u679c\u8fd9\u4e9b\u8282\u70b9\u5728\u539f\u6811\u79cd\u7ec4\u6210\u4e86\u591a\u9897\u5b50\u6811\uff0c\u90a3\u4e48\u8bf4\u660e\u8fd9\u4e9b\u5b50\u6811\u7684\u6839\u8282\u70b9\u6743\u503c\u4e24\u4e24\u6c42\\(\\gcd\\)\u4e00\u5b9a\u80fd\u6c42\u51fa\\(k\\),\u800c\\(k\\)\u4e0d\u5b58\u5728\uff0c\u5219\u65e0\u89e3.</p> <p>\u5426\u5219\uff0c\u5982\u679c\u53ea\u6709\u4e00\u9897\u5b50\u6811\uff0c\u5c31\u53ea\u4f1a\u6c42\u51fa\u90a3\u4e2a\u6839\u8282\u70b9\uff0c\u4e0d\u4f1a\u6c42\u51fa\\(k\\)\u3002</p> <p>\u90a3\u4e48\u600e\u4e48\u5224\u65ad\u5462\uff1f\u6211\u4eec\u76f4\u63a5\u5224\u65ad\u8fd9\u4e9b\u8282\u70b9\u662f\u5426\u6709\u7236\u4eb2\uff0c\u6216\u8005\u5176\u7236\u4eb2\u8282\u70b9\u662f\u4e0d\u662f\\(k\\)\u7684\u500d\u6570\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u7236\u4eb2\u6216\u8005\u6ca1\u6709\u662f\\(k\\)\u500d\u6570\u7684\u7236\u4eb2\uff0c\u8bf4\u660e\u5b83\u662f\u67d0\u9897\u5b50\u6811\u7684\u6839\u8282\u70b9\uff0c\u8ba1\u6570\u5668\u52a0\u4e00\uff1b\u5f53\u8ba1\u6570\u5668\\(&gt;1\\)\u65f6\uff0c\u5c31\u65e0\u89e3\u4e86\u3002</p> <p>\u6240\u4ee5\u6700\u7ec8\u590d\u6742\u5ea6\\(O((n+m)\\log n)\\)</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;vector&gt;\nusing namespace std;\nconst int N=1e5+10,M=1e6+10;\nint gcd(int a,int b){\n    return !b?a:gcd(b,a%b);\n}\nint n,cnt;\nint fa[N],b[N],f[M],head[N];\nvector&lt;int&gt; vis[M];\nstruct node{\n    int id,val; \n}a[N];\nbool cmp(node a,node b){\n    return a.val&gt;b.val;\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i) scanf(\"%d\",&amp;a[i].val),a[i].id=i,b[i]=a[i].val,vis[a[i].val].push_back(a[i].id);\n    sort(a+1,a+n+1,cmp);\n    int lst=0,flag=1;\n    for(int i=1;i&lt;=n;++i){\n        int pre=a[i].id;\n        if(lst==a[i].val) continue;\n        for(int j=a[i].val;j&lt;M;j+=a[i].val){\n            if(vis[j].size()){\n                for(int k=0;k&lt;vis[j].size();++k){\n                    int now=vis[j][k];\n                    if(now==pre) continue;\n                    if(!fa[now]) fa[now]=pre;\n                    else{\n                        int g=gcd(b[fa[now]],b[pre]);\n                        if(g!=b[pre]) flag=0;\n                    }\n                }\n            }\n        }\n        lst=a[i].val;\n    }\n    for(int i=1;i&lt;M;++i){\n        int tmp=0;\n        for(int j=i;j&lt;M;j+=i){\n            if(vis[j].size()){\n                for(int k=0;k&lt;vis[j].size();++k){\n                    int now=vis[j][k];\n                    if(fa[now]==0 || b[fa[now]]%i!=0) ++tmp;\n                }\n            }       \n        }\n        if(tmp&gt;1){\n            flag=0;break;\n        }\n    }\n    if(!flag) printf(\"-1\");\n    else for(int i=1;i&lt;=n;++i) printf(\"%d \",fa[i]);\n    return 0;\n}\n</code></pre> <p>P3557</p> <p>\u6ce8\u610f\u5230\u8ddd\u79bb\u4e3a1\u7684\u60c5\u51b5\u7684\u6700\u4f18\u89e3\u5c31\u662f\u8ddd\u79bb\u4e3a2\u7684\u60c5\u51b5\u7684\u4e00\u4e2a\u53ef\u884c\u89e3,\u56e0\u4e3a\u8ddd\u79bb\u4e3a1\u65f6\uff0c\u4e24\u4e2a\u5854\u4e4b\u95f4\u6700\u591a\u53ea\u80fd\u95f4\u9694\u4e24\u4e2a\u8282\u70b9\uff0c\u8fd9\u6837\u624d\u80fd\u4fdd\u8bc1\u5854\u6570\u91cf\u6700\u5c11\u4e14\u8986\u76d6\u5168\u56fe,\u800c\u8fd9\u79cd\u6784\u9020\u65b9\u5f0f\u7b49\u4ef7\u4e8e\u8ddd\u79bb\u4e3a2\u7684\u60c5\u51b5\u4e0b\u5c06\u6240\u6709\u672a\u8986\u76d6\u7684\u8282\u70b9\u9009\u4f5c\u5854\uff0c\u5e76\u8986\u76d6\u4e0a\u5468\u56f4\u70b9\u7684\u6784\u9020\u65b9\u5f0f\u3002\u800c\u9898\u76ee\u4fdd\u8bc1\u4e00\u5b9a\u53ef\u4ee5\u6784\u9020\u51fa\u7b49\u4e8e\\(k\\)\u7684\u6700\u4f18\u89e3\\(1\\)\u3002\u56e0\u6b64\u8fd9\u79cd\u6784\u9020\u65b9\u5f0f\u4e00\u5b9a\u80fd\u6784\u9020\u51fa\\(\\leq k\\)\u7684\u53ef\u884c\u89e3\\(2\\)\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=5e5+10,M=1e6+10;\nint n,m,k,cnt,u,v;\nint head[N],ans[N],vis[N];\nstruct edge{\n    int v,nxt;\n}e[M&lt;&lt;1];\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid dfs(int u,int p,int dep){\n    vis[u]=1;\n    if(dep&gt;=2) return;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p) continue;\n        dfs(v,u,dep+1);\n    }\n}\nint main(){\n    memset(head,-1,sizeof head);cnt=-1;\n    scanf(\"%d%d%d\",&amp;n,&amp;m,&amp;k);\n    for(int i=1;i&lt;=m;++i) scanf(\"%d%d\",&amp;u,&amp;v),add(u,v),add(v,u);\n    for(int i=1;i&lt;=n;++i) if(!vis[i]) ans[++ans[0]]=i,dfs(i,0,0);\n    printf(\"%d\\n\",ans[0]);\n    for(int i=1;i&lt;=ans[0];++i) printf(\"%d \",ans[i]);\n    return 0;\n}\n</code></pre> <p>P5441</p> <p>~~\u540d\u526f\u5176\u5b9e\u7684MO\u9898~~</p> <p>\u521d\u59cb\u7b54\u6848\u663e\u7136\uff0c\u4e3a\\(C_n^4\\)</p> <p>\u5b9a\u4e49\\(S_k\\)\u8868\u793a\\(i\\to ((i+k-1)\\mod n+1)\\)\u7684\u6240\u6709\u8fb9\u7684\u96c6\u5408,\u5373\u8df3\u8fc7\u4e86\\(k-1\\)\u4e2a\u70b9\u3002\\(S_k=S_{n-k},|S_k|=\\frac n2\\)</p> <p>\u6ce8\u610f\u5230\u6700\u5916\u5c42\\(S_1\\)/\u6b21\u5916\u5c42\\(S_2\\)\u7684\u8fb9\u90fd\u53ef\u4ee5\u6309\u7167\u4e00\u4e2a\u65b9\u5411\u653e\u7f6e\uff0c\u4e0d\u9700\u8981\u53cc\u5411\u8fb9\uff0c\u5bf9\u7b54\u6848\u6ca1\u6709\u5f71\u54cd\u3002</p> <p>\u800c\u5bf9\u4e8e\\(k\\geq 3\\)\u7684\u60c5\u51b5\uff0c\u7531\u4e8e\u524d\u4e24\u5c42\u7684\u8fb9\u662f\u6309\u7167\u4e00\u4e2a\u65b9\u5411\u653e\u7f6e\u7684\uff0c\u6240\u4ee5\u4f1a\u51fa\u73b0\u4e24\u4e2a\u4e0d\u540c\u65b9\u5411\u7684\u73af\u5171\u7528\u8fd9\u4e00\u6761\u8fb9\uff0c\u5373\u9700\u8981\u53cc\u5411\u8fb9\u3002\u5982\u679c\u4e0d\u7528\u53cc\u5411\u8fb9\uff0c\u5c31\u4f1a\u4e22\u5931\u4e00\u90e8\u5206\u65b9\u6848\u6570\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u8d2a\u5fc3\u5730\u53d6\u4e24\u73af\u4e2d\u6700\u5927\u73af\u7684\u65b9\u5411\u4f5c\u4e3a\u8fd9\u6761\u8fb9\u7684\u65b9\u5411\uff0c\u4e22\u5931\u4e00\u90e8\u5206\u6700\u5c0f\u73af\u4e0a\u7684\u65b9\u6848\u6570,\u8fd9\u79cd\u8fb9\u7684\u6570\u91cf\u4e3a\\(n\\)\u6761\u3002(\u4e24\u73af\u76f8\u7b49\u4efb\u53d6\u4e00\u4e2a\uff0c\u4f46\u6ce8\u610f\u8fb9\u6570\u53ea\u6709\\(\\frac n2\\)\u6761)</p> <p>\u53ef\u4ee5\u53d1\u73b0\\(S_k\\)\u7684\u6240\u6709\u8fb9\u53ef\u4ee5\u7ec4\u6210\u6240\u6709\u70b9\u6570\u4e3a\\(k\\)\u7684\u73af\u3002</p> <p>\u5c0f\u73af\u65b9\u6848\u6570\\(=C_{k-2}^2\\),\u56e0\u4e3a\u4e00\u4e2a\u8fb9\u7684\u4e24\u4e2a\u70b9\u4e00\u5b9a\u8981\u53d6\uff0c\u4e0d\u7136\u72b6\u6001\u6709\u91cd\u590d\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u6309\u7167\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\uff0c\u51cf\u53bb\u8fd9\u4e9b\u8d21\u732e\uff0c\u6700\u540e\u5269\u4e0b\u7684\u5c31\u662f\u6700\u5927\u65b9\u6848\u6570\u3002</p> <p>\u81f3\u4e8e\u65b9\u6848\uff0c\u53ea\u9700\u8981\u5728\u7edf\u8ba1\\(k\\geq 3\\)\u8fb9\u7684\u65f6\u5019\u8bb0\u5f55\u4e00\u4e0b\u4e24\u4e2a\u7aef\u70b9\uff0c\u5c06\u51cf\u53bb\u7684\u8bbe\u4e3a\u5355\u5411\uff0c\u5269\u4e0b\u7684\u8bbe\u4e3a\u53cc\u5411\u5373\u53ef\u3002\u518d\u52a0\u4e0a\\(k\\leq 2\\)\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=110,M=1e5+10;\nint C[N],c[N],f[N][N];\nint n,cnt,sum,m;\nstruct node{\n    int u,v,w;\n    node(int uu=0,int vv=0,int ww=0){\n        u=uu,v=vv,w=ww;\n    }\n}ans[M];\nvoid work(){\n    C[4]=1;c[2]=1;\n    for(int i=5;i&lt;=n;++i) C[i]=C[i-1]*i/(i-4);\n    for(int i=3;i&lt;=n;++i) c[i]=c[i-1]*i/(i-2);\n    cnt=0;sum=C[n];\n    for(int i=1;i&lt;=n;++i)\n        for(int j=1;j&lt;=2;++j) f[i][(i+j-1)%n+1]=1,f[i][i]=0;\n\n    for(int i=4;i&lt;=n-i+2;++i){\n        int tmp=c[i-2];\n        if(i==n-i+2) for(int j=1;j&lt;=n/2;++j) ans[++cnt]=node(j,(j+i-1-1)%n+1,tmp);//\u5bf9\u5e94\u4e24\u73af\u5927\u5c0f\u76f8\u7b49\u7684\u60c5\u51b5\u3002\n        else for(int j=1;j&lt;=n;++j) ans[++cnt]=node(j,(j+i-1-1)%n+1,tmp);    \n    }\n    m=max(0,n*(n-7)/2);\n    for(int i=1;i&lt;=m;++i){\n        int u=ans[i].u,v=ans[i].v,w=ans[i].w;\n        sum-=w;f[u][v]=1;\n    }\n    for(int i=m+1;i&lt;=cnt;++i){\n        int u=ans[i].u,v=ans[i].v;\n        f[u][v]=f[v][u]=1;\n    }   \n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    work();\n    printf(\"%d\\n\",sum);\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=n;++j) printf(\"%d \",f[i][j]);\n        printf(\"\\n\");\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E6%A0%91%E5%BD%A2dp/","title":"\u6811\u5f62dp\u603b\u7ed3","text":""},{"location":"my%20past/OI/%E6%A0%91%E5%BD%A2dp/#_1","title":"\u7edf\u8ba1\u7b54\u6848\u7c7b","text":"<p>P3047</p> <p>dp[u][k]\u8868\u793a\u8ddd\u79bbu\u4e0d\u8d85\u8fc7k\u7684\u70b9\u6743\u503c\u4e4b\u548c</p> <p>dfs1:$ dp[u][k]+=\\sum dp[v][k-1]$ \u4e0b\u884c\uff0c\u4e0d\u9700\u8981\u5bb9\u65a5\uff0c\u76f4\u63a5\u7531\u513f\u5b50\u7d2f\u52a0\u5373\u53ef</p> <p>\u6c42\u51fau\u7684\u5b50\u6811\u6240\u6709\u4e0d\u8d85\u8fc7k\u7684\u70b9\u6743\u503c\u4e4b\u548c</p> <p>dfs2:\\(dp[v][k]+=dp[u][k-1]-(k&gt;=2)dp[v][k-2]\\)\u4e0a\u884c\uff0c\u9700\u8981\u7b80\u5355\u5bb9\u65a5\uff0c\u5e76\u4e14\u6ce8\u610f\u8981\u9006\u5e8f\uff0c\u56e0\u4e3a\u82e5dp[v][k-2]\u5148\u66f4\u6539\uff0c\u5219dp[v][k]\u4f1a\u51fa\u9519</p> <p>\u6c42\u51fa\u6700\u7ec8\u7b54\u6848</p> <p>P2986</p> <p>dp[u]\u8868\u793a\u6bcf\u4e2a\u70b9\u7684\u7b54\u6848</p> <p>f[u]\u8868\u793a\u8be5\u8282\u70b9\u6240\u6709\u5b50\u8282\u70b9\u5230\u5b83\u7684\u8ddd\u79bb\u4e4b\u548c</p> <p>f[u]=f[v]+w * sz[v]</p> <p>\u5219\u6709dp[1]=f[1]</p> <p>\u90a3\u4e48 dp[v]=dp[u]-sz[v] * w+(sz[1] * w-sz[v] * w)</p> <p>=dp[u]-2 * sz[v] * w+sz[1] * w</p> <p>\u8f6c\u79fb\u65f6\u53ea\u66f4\u6539\u7684\u662f\u4e0e\u8be5\u8fb9\u6709\u5173\u8054\u7684\u7b54\u6848\u3002</p> <p>\u6ce8\u610f\u521d\u59cb\u72b6\u6001\u4e3adp[1]</p> <p>CF9D</p> <p>f[i][j]\u8868\u793ai\u4e2a\u8282\u70b9\uff0c\u6df1\u5ea6\u4e0d\u8d85\u8fc7j\u7684\u4e8c\u53c9\u6811\u603b\u6570\u91cf,\u5219</p> <p>$f[i][j]=\\sum_{k=1}^{i-1}f[k][j-1]* f[i-k-1][j-1] $</p> <p>P1623</p> <p>dp+\u9ad8\u7cbe\u5ea6</p> <p>\u8bbef[i][0/1]\u4e3a\u6700\u5927\u5339\u914d\u4e2a\u6570\uff0c0\u8868\u793a\u4e0e\u513f\u5b50\u4e0d\u5339\u914d\uff0c1\u8868\u793a\u4e0e\u5176\u4e2d\u4e00\u4e2a\u513f\u5b50\u5339\u914d\uff1bg[i][0/1]\u4e3a\u5bf9\u5e94\u7684\u65b9\u6848\u6570</p> <p>\u8f6c\u79fb\u65b9\u7a0b\uff1a(\u6709'\u4ebf'\u70b9\u590d\u6742) <pre><code>//\u65e0\u9ad8\u7cbe\u5ea6\nvoid dp1(int u,int p){\n    int sum=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p)continue;\n        dp1(v,u);\n        sum+=max(f[v][0],f[v][1]);\n    }\n    f[u][0]=sum;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p)continue;\n        f[u][1]=max(f[u][1],sum-max(f[v][0],f[v][1])+f[v][0]+1);\n    }\n    return;\n}\nvoid dp2(int u,int p){\n    int sum=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p)continue;\n        dp2(v,u);\n        if(f[v][0]&lt;f[v][1]){\n            sum*=g[v][1];\n        }else if(f[v][0]&gt;f[v][1]){\n            sum*=g[v][0];\n        }else{\n            sum*=(g[v][0]+g[v][1]);         \n        }\n    }\n    g[u][0]=sum;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        int tmp=1;\n        if(v==p)continue;\n        if(f[v][0]&lt;f[v][1]){\n            tmp=g[v][1];\n        }else if(f[v][0]&gt;f[v][1]){\n            tmp=g[v][0];\n        }else{\n            tmp=(g[v][0]+g[v][1]);          \n        }\n        if(f[u][1]==f[u][0]-max(f[v][0],f[v][1])+f[v][0]+1){\n            g[u][1]+=(g[u][0]/tmp)*g[v][0];\n        }\n    }\n    return;\n}\n</code></pre> \u6ce8\u610f\u6700\u540e\u7684g\u4e5f\u8981\u6839\u636ef\u5224\u65ad\uff0c\u8fd9\u4e2a\u5751\u4e86\u6211\u4e00\u6b21 ~~(\u6211\u751a\u81f3\u8fde\u9ad8\u7cbe\u5ea6\u90fd\u6ca1\u5199\uff0c\u53ea\u62ff\u4e8660pts)~~</p>"},{"location":"my%20past/OI/%E6%A0%91%E5%BD%A2dp/#_2","title":"\u8282\u70b9\u9009\u62e9\u7c7b(\u67d3\u8272\u7c7b)","text":"<p>P4084</p> <p>\u6811\u5f62dp\u5165\u95e8\u9898:)</p> <p>dp[i][j]\u8868\u793a\u5f53\u524d\u8282\u70b9\u4e3aj\u989c\u8272\u662f\u7684\u65b9\u6848\u6570</p> <p>\u6ce8\u610f\u5f53\u8be5\u8282\u70b9\u5df2\u7ecf\u6709\u989c\u8272\u65f6\uff0c\u5219dp[u][c[u]]=1,\u5176\u4ed6\u4e3a0 \uff1b\u5426\u5219dp[u][1,2,3]=1;</p> <p>\u8f6c\u79fb\uff1a</p> <pre><code>//1.c[u]!=0\nfor(i;1-3)\nif(i!=c[u])sum+=dp[v][i];\ndp[u][c[u]]=(dp[u][c[u]]*sum)%P;\n//2.c[u]==0\nfor(i;1-3)\nfor(j;1-3)\nif(j!=i)sum+=dp[v][j];\ndp[u][i]=(dp[u][i]*sum)%P;\n</code></pre> <p>P2279 \u975e\u5e38\u597d\u3002\u975e\u5e38\u6076\u5fc3</p> <p>dp[u][0,1,2,3,4]\u4e00\u51710\uff0c1\uff0c2\uff0c3\uff0c4\u4e94\u79cd\u72b6\u6001\uff0c\u5206\u522b\u4e3a\u7237\u7237\uff0c\u7236\u4eb2\uff0c\u81ea\u5df1\uff0c\u513f\u5b50\uff0c\u5b59\u5b50</p> <p>\u540c\u6837\u8981\u6ce8\u610f\u4e0a\u884c\u7684\u72b6\u6001dp[u][3] \u548cdp[u][4]</p> <p>P2899</p> <p>dp[u][0/1/2]\u8868\u793a\u4e09\u79cd\u72b6\u6001\uff0c\u88ab\u81ea\u5df1\u8986\u76d6\uff0c\u88ab\u513f\u5b50\u8986\u76d6\uff0c\u88ab\u7236\u4eb2\u8986\u76d6</p> <p>\u6ce8\u610f\u987a\u5e8f\u65f6\u4ece\u4e0b\u5f80\u4e0a\u56de\u6eaf\u65f6\u641c\uff0c\u6240\u4ee5\u641c\u5230\u7236\u4eb2\u65f6\u513f\u5b50\u5df2\u7ecf\u88ab\u66f4\u65b0\u5b8c\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528</p> <p>1.dp[u][0]=\\(\\sum\\)min(dp[v][0],dp[v][1],dp[v][2]),\u56e0\u4e3a\u81ea\u5df1\u5df2\u7ecf\u88ab\u81ea\u5df1\u8986\u76d6\uff0c\u6240\u4ee5\u53ef\u4ee5\u53d6\u513f\u5b50\u7684\u6240\u6709\u503c\uff1b</p> <p>2.dp[u][2]=\\(\\sum\\)min(dp[v][0],dp[v][1]),\u5982\u679cu\u88abfa[u]\u8986\u76d6\uff0c\u5219u\u4e0d\u4f1a\u88abu\u81ea\u5df1\uff0c\u4e5f\u5c31\u662fdp[v][2]\u8986\u76d6\uff0c\u5c31\u4e0d\u53d6\u4e86</p> <p>update:2021.11.12 \u5e94\u8be5\u662fdp[u][2]=\\(\\sum\\)dp[v][1]\uff0c\u56e0\u4e3au\u53ea\u88ab\u7236\u4eb2\u8986\u76d6\uff0c\u5982\u679c\u53d6dp[v][0]\u5219\u8868\u660eu\u8fd8\u88ab\u513f\u5b50\u8986\u76d6\uff0c\u5219\u4f1a\u51fa\u9519.</p> <p>3.&lt; \u91cd\u70b9 &gt;dp[u][1]=min(f[v][0]+$\\sum_{i=son[u]}^{i!=v} $min(f[i][0],f[i][1])),\u56e0\u4e3au\u8981\u88ab\u81f3\u5c11\u4e00\u4e2a\u5b50\u8282\u70b9\u8986\u76d6\uff0c\u6240\u4ee5\u53ef\u4ee5\u66b4\u529b\u679a\u4e3e\u6bcf\u4e00\u4e2a\u8282\u70b9\uff0c\u5219\u5269\u4f59\u7684\u8282\u70b9\u7684\u72b6\u6001\u4e0e2\u76f8\u540c\u3002</p> <p>\u4e5f\u53ef\u4ee5\u8fdb\u884c\u6570\u5b66\u65b9\u6cd5\u7684\u4f18\u5316\uff0c\u8be6\u89c1\u9898\u89e3</p> <p>P3174</p> <p>\u6709\u610f\u601d\u7684\u4e00\u9053\u9898</p> <p>\u5b9a\u4e49:</p> <p>f[n]\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u5b50\u6811\u91cc\u6700\u957f\u7684\u94fe\u4e2d\u5305\u542b\u7684\u70b9(\u4e3b\u5e72\u4e0e\u5206\u53c9)</p> <p>ans[n]\u8868\u793a\u5f53\u524d\u8282\u70b9\u7684\u7b54\u6848</p> <p>\u56e0\u4e3a\u5b58\u5728\u62d0\u5f2f\u7684\u60c5\u51b5\uff0c\u6240\u4ee5\u6700\u4f18\u89e3\u4e0d\u4e00\u5b9a\u5b58\u5728\u4e8e\u6839\u8282\u70b9\uff0c\u56e0\u6b64\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <pre><code>    f[u]=max1+num;\n    if(p==0) {//p\u662fu\u7684\u7236\u4eb2\uff0c\u6839\u8282\u70b9\u65e0\u7236\u4eb2\n        ans[u]=max1+max2+num-1;\n    } else ans[u]=max1+max2+num;\n</code></pre> <p>\u6700\u7ec8\u7b54\u6848\u4e3amax(ans[i])</p> <p>P1352</p> <p>\u6a21\u677f\u9898\u3002 * \u8981\u7528\u513f\u5b50\u66f4\u65b0\u7236\u4eb2\u800c\u4e0d\u7528\u7236\u4eb2\u66f4\u65b0\u513f\u5b50\u7684\u539f\u56e0\uff1a\u4f1a\u4ea7\u751f\u540e\u6548\u6027\uff1a\u513f\u5b50\u7684\u7b54\u6848\u4e0d\u4ec5\u4e0e\u7236\u4eb2\u6709\u5173\uff0c\u8fd8\u4e0e\u7237\u7237\u6709\u5173\uff0c\u7237\u7237\u4e0d\u9009\uff0c\u513f\u5b50\u4e5f\u4e0d\u80fd\u9009\u3002</p>"},{"location":"my%20past/OI/%E6%A0%91%E5%BD%A2dp/#_3","title":"\u6811\u5f62\u80cc\u5305\u7c7b","text":"<p>P2015</p> <p>\u6811\u5f62\u80cc\u5305\u6a21\u677f\u9898\uff0c\u6ce8\u610f\u56e0\u4e3a\u662f\u4e8c\u53c9\u6811\uff0c\u6240\u4ee5\u8f6c\u79fb\u65b9\u7a0b\u6709\u4e24\u79cd\uff1a</p> <p>1.dp[u][t]=max(dp[u][t],dp[ln][t-k]+dp[rn][k]),ln rn \u8868\u793a\u5de6\u513f\u5b50\u53f3\u513f\u5b50</p> <p>2.dp[u][t]=max(dp[u][t],dp[v][k]+dp[u][t-k])</p> <p>2\u7684\u597d\u5904\u4e3a\u53ef\u4ee5\u5e94\u5bf9\u591a\u53c9\u6811\u3002</p> <p>\u539f\u56e0\u662f\uff1a</p> <p>\u56e0\u4e3a\u8981\u5148\u679a\u4e3et\uff0c\u6240\u4ee5\u5c31\u50cf\u80cc\u5305\u4e00\u6837\uff0c\u5f53\u524d\u513f\u5b50\u7684\u8d21\u732e\u80fd\u591f\u52a0\u5728\u4e4b\u524d\u7684\u72b6\u6001\u91cc\uff0c\u800c\u4e4b\u524d\u7684\u72b6\u6001\u5df2\u7ecf\u5305\u542b\u5728\u6df1\u641c\u5b83\u4e4b\u524d\u7684\u5144\u5f1f\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u8fdb\u884c\u7d2f\u52a0\u3002</p> <p>v\u76f8\u5f53\u4e8e\u77f3\u5934\u79cd\u7c7b\uff1bt\u76f8\u5f53\u4e8e\u80cc\u5305\u5bb9\u91cf</p> <p>\u6ce8\u610f\u8981\u9006\u5e8f\u679a\u4e3et\uff0c\u4e0d\u7136\u4f1a\u5bf9\u4e4b\u524d\u5df2\u7ecf\u5f97\u5230\u7684\u72b6\u6001\u8fdb\u884c\u4e8c\u6b21\u7d2f\u52a0</p> <p>P1270</p> <p>\u6811\u5f62\u80cc\u5305\u3002</p> <p>1.\u540c\u6837\u662fdp[u][t]=max(dp[u][t],dp[v][k]+dp[u][t-k])\uff1b</p> <p>2.dp[u][t]=max(dp[u][t],dp[u][t-j*5]+j) \u5728\u6df1\u641c\u5b8c\u6240\u6709\u513f\u5b50\u540e\u505a\u8fd9\u4e2a</p> <p>\u540c\u6837\u6ce8\u610f\u9006\u5e8f\u679a\u4e3et</p> <ul> <li>\u7ed3\u8bba\uff1a\u4e0d\u4e00\u5b9a\u8981\u6309\u7167\u65f6\u95f4\u7ebf\u6027\u6d41\u901d\u8bbe\u7f6e\u72b6\u6001\uff0c\u4e5f\u53ef\u4ee5\u5c06\u65f6\u95f4\u7d2f\u52a0\u8868\u793a\uff0c\u5373\u7d2f\u52a0\u8d21\u732e\u3002</li> </ul> <p>P3360</p> <p>\u540c\u4e0a\uff0c\u52a0\u5165\u4e86\u4ef7\u503c\u3002</p> <p>P4362</p> <p>\u6bcf\u4e2a\u6811\u679d\u53ea\u6709\u4e24\u79cd\u60c5\u51b5\u4f1a\u4ea7\u751f\u96be\u53d7\u503c\uff1a</p> <p>1) \u4e24\u7aef\u70b9\u90fd\u88ab\u5927\u5934\u5403\u6389 2) \u4e24\u7aef\u70b9\u90fd\u4e0d\u88ab\u5927\u5934\u5403\u6389\u5e76\u4e14\u5c0f\u5934\u53ea\u6709\u4e00\u4e2a(m==2)</p> <p>\u56e0\u4e3a\u5982\u679c\u5c0f\u5934\u591a\u4f59\u4e00\u4e2a\uff0c\u90a3\u4e48\u4efb\u610f\u4e00\u6761\u6ee1\u8db3\u60c5\u51b52\u7684\u6811\u679d\uff0c\u5b83\u7684\u4e24\u7aef\u90fd\u53ef\u4ee5\u88ab\u4e0d\u540c\u7684\u5c0f\u5934\u5403\uff0c\u5c31\u4e0d\u4f1a\u6709\u8d21\u732e\u3002</p> <p>\u56e0\u6b64\u8f6c\u79fb\u65b9\u7a0b\uff1a \\(\\(f[u][i][0]=min(f[u][i][0],min(tmp[i-j][0]+f[v][j][0]+(m==2)* w,tmp[i-j][0]+f[v][j][1]));\\\\ f[u][i][1]=min(f[u][i][1],min(tmp[i-j][1]+f[v][j][1]+w,tmp[i-j][1]+f[v][j][0]));\\)\\)</p> <p>\u6ce8\u610fm==2\uff0c\u5c31\u7b97\u6ca1\u6709\u96be\u53d7\u503c\u4e5f\u8981\u628a\u5b50\u6811\u7684\u8d21\u732e\u52a0\u5230\u80cc\u5305\u91cc\u3002</p> <p>\u5e76\u4e14\u6bcf\u6b21dp\u4e4b\u524d\u8981\u5c06f[u]\u6570\u7ec4\u5907\u4efd\u4e0b\u6765\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u9632\u6b62f[u]\u4e0d\u65ad\u53d8\u5c0f.</p> <p>\u4f8b\u5982\uff1a</p> <p></p> <p>\u65e0tmp\uff1a</p> <p>v1\u540e\uff1af[u][1][0]=0;</p> <p>v2\u540e\uff1a\u56e0\u4e3af[u][1][0]=0,\u6240\u4ee5f[u][1][0]=min(0,0+0+5)=0;</p> <p>\u6709tmp\uff1a</p> <p>v1\u540e\uff1af[u][1][0]=0;</p> <p>v2\u524d\uff1a</p> <p>f[u][1][0]=INF; tmp[1][0]=0;</p> <p>v2\u540e\uff1af[u][1][0]=min(INF,0+0+5)=5;</p> <p>\u56e0\u4e3af[u][1][0]\u5728\u4e0d\u540c\u65f6\u523b\u8868\u793a\u7684\u662f\u4e0d\u540c\u72b6\u6001\uff0c\u5982\u679c\u4e0d\u5907\u4efd\uff0c\u5c31\u4f1a\u5bfc\u81f4f[u]\u8d8a\u6765\u8d8a\u5c0f\uff0c\u5373f[u][1][0]\u53ea\u80fd\u4e0e\u5f53\u524d\u65f6\u523b\u7684\u65b0\u8d21\u732e\u6bd4\u8f83\uff0c\u4e0d\u80fd\u4e0etmp\u4e2d\u4e4b\u524d\u7684\u72b6\u6001\u505amin.tmp\u53ea\u80fd\u7528\u6765\u66f4\u65b0\u51fa\u5f53\u524dj\u4e0d\u540c\u7684\u72b6\u6001.</p> <p>\u6362\u79cd\u8bf4\u6cd5\uff0cf[v2][1][0]\u8868\u793a\u5f53\u524d\u72b6\u6001\uff0cf[v1][1][0]\u8868\u793a\u4e4b\u524d\u7684\u72b6\u6001\uff0c\u5219v2\u4ee5\u53ca\u5b83\u4e4b\u540e\u7684\u72b6\u6001\u90fd\u4f1a\u56e0\u4e3af[v1][1][0]=0\u800c\u8d8a\u53d8\u8d8a\u5c0f\uff0c\u4ea7\u751f\u4e86\u540e\u6548\u6027\u3002</p> <p>\u4e3a\u4e86\u4e0d\u4ea7\u751f\u540e\u6548\u6027\uff0c\u5c31\u4e0d\u80fd\u8ba9v2\u8bbf\u95ee\u5230f[v1][1][0],\u6240\u4ee5\u9700\u8981\u5907\u4efdtmp\u3002</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n\nusing namespace std;\nconst int N=530;\nint f[N][N][2],head[N],sz[N],tmp[N][2];\nint n,m,k,cnt;\nstruct node {\n    int v,w,nxt;\n} e[N&lt;&lt;1];\nvoid add(int u,int v,int w) {\n    e[++cnt].v=v;\n    e[cnt].w=w;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n}\nvoid dp(int u,int p) {\n    f[u][0][0]=0;\n    f[u][1][1]=0;\n    sz[u]=1;\n    for(int o=head[u]; ~o; o=e[o].nxt) {\n        int v=e[o].v,w=e[o].w;\n        if(v==p)continue;\n        dp(v,u);\n        sz[u]+=sz[v];\n    }\n    for(int o=head[u]; ~o; o=e[o].nxt) {\n        int v=e[o].v,w=e[o].w;\n        if(v==p)continue;\n        memcpy(tmp,f[u],sizeof tmp);\n        memset(f[u],63,sizeof f[u]);\n        for(int i=min(k,sz[u]); i&gt;=0; --i) {//\u6ce8\u610f\u8fd9\u91cc\u53d6min(k,sz[u])\u53ef\u4ee5\u5feb\u4e0d\u5c11\n            for(int j=min(i,sz[v]); j&gt;=0; --j) {\n                f[u][i][0]=min(f[u][i][0],min(tmp[i-j][0]+f[v][j][0]+(m==2)*w,tmp[i-j][0]+f[v][j][1]));\n\n                f[u][i][1]=min(f[u][i][1],min(tmp[i-j][1]+f[v][j][1]+w,tmp[i-j][1]+f[v][j][0]));\n            }\n        }\n    }\n}\nint main() {\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%d%d%d\",&amp;n,&amp;m,&amp;k);\n    if(n-k&lt;m-1) {\n        printf(\"-1\");\n        return 0;\n    }\n    for(int i=1,u,v,w; i&lt;n; ++i) {\n        scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w);\n        add(u,v,w);\n        add(v,u,w);\n    }\n    //init();\n    memset(f,63,sizeof f);\n    dp(1,1);\n    printf(\"%d\",f[1][k][1]);\n    return 0;\n}\n</code></pre> * \u6811\u5f62\u80cc\u5305\u7684\u590d\u6742\u5ea6\u5206\u6790\uff1a</p> <p>$$ \u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u679a\u4e3e\u7684\u6b21\u6570\u4e3asz[u] sz[v_1]+sz[u] sz[v_2]+...+sz[u]* sz[v_m]=O(sz[u]^2)\\</p> <p>(\u5bf9\u4e8e\u679a\u4e3e\u52300\uff0c\u5176\u5b9e\u76f8\u5dee\u4e2a\u5e38\u6570\uff0c\u53ef\u4ee5\u5ffd\u7565\u3002)\\</p> <p>\u6240\u4ee5\u6574\u4f53\u7684\u590d\u6742\u5ea6\u5c31\u662f\\sum_{u=1}^n sz[u]^2=O(n^3* k),k&lt;1.\\</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u6700\u6781\u9650\u7684\u60c5\u51b5\u5c31\u662f\u4e00\u6761\u94fe\uff0c\u6b64\u65f6k=\\frac12</p> <p>\u6240\u4ee5k&lt;\\frac12\\</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8bf4\u6811\u5f62\u80cc\u5305\u7684\u590d\u6742\u5ea6\u4e25\u683c\u5c0f\u4e8eO(0.5n^3) $$</p> <p>P3177</p> <p>\u597d\u9898\u3002</p> <p>\u8bbef[u][i]\u8868\u793a\u6bcf\u4e2a\u8282\u70b9\u7684\u5b50\u6811\u5185\u6240\u6709\u7684\u8fb9\u4ea7\u751f\u7684\u8d21\u732e\u3002</p> <p>\u6ce8\u610f\u72b6\u6001\u7684\u542b\u4e49\u65f6\u8d21\u732e\uff0c\u4e0d\u662f\u6bcf\u4e2a\u5b50\u6811\u5185\u6240\u6709\u70b9\u7684\u7b54\u6848\uff0c\u56e0\u4e3a\u5b50\u6811\u5185\u7684\u70b9\u4f1a\u548c\u5b50\u6811\u5916\u7684\u70b9\u4ea7\u751f\u989d\u5916\u7684\u8d21\u732e\uff0c\u5e76\u4e14\u65e0\u6cd5\u8ba1\u7b97\u3002</p> <p>\u8003\u8651\u6bcf\u6761\u8fb9\u7684\u8d21\u732e\uff0c\u5b9e\u9645\u4e0a\u5c31\u662f\u4e24\u8fb9\u7684\u540c\u8272\u70b9\u7684\u4e58\u79ef\u3002</p> <p>\u5219\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <pre><code>    int tot=j*(k-j)+(sz[v]-j)*(n-sz[v]-k+j);\n    f[u][i]=max(f[u][i],f[u][i-j]+f[v][j]+tot*w);\n</code></pre> <ul> <li>\u6ce8\u610f\uff1a 1) \u8fd9\u4e2a\u6811\u5f62\u80cc\u5305\u8981\u6e05\u7a7a\u975e\u6cd5\u72b6\u6001(-1)\uff0c\u4e0d\u7136\u4f1a\u51fa\u9519\u3002</li> </ul> <p>2) \u7b2c\u4e8c\u5c42\u7684\u679a\u4e3e\u5982\u679c\u662f\u5012\u5e8f\uff0c\u5c31\u4e00\u5b9a\u8981\u5148\u8f6c\u79fbf[v][0],\u5373j==0\u5f97\u60c5\u51b5\uff0c\u4e0d\u7136\u4e5f\u4f1a\u51fa\u9519\u3002\u539f\u56e0\u5c31\u662f\uff0c\u6bcf\u6b21\u90fd\u4f1a\u7528f[u][j]\u66f4\u65b0\u4e00\u6b21:f[u][j]+f[v][0]\uff0c\u8fd9\u5c31\u4e0d\u6ee1\u8db3\u4e0d\u7528\u5f97\u51fa\u7684\u72b6\u6001\u66f4\u65b0\u5176\u4ed6\u72b6\u6001\u4e86\u3002</p> <ul> <li>\u7ed3\u8bba:  \u5f53\u8bbe\u8ba1\u6210\u5b50\u6811\u5185\u7b54\u6848\u884c\u4e0d\u901a\uff0c\u6362\u53e5\u8bdd\u8bf4\u5b50\u6811\u5185\u7b54\u6848\u53d7\u5b50\u6811\u5916\u8282\u70b9\u5f71\u54cd\u65f6\uff0c\u53ef\u4ee5\u8bbe\u8ba1\u6210\u5b50\u6811\u5185\u8fb9\u7684\u8d21\u732e\u3002</li> </ul> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=2200;\nint n,k,cnt;\nint head[N],sz[N];\nint f[N][N];\nstruct node{\n    int v,nxt,w;\n}e[N&lt;&lt;1];\nvoid add(int u,int v,int w){\n    e[++cnt].v=v;\n    e[cnt].w=w;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n}\nvoid dfs(int u,int p){\n    sz[u]=1;\n    for(int o=head[u];~o;o=e[o].nxt){\n        int v=e[o].v;\n        if(v==p)continue;\n        dfs(v,u);\n        sz[u]+=sz[v];\n    }\n}\nvoid dp(int u,int p){\n    f[u][1]=f[u][0]=0;\n    for(int o=head[u];~o;o=e[o].nxt){\n        int v=e[o].v,w=e[o].w;\n        if(v==p)continue;\n        dp(v,u);\n        for(int i=min(sz[u],k);i&gt;=0;--i){\n            for(int j=0;j&lt;=min(sz[v],i);++j){\n                if(f[u][i-j]==-1)continue;\n                int tot=j*(k-j)+(sz[v]-j)*(n-sz[v]-k+j);\n                f[u][i]=max(f[u][i],f[u][i-j]+f[v][j]+tot*w);\n            }\n        } \n    }\n}\nint read1(){\n    int x=0;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        ch=getchar();\n    }\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x;\n}\nvoid write1(int x){\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n}\nsigned main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    n=read1(),k=read1();\n    if(n-k&lt;k)k=n-k;\n    for(int i=1,u,v,w;i&lt;n;++i){\n        u=read1(),v=read1(),w=read1();\n        add(u,v,w);\n        add(v,u,w);\n    }\n    memset(f,-1,sizeof f);\n    dfs(1,0);\n    dp(1,0);\n    write1(f[1][k]);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E6%A0%91%E5%BD%A2dp/#dp_1","title":"\u6362\u6839dp","text":"<p>P6419</p> <p>\u8bbe\\(f[u]\\)\u8868\u793a\u5b50\u6811\u5185\u8d21\u732e\uff0c\\(g[u]\\)\u8868\u793a\u5b50\u6811\u5916\u8d21\u732e\uff0c\\(dis[u][0/1]\\)\u8868\u793a\u5b50\u6811\u5185\u6700/\u6b21\u957f\u94fe\uff0c\\(up[u]\\)\u8868\u793a\u5b50\u6811\u5916\u6700\u957f\u94fe\u3002</p> <p>\u6ce8\u610f\u66f4\u65b0\\(up[u]\\)\u548c\\(g[u]\\)\u65f6\uff0c\u5982\u679c\u6240\u6709\u5173\u952e\u70b9\u90fd\u5305\u542b\u5728\\(v\\)\u5b50\u6811\u5185\uff0c\u8bf4\u660e\\(u\\)\u4e0a\u9762\u6ca1\u6709\u6700\u957f\u94fe\uff0c\u90a3\u4e48\\(up[v]\\)\u548c\\(g[v]\\)\u90fd\u4e0d\u5e94\u8be5\u8f6c\u79fb\u3002\uff08\u90fd\u4e3a0\uff09</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=5e5+10;\nint dis[N][2],up[N],head[N],f[N],g[N],sz[N],vis[N],ans[N];\nint n,k,cnt,tot;\nstruct node {\n    int v,w,nxt;\n} e[N&lt;&lt;1];\nvoid add(int u,int v,int w) {\n    e[++cnt].v=v;\n    e[cnt].w=w;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n}\nvoid dfs(int u,int p) {\n    sz[u]=vis[u];\n    for(int i=head[u]; ~i; i=e[i].nxt) {\n        int v=e[i].v,w=e[i].w;\n        if(v==p)continue;\n\n        dfs(v,u);\n        sz[u]+=sz[v];\n\n        if(!sz[v])continue;\n        f[u]+=f[v]+w+w;\n\n        if(dis[v][0]+w&gt;dis[u][0]) {\n            dis[u][1]=dis[u][0];\n            dis[u][0]=dis[v][0]+w;\n        } else if(dis[v][0]+w&gt;dis[u][1]) {\n            dis[u][1]=dis[v][0]+w;\n        }\n\n    }\n}\nvoid dp(int u,int p) {\n    for(int i=head[u]; ~i; i=e[i].nxt) {\n        int v=e[i].v,w=e[i].w;\n        if(v==p)continue;\n        if((k-sz[v])) {\n            g[v]=g[u]+f[u]-f[v]+((sz[v]==0)?(w+w):0);\n            if(dis[v][0]+w==dis[u][0]) {\n                up[v]=max(up[u],dis[u][1])+w;\n            } else {\n                up[v]=max(up[u],dis[u][0])+w;\n            }\n        }\n        dp(v,u);\n    }\n}\nsigned main() {\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    for(int i=1,u,v,w; i&lt;n; ++i) {\n        scanf(\"%lld%lld%lld\",&amp;u,&amp;v,&amp;w);\n        add(u,v,w);\n        add(v,u,w);\n    }\n    for(int i=1,tmp; i&lt;=k; ++i) {\n        scanf(\"%lld\",&amp;tmp);\n        vis[tmp]=1;\n    }\n    dfs(1,0);\n    dp(1,0);\n    for(int i=1; i&lt;=n; ++i) {\n        printf(\"%lld\\n\",f[i]+g[i]-max(dis[i][0],up[i]));\n    }\n\n    return 0;\n}\n</code></pre> <ul> <li>\u7ed3\u8bba\uff1a</li> </ul> <p>1) \u6362\u6839dp\u7684\u5957\u8def\u5c31\u662f\u5904\u7406\u5b50\u6811\u5185\u7684\u4fe1\u606f\uff0c\u5b50\u6811\u5916\u7684\u4fe1\u606f\u7531\u5b50\u6811\u5185\u4fe1\u606f\u76f8\u51cf\u5f97\u5230\u3002</p> <p>2) \u5904\u7406\u5b50\u6811\u5185\u4fe1\u606f\u65f6\uff0c\u987a\u5e8f\u4e3a\\(v\\to u\\),\u5373\u4ece\u53f6\u5b50\u5411\u4e0a\u5408\u5e76\uff1b\u5904\u7406\u5b50\u6811\u5916\u4fe1\u606f\u65f6\uff0c\u987a\u5e8f\u4e3a\\(u \\to v\\),\u5373\u4ece\u6839\u5411\u4e0b\u63a8\u3002</p> <p>P3237</p> <p>~~\u770b\u9898\u5c31\u770b\u4e8630min~~</p> <p>\u7136\u800c\u770b\u61c2\u4e86\u9898\u4e5f\u4e0d\u77e5\u9053\u600e\u4e48\u505a\u3002</p> <p>\u9898\u610f\u7b80\u5316:</p> <p>\u7ed9\u4e00\u68f5\u6811\uff0c\u6bcf\u4e2a\u70b9\u6709\u4e00\u4e2a\u6743\u503c\uff0c\u8981\u6c42\u4fee\u6539\u4e00\u4e9b\u70b9\u7684\u6743\u503c\uff0c\u4f7f\u5f97\uff1a</p> <p>1) \u540c\u4e00\u4e2a\u7236\u4eb2\u7684\u513f\u5b50\u6743\u503c\u5fc5\u987b\u76f8\u540c</p> <p>2) \u7236\u4eb2\u7684\u53d6\u503c\u5fc5\u987b\u662f\u6240\u6709\u513f\u5b50\u6743\u503c\u4e4b\u548c</p> <p>\u4e00\u4e2a\u91cd\u8981\u7ed3\u8bba\uff1a\u53ea\u8981\u6709\u4e00\u4e2a\u70b9\u88ab\u786e\u5b9a\u4e86\uff0c\u90a3\u4e48\u6574\u68f5\u6811\u7684\u6700\u7ec8\u5f62\u6001\u5c31\u968f\u4e4b\u786e\u5b9a\u4e86\u3002</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u4e00\u4e2a\u70b9\u88ab\u786e\u5b9a\u540e\uff0c\u53ea\u6709\u4e0e\u4ed6\"\u7b49\u4ef7\"\u7684\u70b9\u4e0d\u7528\u6539\u53d8\uff0c\u5176\u4ed6\u7684\u90fd\u8981\u53d8\u3002</p> <p>\u8bbe\u6700\u591a\u7684\u7b49\u4ef7\u70b9\u4e2a\u6570\u603b\u5171\u6709\\(ans\\)\u4e2a\uff0c\u90a3\u4e48\u6700\u7ec8\u8981\u6539\u53d8\\(n-ans\\)\u4e2a\u70b9\u3002</p> <p>\u4e0b\u9762\u8981\u6c42\u51fa\u6240\u6709\u7b49\u4ef7\u70b9\u3002\u6211\u4eec\u53d1\u73b0\uff0c\u4e24\u4e2a\u8282\u70b9\u7b49\u4ef7\u9700\u8981\u6ee1\u8db3\uff1a</p> <p>\\(\\prod_{i=1}^{d_x-1}son[v[i]]* a[x]=\\prod_{i=1}^{d_y-1}son[v[i]]* a[y]\\)\u3002</p> <p>\u8bbe\\(f[i]\\)\u8868\u793a\u4e0a\u8ff0\u5f0f\u5b50\uff0c\u5219\uff1a\\(f[x]=f[y]\\)</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5~~\u5feb\u4e50\u5730~~\u6811\u5f62\\(dp\\)\u4e86.</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\n#include&lt;algorithm&gt; \n#define int long long \nusing namespace std;\ntypedef double db;\nconst int N=5e5+10;\nconst db eps=1e-8,INF=1e8;\nint n,u,v,cnt,tmp,ans;\nint a[N],head[N];\ndb f[N];\nstruct node{\n    int v,nxt;\n}e[N&lt;&lt;1];\nbool cmp(db a,db b){return a&lt;b;}\nvoid add(int u,int v){e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;}\nvoid dfs(int u,int p,db t){\n    f[u]+=t;\n    int tot=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p)continue;\n        ++tot;\n    }\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p)continue;\n        dfs(v,u,t+log((db)(tot)));\n    }\n}\nsigned main(){\n    memset(head,-1,sizeof head);cnt=-1;f[0]=-INF;\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i) scanf(\"%lld\",&amp;a[i]),f[i]=log((db)(a[i]));\n    for(int i=1;i&lt;n;++i) scanf(\"%lld%lld\",&amp;u,&amp;v),add(u,v),add(v,u);\n    dfs(1,0,0);\n    sort(f+1,f+n+1,cmp);\n    tmp=0,ans=0;\n    for(int i=2;i&lt;=n;++i){\n        if(f[i]-f[i-1]&lt;eps) ++tmp;\n        else ans=max(ans,tmp),tmp=1;\n    }\n    ans=max(ans,tmp);\n    printf(\"%lld\",n-ans);\n    return 0;\n} \n</code></pre> <p>P3523</p> <p>\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6709\u7528\u8d85\u8fc7\\(m\\)\u4e2a\u70b9\u6765\u8986\u76d6\u6240\u6709\u5173\u952e\u70b9\uff0c\u6700\u5927\u8ddd\u79bb\u6700\u5c0f\u4e3a\\(ans\\).</p> <p>\u5982\u679c\u4f7f\u7528\u8d2a\u5fc3+\u4e8c\u5206\uff0c\u5219\u9700\u8981\u4fdd\u8bc1\u6bcf\u4e2a\u65b0\u8282\u70b9\u7ba1\u8f96\u7684\u8303\u56f4\u6700\u5927\u5e76\u4e14\u4e0e\u5176\u4ed6\u8282\u70b9\u7ba1\u8f96\u7684\u8282\u70b9\u91cd\u53e0\u6700\u5c0f\u3002\u8fd9\u6837\u80fd\u4fdd\u8bc1\u7528\u7684\u70b9\u6700\u5c11\u3002</p> <p>\u6240\u4ee5\u53ef\u4ee5\u8bbe\\(f[i]\\)\u8868\u793a\u5728\\(i\\)\u7684\u5b50\u6811\u91cc\u8ddd\u79bb\\(i\\)\u6700\u8fdc\u7684\u5173\u952e\u8282\u70b9\uff1b\\(g[i]\\)\u8868\u793a\u5728\\(i\\)\u7684\u5b50\u6811\u91cc\u8ddd\u79bb\\(i\\)\u6700\u8fd1\u7684\u5df2\u9009\u4e2d\u7684\u8282\u70b9\u3002</p> <p>\u521d\u59cb\u503c\\(f[u]=-\\infty,g[u]=\\infty\\)</p> <p>\u8f6c\u79fb\uff1a</p> \\[ f[u]=\\max_{v\\in son(u)}(f[v]+1),g[u]=\\min_{v\\in son(u)}(g[v]+1) \\] <p>\u8fd8\u6709\u4e09\u4e2a\u7279\u5224\uff1a</p> <p>(\\(k\\)\u4e3a\u5f53\u524d\u4e8c\u5206\u7684\u8ddd\u79bb)</p> <p>1) \\(f[u]+g[u]&lt;=k\\)\uff0c\u8bf4\u660e\u5f53\u524d\u7684\u5b50\u6811\u53ef\u4ee5\u901a\u8fc7\u8fd9\u4e2a\u9009\u4e2d\u8282\u70b9\u88ab\u5b8c\u5168\u8986\u76d6\uff0c\u6240\u4ee5\\(f[u]=-\\infty\\),\u8868\u793a\u4e0d\u5bf9\u7236\u8282\u70b9\u7684\\(f\\)\u4ea7\u751f\u5f71\u54cd</p> <p>2) \\(g[u]&gt;k\\)\uff0c\u8bf4\u660e\u5f53\u524d\u7684\u5b50\u6811\u4e0a\u7aef\u4e0d\u4f1a\u88ab\\(u\\)\u7684\u5b50\u5b59\u5b8c\u5168\u8986\u76d6\uff0c\u90a3\u4e48\u53ef\u4ee5\u66f4\u65b0\u4e00\u4e0b\\(f[u]\\)\u4ea4\u7ed9\\(u\\)\u7684\u7236\u4eb2\u5904\u7406\uff0c\u8fd9\u6837\u4fdd\u8bc1\u91cd\u53e0\u6700\u5c0f\u3002\\(f[u]=\\max(f[u],0)\\)\uff0c\u8868\u793a\u5982\u679c\u6ca1\u6709\u672a\u8986\u76d6\u5173\u952e\u8282\u70b9\u5728\u5b50\u6811\u91cc\u5c31\u53ea\u7b97\u5b83\u81ea\u5df1\u3002</p> <p>3) \\(f[u]==k\\),\u8bf4\u660e\u5f53\u524d\u8282\u70b9\u6070\u597d\u80fd\u7528\u6700\u5c0f\u91cd\u53e0\u8986\u76d6\u6574\u9897\u5b50\u6811\uff0c\u5e76\u4e14\u56e0\u4e3a\u8fd9\u4e2a\u66f4\u65b0\u662f\u5728\u56de\u6eaf\u8fc7\u7a0b\u4e2d\u7684\uff0c\u8981\u5f80\u4e0a\u8d70\uff0c\u5982\u679c\u4e0d\u9009\u8fd9\u4e2a\u8282\u70b9\uff0c\u540e\u9762\u5c31\u65e0\u6cd5\u8986\u76d6\u6240\u6709\u8282\u70b9\uff0c\u6240\u4ee5\u5f3a\u5236\u9009\\(u\\),\\(f[u]=-\\infty,g[u]=0,++tot\\)</p> <p>\u6700\u540e\u7279\u5224\u4e00\u4e0b\u6839\u8282\u70b9\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=3e5+10,INF=1e9+10;\nint f[N],g[N],head[N],a[N];\nint cnt,n,m,u,v,tot;\nstruct node{\n    int v,nxt;\n}e[N&lt;&lt;1];\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid dfs(int u,int p,int k){\n    f[u]=-INF,g[u]=INF;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p)continue;\n        dfs(v,u,k);\n        f[u]=max(f[u],f[v]+1);\n        g[u]=min(g[u],g[v]+1);\n    }\n    if(f[u]+g[u]&lt;=k) f[u]=-INF;\n    if(g[u]&gt;k &amp;&amp; a[u]) f[u]=max(f[u],0);\n    if(f[u]==k) f[u]=-INF,g[u]=0,++tot;\n}\nbool check(int k){\n    tot=0;\n    dfs(1,0,k);\n    if(f[1]&gt;=0) ++tot;\n    return tot&lt;=m;\n}\nint main(){\n    memset(head,-1,sizeof head);cnt=-1;\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n    for(int i=1;i&lt;n;++i)scanf(\"%d%d\",&amp;u,&amp;v),add(u,v),add(v,u);\n    int l=0,r=n,ans=INF;\n    while(l&lt;=r){\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)) r=mid-1,ans=mid;     \n        else l=mid+1;\n    }\n    printf(\"%d\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E6%A0%91%E7%9A%84%E7%9B%B4%E5%BE%84/","title":"\u6811\u7684\u76f4\u5f84","text":"<p>\u6709\u4e00\u4e2a\u91cd\u8981\u6027\u8d28:\u5230\u6811\u4e0a\u7684\u70b9\u7684\u8ddd\u79bb\u6700\u5927\u7684\u70b9\u4e00\u5b9a\u662f\u76f4\u5f84\u7684\u4e24\u4e2a\u7aef\u70b9\u4e4b\u4e00\u3002</p> <p>P1099 &amp; 2491</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u76f4\u5f84\u4e0a\u7684\u8def\u5f84\u6765\u8bf4\uff0c\u4e24\u4e2a\u7aef\u70b9\u7684\u6700\u8fdc\u8ddd\u79bb\u4e00\u5b9a\u662f\u5230\u5bf9\u5e94\u7684\u76f4\u5f84\u7aef\u70b9\u7684\u8ddd\u79bb(\u6ce8\u610f\u662f\u5bf9\u5e94\u7684\u76f4\u5f84\u7aef\u70b9\uff0c\u4e0d\u80fd\u7ecf\u8fc7\u8def\u5f84)\u3002\u800c\u8fd9\u4e2a\u6700\u5927\u503c\u4e0d\u4e00\u5b9a\u5c31\u662f\u6700\u7ec8\u7b54\u6848\uff0c\u56e0\u4e3a\u8def\u5f84\u4e0a\u7684\u5176\u4ed6\u70b9\u4e5f\u6709\u8d21\u732e\u3002</p> <p>\u8bbe\\(f[i]\\)\u8868\u793a\u4e0d\u7ecf\u8fc7\u76f4\u5f84\u7684\uff0c\u5230\\(i\\)\u53f7\u70b9\u6700\u8fdc\u7684\u8ddd\u79bb\u3002</p> <p>\u90a3\u4e48\u8def\u5f84\u4e0a\u7684\u70b9\u5c31\u662f\u8fd9\u4e9b\u70b9\u7684\\(f[i]\\)\u3002</p> <p>\u53c8\u56e0\u4e3a\u6bcf\u6b21\u5c06\u4e00\u4e2a\u70b9\u5f52\u5e76\u4e3a\u8def\u5f84\u540e\uff0c\u5b83\u7684\u7b54\u6848\u53ea\u4f1a\u7531\u5230\u76f4\u5f84\u53d8\u4e3a\\(f[i]\\)\uff0c\u5373\u4e0d\u4f1a\u518d\u53d8\u5927\uff0c\u6240\u4ee5\u53ef\u4ee5\u8bc1\u660e\u8def\u5f84\u957f\u5ea6\u8d8a\u957f\u8d8a\u597d\uff0c\u5373\u521a\u597d\u5c0f\u4e8e\u7b49\u4e8e\\(s\\)\u3002</p> <p>\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u7528\u5c3a\u53d6\u6cd5+\u5355\u8c03\u961f\u5217\uff0c\u6bcf\u6b21\u679a\u4e3e\u4e00\u4e2a\u5de6\u7aef\u70b9\\(i\\)\uff0c\u8ba1\u7b97\u51fa\u957f\u5ea6\\(\\leq s\\)\u7684\u53f3\u7aef\u70b9\\(j\\)\uff0c\u901a\u8fc7\u5355\u8c03\u961f\u5217\u6c42\u51fa\u533a\u95f4\\(f[i]\\)\u7684\u6700\u5927\u503c\uff0c\u4e0e\u4e24\u7aef\u70b9\u7684\u76f4\u5f84\u8ddd\u79bb\u6bd4\u8f83\u5373\u53ef\u3002</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;queue&gt;\n#define int long long \nusing namespace std;\nconst int N=4e5+10,INF=1e13;\nint n,s,u,v,w,cnt,top,maxn,S,T,D,tmp;\nint head[N],dis[N],d[N],stk[N],ans[N],fa[N],f[N],vis[N];\nstruct edge{\n    int v,w,nxt;\n}e[N&lt;&lt;1];\nstruct node{\n    int num,dis;\n    node(int Num,int Dis){\n        num=Num,dis=Dis;\n    }\n};\nvoid add(int u,int v,int w){\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid dfs(int u,int p,int &amp;a){\n    if(dis[u]&gt;maxn)maxn=dis[u],a=u;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;if(v==p)continue;\n        dis[v]=dis[u]+w;\n        dfs(v,u,a);\n    }\n}\nvoid _dfs(int u,int p){\n    stk[++top]=u;\n    if(u==T){\n        ans[0]=top;\n        for(int i=1;i&lt;=top;++i)ans[i]=stk[i];\n        return; \n    }\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;if(v==p)continue;\n        fa[v]=u;\n        _dfs(v,u);\n    }\n    --top;\n}\nvoid __dfs(int u,int p){\n    maxn=max(maxn,dis[u]);\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;if(v==p || vis[v])continue;\n        dis[v]=dis[u]+w;\n        __dfs(v,u);\n    }\n}\nvoid init(){\n    for(int i=T;i;i=fa[i])vis[i]=1;\n    for(int i=T;i;i=fa[i]){// get every node on diameter T~S\n        maxn=0;dis[i]=0;__dfs(i,0);f[i]=maxn;\n    }\n}\ninline int Abs(int x){return x&gt;=0?x:-x;}\nvoid two_pointers(){\n    deque&lt;node&gt; q;\n    int i=T,j=T,lst=T,ans=INF,tmp=0;\n    for(i=T;i;i=fa[i]){\n        while(fa[j] &amp;&amp; Abs(d[i]-d[fa[j]])&lt;=s)j=fa[j];   \n        for(int k=fa[lst];k!=fa[j];k=fa[k]){\n            while(!q.empty() &amp;&amp; q.back().dis&lt;f[k]) q.pop_back();\n            q.push_back(node(k,f[k]));\n        }\n        tmp=0;\n        if(!q.empty())tmp=q.front().dis;\n        tmp=max(tmp,max(Abs(d[T]-d[i]),Abs(d[j]-d[S])));\n        ans=min(ans,tmp);\n\n        if(!q.empty() &amp;&amp; q.front().num==i)q.pop_front();//\u6ce8\u610f\u4e00\u5b9a\u662f\u53ea\u6709num==i\u65f6\u624d\u9700\u8981\u5f39\u51fa\u5de6\u7aef\u70b9\u3002\n        lst=j;\n    }\n    printf(\"%lld\",ans);\n}\nsigned main(){\n    memset(head,-1,sizeof head);cnt=-1;\n    scanf(\"%lld%lld\",&amp;n,&amp;s);\n    for(int i=1;i&lt;n;++i){\n        scanf(\"%lld%lld%lld\",&amp;u,&amp;v,&amp;w);\n        add(u,v,w),add(v,u,w);\n    }\n    maxn=0,S=0;\n    dis[1]=0;dfs(1,0,S);\n    maxn=0,T=0;\n    dis[S]=0;dfs(S,0,T);\n\n    D=maxn;\n    top=0;_dfs(S,0);\n    for(int i=1;i&lt;=ans[0];++i)d[ans[i]]=dis[ans[i]];\n    init();\n    two_pointers();\n    return 0;\n} \n</code></pre> ~~STL\u5c45\u7136\u6ca1\u7206\u70b8!?\u770b\u6765\u7ebf\u6027\u590d\u6742\u5ea6\u7684\u9898\u505a\u8d77\u6765\u8fd8\u662fSTL\u6bd4\u8f83\u9999~~</p>"},{"location":"my%20past/OI/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86/","title":"\u6811\u94fe\u5256\u5206","text":"<p>P4315</p> <p>\u7ebf\u6bb5\u6811+\u6811\u94fe\u5256\u5206\u6a21\u677f\u9898\u3002</p> <p>\u6ce8\u610f\u8981\u5c06\u8fb9\u8f6c\u5316\u5230\u70b9\u4e0a\u3002</p> <ul> <li>\u8fd8\u6709\u8981\u6ce8\u610fdfs\u5e8f\u4e0d\u80fd\u5728dfs1\u4e2d\u6c42\uff0c\u4e0d\u7136\u7684\u8bdddfs\u9700\u7684\u987a\u5e8f\u5c31\u4e0d\u662f\u5148\u91cd\u513f\u5b50\u518d\u8f7b\u513f\u5b50\u4e86\u3002 <pre><code>void dfs1(int u,int f){\n    sz[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==f)continue;\n        dep[v]=dep[u]+1;\n        fa[v]=u;\n        p[v]=w;\n        dfs1(v,u);\n        sz[u]+=sz[v];\n        if(sz[son[u]]&lt;sz[v])son[u]=v;\n    }\n    return;\n}\nvoid dfs2(int u,int t){\n    id[u]=++tot; \n    top[u]=t;\n    a[tot]=p[u];\n    if(son[u])dfs2(son[u],t);\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==fa[u] || v==son[u])continue;\n        dfs2(v,v);\n    }\n    return;\n}\n</code></pre></li> <li> <p>\u7ed3\u8bba:</p> </li> <li> <p>\\(\u6811\u94fe\u5256\u5206\u65f6dfs\u5e8f\u4e00\u5b9a\u8981\u5728dfs2\u4e2d\u6c42\uff1b\\)</p> </li> <li> <p>\\(\u5f53\u7ebf\u6bb5\u6811\u540c\u65f6\u6d89\u53caop1:\"\u5c06[l,r]\u52a0k\"\u548cop2:\"\u5c06[l,r]\u6539\u4e3ak\"\u65f6\uff0c\u8981\u6ce8\u610f\u7ef4\u62a4\u7684\u987a\u5e8f\uff0c\u5148op2\u518dop1,\u5e76\u4e14lazytag\u8981\u5206\u522b\u7ef4\u62a4\u3002\\)</p> </li> </ul>"},{"location":"my%20past/OI/%E6%A8%A1%E6%8B%9F/","title":"\u6a21\u62df","text":"<p>P5682</p> <p>\u5148\u5c06\\(a\\)\u6570\u7ec4\u6392\u4e2a\u5e8f\u5e76\u53bb\u91cd\u3002</p> <p>\u5bf9\u4e8e\u6700\u5927\u503c\uff0c\u53ea\u80fd\u662f\\(a_{n-1} mod a_n\\)</p> <p>\u800c\u6b21\u5927\u503c\u53ef\u4ee5\u662f \\(a_{n-2}moda_n\\)\u6216\\(a_nmoda_{n-1}\\),\u6240\u4ee5\u53ea\u9700\u8981\u5224\u65ad\u4e00\u4e0b\u8fd9\u4e24\u4e2a\u503c\u5373\u53ef\u3002</p> <p>P3951</p> <p>\u5047\u8bbe\u6709k\u4e2ab\uff0c\u90a3\u4e48kb mod a\u90fd\u4f1a\u8986\u76d6\u6570\u8f740\\~a-1\u4e2d\u4e00\u4e2a\u70b9\uff0c\u800c\u6700\u540e\u4e00\u4e2a\u70b9\u88ab\u8986\u76d6\u65f6\uff0c\u8fd9\u4e2a\u6570\u5c31\u662f(a-1)b\uff0c\u5373k=a-1.</p> <p>\u6240\u4ee5\uff0c\u5728\u8fd9\u4e2a\u6570\u8f74\u4e0a\u8986\u76d6\u7684\u70b9\u7684\u4e0a\u4e00\u4e2a\u672a\u8986\u76d6\u7684\u70b9\u5c31\u662f(a-1)* b-a.</p> <p>P2822</p> <p>\u56e0\u4e3a\u6bcf\u4e2a\u7ec4\u5408\u6570\u90fd\u662f\u6768\u8f89\u4e09\u89d2\u91cc\u7684\u4e00\u4e2a\u6570\uff0c\u6240\u4ee5\u76f4\u63a5\u6253\u51fa\u6768\u8f89\u4e09\u89d2\u518d\u8ba1\u7b97\u7b54\u6848\u5373\u53ef\u3002</p> <p>P1627</p> <p>\u5c06\u6bcf\u4e2a\u5927\u4e8eb\u7684\u6570\u770b\u62101\uff0c\u5c0f\u4e8eb\u7684\u6570\u770b\u6210-1\uff0c\u90a3\u4e48\u53ea\u8981\u6c42\u51fa\u6240\u6709\u5305\u542bb\u5e76\u4e14\u548c\u4e3a0\u7684\u533a\u95f4\u4e2a\u6570\u5373\u53ef\u3002 <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#define int long long \nusing namespace std;\nconst int N=2e5+10;\nint t[N],s[N],a[N],b[N];\nint n,m,pos;\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%lld\",&amp;t[i]);\n        if(t[i]&gt;m) s[i]=1;  \n        else if(t[i]&lt;m) s[i]=-1;\n        else s[i]=0,pos=i;\n    }   \n    int tmp=0;\n    for(int i=pos-1;i&gt;=1;--i){\n        tmp+=s[i];\n        if(tmp&gt;=0)a[tmp]++;\n        else a[tmp+n+n]++;\n    }\n    tmp=0;\n    for(int i=pos+1;i&lt;=n;++i){\n        tmp+=s[i];\n        if(tmp&gt;=0)b[tmp]++;\n        else b[tmp+n+n]++;\n    }\n    int ans=1+a[0]+b[0]+a[0]*b[0];\n    for(int i=1;i&lt;=n;++i){\n        if(a[n+n-i]&gt;0)ans+=a[n+n-i]*b[i];\n    }\n    for(int i=1;i&lt;=n;++i){\n        if(a[i]&gt;0)ans+=a[i]*b[n+n-i];\n    }\n    printf(\"%lld\",ans);\n    return 0;\n} \n/*\n7 4\n5 7 2 4 3 1 6 \n7 3\n6 4 2 3 1 5 7\n7 2\n6 4 2 3 1 5 7\n*/\n</code></pre> ~~\u6240\u4ee5\u8fd9\u4e48\u6c34\u7684\u9898\u8fd8\u6709\u5199\u5b83\u7684\u5fc5\u8981\u5417~~</p>"},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/","title":"\u6b27\u62c9\u51fd\u6570","text":""},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_2","title":"\u6b27\u62c9\u51fd\u6570\u7684\u5b9a\u4e49","text":"<p>\u5c31\u662f\u5bf9\u4e8e\u4e00\u4e2a\u6b63\u6574\u6570\\(n\\)\uff0c\u5c0f\u4e8e\\(n\\)\u4e14\u548c\\(n\\)\u4e92\u8d28\u7684\u6b63\u6574\u6570\uff08\u5305\u62ec\\(1\\)\uff09\u7684\u4e2a\u6570\uff0c\u8bb0\u4f5c\\(\\phi(n)\\) \u3002</p> \\[\\phi(x)=x\\prod_{i=1}^n(1-\\frac{1}{p_i})\\]"},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_3","title":"\u7ebf\u6027\u7b5b\u6c42\u6b27\u62c9\u51fd\u6570","text":""},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#1-on","title":"1.\u6027\u8d28\u6cd5(\u6b27\u62c9\u7b5b) O(n)","text":"<p>1) $\\phi(i j)_ {j|i}=\\phi(i) j $ 2) \\(\\phi(i* j)_ {j\u22a5i}=\\phi(i)* \\phi(j)\\) <pre><code>    euler[1]=0;\n    for(int i=1;i&lt;=n;++i)v[i]=1;\n    for(int i=2;i&lt;=n;++i){\n        if(v[i]==1){\n            p[++m]=i;\n            euler[i]=i-1;\n        }\n        for(int j=1;j&lt;=m;++j){\n            if(p[j]*i&gt;n)break;\n            v[p[j]*i]=0;\n            if(i%p[j]==0){\n                euler[i*p[j]]=euler[i]*p[j];break;\n            }else{\n                euler[i*p[j]]=euler[i]*euler[p[j]];\n            }\n        }\n    }\n</code></pre></p>"},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#2-onlogn","title":"2.\u5b9a\u4e49\u6cd5 O(nlogn)","text":"<pre><code>    phi[i]=1;\n    for(int i=2;i&lt;=n;++i){\n        if(!phi[i]){//i\u662f\u4e2a\u8d28\u6570\uff0c\u5219\u8981\u679a\u4e3e\u5b83\u7684\u500d\u6570\uff0c\u66f4\u65b0\u8fd9\u4e9b\u500d\u6570j\n            for(int j=i;j&lt;=n;j+=i){\n                if(!phi[j])phi[j]=j;//\u521d\u59cb\u5316\u4e3aj\n                phi[j]=phi[j]/i*(i-1);//i\u662fj\u7684\u4e00\u4e2a\u8d28\u56e0\u5b50\n            }\n        }\n    }\n</code></pre>"},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_4","title":"\u6b27\u62c9\u51fd\u6570\u7684\u6027\u8d28\uff1a","text":"<p>1) \u82e5\\(p\\)\u4e3a\u8d28\u6570\uff0c\u5219\\(\\phi(p)=p-1\\)</p> <p>2) \u82e5\\(n=p^k\\)\u4e14\\(p\\)\u4e3a\u8d28\u6570\uff0c\u5219\\(\\phi(n)=p^k-p^{k-1}\\)</p> <p>3) \u82e5\\(m\u22a5n\\)\uff0c\u6709\\(\\phi(m* n)= \\phi(m)* \\phi(n)\\); \u82e5\\(m|n\\)\uff0c\u6709\\(\\phi(m* n) = m * \\phi(n)\\)</p> <p>4) \u6b27\u62c9\u5b9a\u7406\uff0c\u82e5\\(m\u22a5a\\),\u5219\\(a^{\\phi(m)}\\equiv 1\\pmod m\\)</p> <p>5) \u5f53\\(n\\)\u4e3a\u5947\u6570\u65f6\uff0c\\(\\phi(2n)=\\phi(n)\\)</p> <p>6) \\(n=\\sum_{d|n}\\phi(d)\\)</p>"},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#_5","title":"\u7ed9\u51fa\u5176\u4e2d\u4e00\u4e9b\u5b9a\u7406\u7684\u8bc1\u660e\uff1a","text":""},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#1","title":"\u6027\u8d281","text":"<p>\u56e0\u4e3a\\(p\\)\u4e3a\u8d28\u6570\uff0c\u6240\u4ee5\u6240\u6709\u5c0f\u4e8e\u4ed6\u7684\\(p-1\\)\u4e2a\u6570\u90fd\u4e0e\u5b83\u4e92\u7d20\u3002</p>"},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#2","title":"\u6027\u8d282","text":"<p>\\(n\\)\u53ea\u6709\u4e00\u4e2a\u8d28\u56e0\u6570\\(p\\),\u6240\u4ee5\u6839\u636e\u5b9a\u4e49\\(\\phi(n)=n(1-\\frac1p)=p^k-p^{k-1}\\)</p>"},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#3","title":"\u6027\u8d283","text":"<p>1.</p> <p>\u56e0\u4e3a\\(m\u22a5n\\),\u6240\u4ee5\\(m\\)\u4e0e\\(n\\)\u65e0\u516c\u5171\u8d28\u56e0\u6570</p> <p>\u6240\u4ee5\u8bbe\\(m\\)\u7531\\(a_m\\)\u4e2a\u8d28\u56e0\u6570\uff0c\\(n\\)\u7531\\(a_n\\)\u4e2a\u8d28\u56e0\u6570\u3002</p> \\[\\therefore \\phi(m)* \\phi(n)=m * n * \\prod_{i=1}^{a_m}(1-\\frac{1}{p_i}) * \\prod_{i=1}^{a_n}(1-\\frac{1}{p_i})\\\\ =(m* n) * \\prod_{i=1}^{a_m+a_n}(1-\\frac{1}{p_i}) =\\phi(m* n) \\] <p>2.</p> <p>\u56e0\u4e3a\\(m|n\\),\u6240\u4ee5\\(n\\)\u5305\u542b\u4e86\\(m\\)\u7684\u6240\u6709\u8d28\u56e0\u6570\u3002</p> <p>\u6240\u4ee5\u8bbe\\(n\\)\u542b\u6709\u7684\u76f8\u540c\u7684\u8d28\u56e0\u6570\u4e3a\\(a_n\\),\u5219\\(m * n\\)\u6240\u542b\u8d28\u56e0\u6570\u4e0e\\(n\\)\u5b8c\u5168\u76f8\u540c.(\u4e0d\u8ba1\u8d28\u56e0\u5b50\u4e2a\u6570)</p> <p>$$\\therefore \\phi(m * n)=m * n  * \\prod_{i=1}^{a_n}(1-\\frac{1}{p_i}) \\</p> <p>=m*\\phi(n) $$</p>"},{"location":"my%20past/OI/%E6%AC%A7%E6%8B%89%E5%87%BD%E6%95%B0/#6","title":"\u6027\u8d286","text":"<ol> <li>\u8bc1\\(F(n)=\\sum_{d|n}\\phi(d)\\)\u4e3a\u79ef\u6027\u51fd\u6570</li> </ol> <p>\u8bbe $ F(m) F(n)=\\sum_{i|m}\\phi(i) * \\sum_{j|n}\\phi(j)= \\phi(i_1) \\phi(j_1)+\\phi(i_1) \\phi(j_2)+...+\\phi(i_{k_m}) \\phi(j_{k_n}) $</p> <p>\u56e0\u4e3a\\(m\u22a5n\\)\uff0c\u6240\u4ee5\u6240\u6709\u7684\\(i\\)\u4e0e\\(j\\)\u4e92\u8d28\uff0c\u6240\u4ee5\u539f\u5f0f\\(=\\phi(i_1* j_1)+...+\\phi(i_{k_m}* \\phi(j_{k_n}))\\)</p> <p>\u53c8\u56e0\u4e3a\\(i_1* j_1,...,i_{k_m}* j_{k_n}\\)\u6784\u6210\u4e86\\(m* n\\)\u6240\u6709\u56e0\u6570\uff0c\u6240\u4ee5\\(F(m) * F(n)=F(m* n)\\).</p> <p>2.\u8bc1\u660e\\(F(p^k)=\\sum_{d|p^k}\\phi(d)\\)</p> <p>\u56e0\u4e3a\\(p^k\\)\u7684\u56e0\u6570\u53ea\u6709\\(1,p,p^2,...,p^k\\).</p> <p>\u6240\u4ee5\\(F(p^k)=\\phi(1)+\\phi(p)+...+\\phi(p^k)=1+p-1+p^2-p+...+p^k-p^{k-1}=p^k\\)</p> <ol> <li>\u63a8\u5e7f</li> </ol> <p>\u56e0\u4e3a\u5bf9\u4e8e\u4efb\u610f\\(p\\)\u4e3a\u8d28\u6570\uff0c\\(F(p^k)\\)\u7b26\u5408\u6761\u4ef6\uff0c\u800c\\(F\\)\u4e3a\u79ef\u6027\u51fd\u6570\uff0c\u6240\u4ee5\u53ef\u4ee5\u63a8\u5e7f\u5230\u4efb\u610f\u6b63\u6574\u6570\u3002</p>"},{"location":"my%20past/OI/%E7%82%B9%E5%88%86%E6%B2%BB/","title":"\u70b9\u5206\u6cbb","text":""},{"location":"my%20past/OI/%E7%82%B9%E5%88%86%E6%B2%BB/#_2","title":"\u4e3b\u8981\u601d\u60f3","text":"<p>\u56e0\u4e3a\u5206\u6cbb\u540e\uff0c\u6211\u4eec\u5e0c\u671b\u5c42\u6570\u5c3d\u91cf\u5c0f\uff0c\u4e5f\u5c31\u662f\u9009\u62e9\u6240\u6709\u5b50\u6811\u5c3d\u91cf\u5e73\u8861\u7684\u70b9\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8d2a\u5fc3\u7684\u53d6\u91cd\u5fc3\u3002\u53ef\u4ee5\u8bc1\u660e\uff0c\u56e0\u4e3a\u91cd\u5fc3\u7684\u5b50\u6811\u4e0d\u8d85\u8fc7\\(\\frac n2\\),\u6240\u4ee5\u5c42\u6570\u4e0d\u8d85\u8fc7\\(O(\\log_2n)\\)</p> <p>\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e00\u5c42\u7684\u6bcf\u4e2a\u91cd\u5fc3\uff0c\u6211\u4eec\u9700\u8981\u6c42\u51fa\u5f53\u524d\u91cd\u5fc3\u6240\u5728\u5b50\u6811\u7684\u6240\u6709\u8ddd\u79bb\uff0c\u53ef\u4ee5\u7528\u6876\u8bb0\u5f55\uff1b\u800c\u7edf\u8ba1\u70b9\u5bf9\u65f6\uff0c\u8fd9\u91cc\u9762\u5305\u62ec\u4e86\u4e24\u4e2a\u70b9\u5728\u540c\u4e00\u9897\u5b50\u6811\u7684\u60c5\u51b5(\u4e0d\u662f\u4e00\u6761\u7b80\u5355\u8def\u5f84)\uff0c\u90a3\u4e48\u6211\u4eec\u8fd0\u7528\u5bb9\u65a5\u539f\u7406\uff0c\u51cf\u53bb\u5206\u88c2\u51fa\u7684\u5b50\u6811\u4e2d\u7684\u8d21\u732e\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=2e4+10,K=2e6+10;\nint ans[K],dis[N],head[N],sz[N],vis[N],maxp[N],d[N];\nint n,m,cnt,u,v,w,k,tot;\nstruct node{\n    int v,w,nxt;\n}e[N&lt;&lt;1];\nvoid add(int u,int v,int w){\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid __dfs(int u,int p){\n    sz[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        __dfs(v,u);\n        sz[u]+=sz[v];\n    }\n}\nvoid dfs(int u,int p,int S,int &amp;rt,int &amp;tmp){\n    maxp[u]=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        dfs(v,u,S,rt,tmp);\n        maxp[u]=max(maxp[u],sz[v]);\n    }\n    maxp[u]=max(maxp[u],S-sz[u]);\n    if(maxp[u]&lt;tmp) tmp=maxp[u],rt=u;\n}\nvoid _dfs(int u,int p){\n    d[++tot]=dis[u];\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        dis[v]=dis[u]+w;\n        _dfs(v,u); \n    }\n}\nvoid solve(int u,int len,int t){\n    dis[u]=len;tot=0;\n    _dfs(u,0);\n    for(int i=1;i&lt;=tot;++i)\n        for(int j=1;j&lt;=tot;++j)\n            if(i!=j &amp;&amp; d[i]+d[j]&lt;K) ans[d[i]+d[j]]+=t;\n}\nvoid div(int u){\n    solve(u,0,1);vis[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(vis[v])continue;\n        solve(v,w,-1);\n        int rt=0,tmp=K;\n        __dfs(v,u);\n        dfs(v,u,sz[u],rt,tmp);\n        div(rt);\n    }\n}\nint main(){\n    memset(head,-1,sizeof head);cnt=-1;\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;n;++i) scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w),add(u,v,w),add(v,u,w);\n    int rt=0,tmp=K;\n    __dfs(1,0);\n    dfs(1,0,n,rt,tmp);\n    div(rt);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%d\",&amp;k);\n        if(ans[k]&gt;0 || k==0) printf(\"Yes\\n\");\n        else printf(\"No\\n\");\n    }\n    //for(int i=0;i&lt;=10;++i) cout&lt;&lt;ans[i]&lt;&lt;\" \";\n\n    return 0;\n} \n</code></pre> <p>~~\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\uff0cbzoj1316:Accepted,luoguP3806:Time Limit Exceeded~~</p> <p>\u4e0b\u9762\u662f\u5e38\u89c1\u7684\u95ee\u9898.</p> <p>1) \u6709\u5173\u9519\u8bef\u7684\u6c42\u91cd\u5fc3\u5bf9\u590d\u6742\u5ea6\u7684\u5f71\u54cd</p> <p>\u6bcf\u6b21\u6c42\u4e2d\u5fc3\u4e4b\u524d\u4e00\u5b9a\u8981\u5148\\(dfs\\)\u4e00\u904d\u6574\u9897\u5b50\u6811\uff0c\u6c42\u51fa\u5927\u5c0f\u540e\u518d\u7528\u8fd9\u4e2a\u8282\u70b9\u6570\u53d6\u66f4\u65b0\u91cd\u5fc3\u3002\u4e0d\u7136\u53ef\u80fd\u4f1a\u51fa\u73b0\u8fd9\u6837\u7684\u60c5\u51b5\uff1a</p> <p><pre><code>//\u5bf9\u4e8e\u8fd9\u6837\u4e00\u9897\u6811\n11//n\n6 7 1//u v w\n6 8 1\n7 9 1\n7 10 1\n8 11 1\n1 2 1\n1 3 1\n2 4 1\n2 5 1\n3 6 1\n</code></pre> \u5728\u5206\u6cbb\u5230\\(6\\)\u53f7\u70b9\u65f6\uff0c\u56e0\u4e3a\u6b64\u65f6\\(sz[3]=7\\),\u6240\u4ee5\u6c42\u51fa\u7684\u91cd\u5fc3\u4e3a\\(1\\)\uff1b\u800c\u4e8b\u5b9e\u4e0a\\(sz[3]=5\\)\uff0c\u6c42\u51fa\u91cd\u5fc3\u4e3a\\(2\\).</p> <p>2) \u6709\u5173\u5e38\u89c4\u505a\u6cd5\u9519\u8bef\u7684\u590d\u6742\u5ea6</p> <p>\u672c\u6765\u5206\u6cbb\u7684\u5c42\u6570\u662f\u4e25\u683c\u5c0f\u4e8e\\(O(\\log n)\\)\u8fd9\u4e2a\u4e0a\u754c\u7684\uff0c\u6bcf\u4e00\u5c42\u6700\u591a\u904d\u5386\u4e00\u904d\u6240\u6709\u8282\u70b9\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\\(O(n\\log n)\\).\u4f46\u662f,\u6734\u7d20\u7684\u7edf\u8ba1\u6709\u4e2a\\(O(n^2)\\)\u7684\u7edf\u8ba1\uff0c\u5bf9\u4e8e\u83ca\u82b1\u56fe\u8fd9\u6837\u5b50\u8282\u70b9\u5de8\u591a\u7684\u6570\u636e\u4e00\u5b9a\u4f1aT.\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u91c7\u7528\u53cc\u6307\u9488\u7684\u65b9\u5f0f\u7edf\u8ba1\u3002</p> <p>\u5148\\(dfs\\)\u4e00\u8fb9\u6c42\u51fa\u5f53\u524d\u5b50\u6811\u4e2d\u8282\u70b9\u6df1\u5ea6\\(d[i]\\),\u6240\u6709\u8282\u70b9\u6807\u53f7\\(a[i]\\),\u4ee5\u53ca\u8282\u70b9\u5904\u5728\u54ea\u4e2a\u5b50\u6811\u4e2d\\(b[i]\\)\u3002</p> <p>\u5bf9\u4e8e\u6df1\u5ea6\u4ece\u5c0f\u5230\u5927\u6392\u5e8f(\u4e0d\u8981\u5fd8\u8bb0\u52a0\u5165\u91cd\u5fc3\\(u\\)),\u7136\u540e\u5bf9\u4e8e\u4e0d\u540c\u7684\u8be2\u95ee\uff0c\\(l=1,r=tot\\)\u5730\u626b\u4e00\u904d\uff0c\u6ce8\u610f\u8981\u6ee1\u8db3\\(b[a[l]]\\not=b[a[r]]\\),\u53bb\u6389\u4e86\u5bb9\u65a5\u3002\u5206\u6cbb+\u6392\u5e8f\u590d\u6742\u5ea6\\(O(n\\log^2n)\\)\uff0c\u5206\u6cbb+\u53cc\u6307\u9488\u590d\u6742\u5ea6\\(O(nm\\log n)\\),\u603b\\(O(n\\log^2n + nm\\log n)\\)</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=1e4+10,K=1e7+10;\nint query[N],head[N],sz[N],vis[N],maxp[N],d[N],a[N],b[N];\nint n,m,cnt,u,v,w,k,tot;\nbool ans[K];\nbool cmp(int x,int y){\n    return d[x]&lt;d[y];\n}\nstruct node{\n    int v,w,nxt;\n}e[N&lt;&lt;1];\nvoid add(int u,int v,int w){\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid __dfs(int u,int p){\n    sz[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        __dfs(v,u);\n        sz[u]+=sz[v];\n    }\n}\nvoid dfs(int u,int p,int S,int &amp;rt,int &amp;tmp){\n    maxp[u]=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        dfs(v,u,S,rt,tmp);\n        maxp[u]=max(maxp[u],sz[v]);\n    }\n    maxp[u]=max(maxp[u],S-sz[u]);\n    if(maxp[u]&lt;tmp) tmp=maxp[u],rt=u;\n}\nvoid _dfs(int u,int p,int dis,int P){\n    a[++tot]=u;d[u]=dis;b[u]=P;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        _dfs(v,u,dis+w,P); \n    }\n}\nvoid solve(int u){\n    tot=0;\n    a[++tot]=u;\n    b[u]=u;d[u]=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(vis[v])continue;\n        _dfs(v,u,w,v);  \n    }\n    sort(a+1,a+tot+1,cmp);\n    for(int i=1;i&lt;=m;++i){\n        int l=1,r=tot;\n        if(ans[i]) continue;\n        while(l&lt;r){\n            //cout&lt;&lt;u&lt;&lt;\" \"&lt;&lt;i&lt;&lt;\": \"&lt;&lt;a[l]&lt;&lt;\" \"&lt;&lt;a[r]&lt;&lt;\" \"&lt;&lt;d[a[l]]&lt;&lt;\" \"&lt;&lt;d[a[r]]&lt;&lt;endl;\n            if(d[a[l]]+d[a[r]]&gt;query[i]) --r;\n            else if(d[a[l]]+d[a[r]]&lt;query[i]) ++l;\n            else if(b[a[l]]==b[a[r]]){\n                if(d[a[r]]==d[a[r-1]]) --r;\n                else ++l;\n            } \n            else {\n                ans[i]=1;break;\n            }\n        }\n    }\n}\nvoid div(int u){\n    vis[u]=1;solve(u);\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(vis[v])continue;\n        int rt=0,tmp=K;\n        __dfs(v,u);\n        dfs(v,u,sz[v],rt,tmp);\n        div(rt);\n    }\n}\nint main(){\n    memset(head,-1,sizeof head);cnt=-1;\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;n;++i) scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w),add(u,v,w),add(v,u,w);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%d\",&amp;query[i]);\n        if(!query[i]) ans[i]=1;\n    }\n    int rt=0,tmp=K;\n    __dfs(1,0);\n    dfs(1,0,sz[1],rt,tmp);\n    div(rt);\n    for(int i=1;i&lt;=m;++i){\n        if(ans[i]) printf(\"AYE\\n\");\n        else printf(\"NAY\\n\");\n    }\n    return 0;\n} \n\n/*\n7 1\n1 6 13 \n6 3 9 \n3 5 7 \n4 1 3 \n2 4 20 \n4 7 2 \n10\n\n6 4\n1 2 5\n1 3 7\n1 4 1\n3 5 2\n3 6 3\n0\n8\n13\n14\n\n\n11 1\n6 7 1\n6 8 1\n7 9 1\n7 10 1\n8 11 1\n1 2 1\n1 3 1\n2 4 1\n2 5 1\n3 6 1\n2\n*/\n</code></pre> ...\u7136\u800c\uff0c\u5bb9\u65a5\u771f\u7684\u6beb\u65e0\u7528\u6b66\u4e4b\u5730\u5417\uff1f</p> <p>P4178</p> <p>\u8fd9\u9053\u9898\u53ea\u6709\u4e00\u4e2a\u8be2\u95ee\uff0c\u7136\u800c\u5374\u53d8\u6210\\(\\leq k\\)\u5730\u70b9\u5bf9\u6570\u91cf\u3002\u8fd9\u65f6\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u5bb9\u65a5\u3002\u5f53\u7136\uff0c\u53cc\u6307\u9488\u662f\u5fc5\u9700\u7684\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u6b21\u5206\u6cbb\u8ba1\u7b97\u65f6\uff0c\u8fd8\u662f\u5c06\\(a[i]\\)\u6309\u7167\\(d[a[i]]\\)\u6392\u5e8f.\u7136\u540e\uff0c\u53cc\u6307\u9488\\(l=1,r=tot\\)\u4ece\u4e24\u5934\u5411\u4e2d\u95f4\u626b\u3002\u6bcf\u6b21\u6ee1\u8db3\\(d[a[l]]+d[a[r]]&lt;=k\\)\u65f6\u5c31\\(ans+=r-l\\).\u800c\u8fd9\u4e9b\u91cd\u590d\u7684\u70b9\u5bf9\u7528\u5bb9\u65a5\u5373\u53ef\u89e3\u51b3\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=4e4+10,K=2e4+10,INF=1e8+10;\nstruct edge{\n    int v,w,nxt;\n}e[N&lt;&lt;1];\nint head[N],sz[N],vis[N],maxp[N],a[N],b[N],d[N];\nint cnt,n,u,v,w,tot,ans,k;\nbool cmp(int x,int y){\n    return d[x]&lt;d[y];\n}\nvoid add(int u,int v,int w){\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid get_size(int u,int p){\n    sz[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_size(v,u);\n        sz[u]+=sz[v];\n    }\n}\nvoid get_root(int u,int p,int S,int &amp;rt,int &amp;tmp){\n    maxp[u]=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_root(v,u,S,rt,tmp);\n        maxp[u]=max(maxp[u],sz[v]);\n    }\n    maxp[u]=max(maxp[u],S-sz[u]);\n    if(maxp[u]&lt;tmp) tmp=maxp[u],rt=u;\n}\nvoid get_dis(int u,int p,int dis){\n    a[++tot]=u;\n    d[u]=dis;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_dis(v,u,dis+w);\n    }\n}\nint calc(int u,int len){\n    tot=0;get_dis(u,0,len);\n    sort(a+1,a+tot+1,cmp);\n    int l=1,r=tot,res=0;\n    while(l&lt;r){\n        while(d[a[l]]+d[a[r]]&gt;k &amp;&amp; l&lt;r) --r;\n        res+=r-l;\n        ++l;\n    }\n    return res;\n}\nvoid div(int u){\n    vis[u]=1;\n    ans+=calc(u,0);\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(vis[v]) continue;\n        ans-=calc(v,w);\n        int rt=0,tmp=INF;\n        get_size(v,u);\n        get_root(v,u,sz[v],rt,tmp);\n        div(rt);\n    }\n}\nint main(){\n    memset(head,-1,sizeof head);cnt=-1;\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;n;++i) scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w),add(u,v,w),add(v,u,w);\n    scanf(\"%d\",&amp;k);ans=0;\n\n    int rt=0,tmp=INF;\n    get_size(1,0);\n    get_root(1,0,sz[1],rt,tmp);\n    div(rt);\n\n    printf(\"%d\",ans);\n    return 0;\n}\n</code></pre> <p>P2634</p> <p>\u6811\u5f62\\(dp\\)\u53ef\u80fd\u4f1a\u66f4\u7b80\u5355\u4e00\u4e9b\uff0c\u4e0d\u8fc7\u70b9\u5206\u6cbb\u4e5f\u53ef\u505a\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=2e4+10,INF=1e8+10;\nstruct edge{\n    int v,w,nxt;\n}e[N&lt;&lt;1];\nint cnt,ans,n,u,v,w;\nint gcd(int a,int b){\n    if(a&lt;b) swap(a,b);\n    return !b?a:gcd(b,a%b);\n}\nint head[N],vis[N],sz[N],maxp[N],f[N],d[N];\nvoid add(int u,int v,int w){\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\n\nvoid get_size(int u,int p){\n    sz[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_size(v,u);\n        sz[u]+=sz[v];\n    }\n}\nvoid get_root(int u,int p,int S,int &amp;rt,int &amp;tmp){\n    maxp[u]=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_root(v,u,S,rt,tmp);\n        maxp[u]=max(maxp[u],sz[v]);\n    }\n    maxp[u]=max(maxp[u],S-sz[u]);\n    if(maxp[u]&lt;tmp) tmp=maxp[u],rt=u;\n}\nvoid get_dis(int u,int p,int dis){\n    d[u]=dis%3;\n    ++f[d[u]];\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_dis(v,u,(dis+w)%3);\n    }\n}\nint calc(int u,int len){\n    f[0]=f[1]=f[2]=0;\n    get_dis(u,0,len);\n    return f[0]*f[0]+f[1]*f[2]*2;\n}\nvoid div(int u){\n    vis[u]=1;ans+=calc(u,0);\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(vis[v]) continue;\n        ans-=calc(v,w);\n        int rt=0,tmp=INF;\n        get_size(v,u);\n        get_root(v,u,sz[v],rt,tmp);\n        div(rt);\n    }\n}\nint main(){\n    memset(head,-1,sizeof head);cnt=-1;\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;n;++i) scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w),add(u,v,w),add(v,u,w);\n    int rt=0,tmp=INF;\n    get_size(1,0);\n    get_root(1,0,sz[1],rt,tmp);\n    div(rt);\n    int g=gcd(ans,n*n);\n    printf(\"%d/%d\",ans/g,n*n/g);\n    return 0;\n}\n</code></pre> <p>P4149</p> <p>\u70b9\u5206\u6cbb\u7684\u88f8\u9898\uff0c\u4e0eP3806\u76f8\u4f3c\uff0c\u4e5f\u662f\u7528\u53cc\u6307\u9488\u7ef4\u62a4\u4e00\u4e0b\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt; \n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=2e5+10,INF=1e14;\n\nint n,k,u,v,rt,tmp,minn,tot,cnt,w;\nint head[N],sz[N],vis[N],maxp[N],d[N],a[N],b[N],c[N];\nstruct node{\n    int v,w,nxt;\n}e[N&lt;&lt;1];\nbool cmp(int x,int y){\n    return d[x]&lt;d[y];\n}\nvoid add(int u,int v,int w){\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid get_size(int u,int p){\n    sz[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_size(v,u);\n        sz[u]+=sz[v];\n    }\n}\nvoid get_dis(int u,int p,int dis,int dep,int P){\n    a[++tot]=u;d[u]=dis;b[u]=P;c[u]=dep;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_dis(v,u,dis+w,dep+1,P);\n    }\n}\nvoid get_root(int u,int p,int S,int &amp;rt,int &amp;tmp){\n    maxp[u]=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(v==p || vis[v])continue;\n        get_root(v,u,S,rt,tmp);\n        maxp[u]=max(maxp[u],sz[v]);\n    }\n    maxp[u]=max(maxp[u],S-sz[u]);\n    if(maxp[u]&lt;tmp) tmp=maxp[u],rt=u;\n}\nvoid calc(int u){\n    tot=0;a[++tot]=u;d[u]=0;b[u]=u;c[u]=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(vis[v]) continue;\n        get_dis(v,u,w,1,v);\n    }\n    sort(a+1,a+tot+1,cmp);\n    int l=1,r=tot;\n    while(l&lt;r){\n        if(d[a[l]]+d[a[r]]&gt;k) --r;\n        else if(d[a[l]]+d[a[r]]&lt;k) ++l;\n        else{\n            if(b[a[l]]!=b[a[r]]) minn=min(minn,c[a[l]]+c[a[r]]);\n            if(d[a[r]]==d[a[r-1]]) --r;\n            else ++l;           \n        }\n    }\n}\nvoid div(int u){\n    vis[u]=1;calc(u);\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v,w=e[i].w;\n        if(vis[v])continue;\n        rt=0,tmp=INF;\n        get_size(v,u);\n        get_root(v,u,sz[v],rt,tmp);\n        div(rt);\n    }\n    return;\n}\nsigned main(){\n    memset(head,-1,sizeof head);cnt=-1;minn=INF;\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    for(int i=1;i&lt;n;++i) scanf(\"%lld%lld%lld\",&amp;u,&amp;v,&amp;w),add(u+1,v+1,w),add(v+1,u+1,w);\n    rt=0,tmp=INF;\n    get_size(1,0);\n    get_root(1,0,sz[1],rt,tmp);\n    div(rt);\n\n    if(minn==INF) printf(\"-1\");\n    else printf(\"%lld\",minn);\n    return 0;\n}\n</code></pre> <p>~~\u7136\u540e\u4f60\u4f1a\u53d1\u73b0\uff0cWA#7~~</p> <p>\u770b\u4e86\u8ba8\u8bba\u533a\u624d\u660e\u767d\uff0c\u662f\u6392\u5e8f\u51fa\u4e86\u95ee\u9898\uff0c\u6539\u6210<code>return (d[x]==d[y])?c[x]&lt;c[y]:d[x]&lt;d[y]</code>\u5c31\u884c\u4e86\u3002</p> <p>\u8003\u8651\u4e00\u4e2a\u4e2d\u95f4\u72b6\u6001\u7684\\(hack\\)\u6570\u636e\u3002 <pre><code>d: 3 3 ... 5 5\nc: 6 4 ... 7 3\n</code></pre> \u90a3\u4e48\u6211\u4eec\u4f1a\u641c\u5230\u7684\u662f\\(6+3,6+7,4+7\\),\u5374\u6ca1\u6709\u641c\u5230\\(4+3\\),\u6240\u4ee5\u51fa\u9519\u4e86\u3002</p> <p>\u8bf4\u767d\u4e86\uff0c\u5728\\(d[i]\\)\u76f8\u7b49\u7684\u60c5\u51b5\u4e0b\uff0c\u6307\u9488\u4e0d\u4f1a\u56de\u9000\uff0c\u6b64\u65f6\u5fc5\u987b\u8981\u5c06\\(c[i]\\)\u6392\u5e8f\u3002</p>"},{"location":"my%20past/OI/%E7%8A%B6%E5%8E%8Bdp/","title":"\u72b6\u538bdp\u603b\u7ed3","text":""},{"location":"my%20past/OI/%E7%8A%B6%E5%8E%8Bdp/#_1","title":"\u7edf\u8ba1\u7b54\u6848\u7c7b","text":"<p>P1879</p> <p>\u975e\u5e38\u7ecf\u5178\u7684\u4e00\u9053\u5165\u95e8\u9898</p> <p>\u6ce8\u610f\u5224\u65ad\u662f\u5426\u5408\u6cd5\uff1a</p> <p>1.\u4e0e\u81ea\u5df1\u5224\u65ad\uff0c\u5fc5\u987b\u4e3a101010101 \u7b49\u7269\u76f8\u90bb1 \u7684\u4e32\uff0c\u5224\u65ad\u65b9\u6cd5\u4e3a\uff1a</p> <p><pre><code>!(s&amp;(s&lt;&lt;1)) &amp;&amp; !(s&amp;(s&gt;&gt;1))\n</code></pre> \u7ed3\u679c\u4e3a0\u5373\u53ef</p> <p>2.\u4e0e\u524d\u4e00\u884c\u5224\u65ad\uff0c\u76f4\u63a5\u4f5c\u4e0e\u76840\u5c31\u884c</p> <p>3.\u4e0e\u5730\u56fe\u5224\u65ad\uff0c\u5c06\u5730\u56fe\u53cd\u8f6c\u540e\u4f5c\u4e0e\u76840</p> <p>\u6700\u540e\u7b54\u6848=\\(\\sum dp[n][i]\\)</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=13,P=1e9;\nint n,m,M;\nint map[N][N];\nint f[N];\n//int state[1&lt;&lt;N];\nint dp[N][1&lt;&lt;N];\n\nsigned main() {\n    scanf(\"%lld%lld\",&amp;n,&amp;m);M=1&lt;&lt;m;\n    for(int i=1; i&lt;=n; ++i) {\n        for(int j=1; j&lt;=m; ++j) {\n            scanf(\"%lld\",&amp;map[i][j]);\n        }\n    }\n    for(int i=1; i&lt;=n; ++i) {\n        for(int j=1; j&lt;=m; ++j)f[i]=(f[i]&lt;&lt;1)+(1-map[i][j]);\n    }\n    for(int i=0;i&lt;M;++i)if(!(i&amp;(i&lt;&lt;1)) &amp;&amp; !(i&amp;(i&gt;&gt;1)) &amp;&amp; !(i&amp;f[1])) dp[1][i]=1;\n\n    for(int i=2; i&lt;=n; ++i) {\n        for(int s=0; s&lt;M; ++s) {\n            if(!(s&amp;(s&lt;&lt;1)) &amp;&amp; !(s&amp;(s&gt;&gt;1)) &amp;&amp; !(s&amp;f[i])) { //legal\n                for(int k=0;k&lt;M;++k){\n                    if(!(k&amp;(k&lt;&lt;1)) &amp;&amp; !(k&amp;(k&gt;&gt;1)) &amp;&amp; !(k&amp;f[i-1]) &amp;&amp; !(k&amp;s)) { //legal\n                        dp[i][s]=(dp[i][s]+dp[i-1][k])%P;\n                    }\n                }\n            }\n        }\n    }\n    int sum=0; \n    for(int i=0;i&lt;M;++i)sum=(sum+dp[n][i])%P;//dp[n][i];\n    printf(\"%lld\",sum);\n    return 0;\n}\n</code></pre> \u7384\u5b66\u65f6\u95f4\u590d\u6742\u5ea6\\(\\Theta(n*2^{2n})\\)\uff0cOrz</p> <p>P1896</p> <p>\u72b6\u538bdp+\u80cc\u5305</p> <p>\u4e0eP1879\u5341\u5206\u76f8\u4f3c\uff0c\u53ea\u662f\u591a\u4e86\u4e2a\u80cc\u5305\u548c\u884c\u4e0e\u884c\u4e4b\u95f4\u7684\u6bd4\u8f83</p> <p>data\u8bb0\u5f55\u6bcf\u79cd\u72b6\u6001\u4e2d\u5305\u542b\u591a\u5c11\u4e2a\u56fd\u738b</p> <p>map\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u5bf9\u4e0a\u4e00\u884c\u7684\u9650\u5236</p> <p>ok\u8bb0\u5f55\u5f53\u524d\u72b6\u6001\u662f\u5426\u5408\u6cd5(!(s&amp;(s&gt;&gt;1)) &amp;&amp; !(s&amp;(s&lt;&lt;1)))</p> <p>f\u8bb0\u5f55\u7b54\u6848</p> <pre><code>//\u8f6c\u79fb\u65b9\u7a0b\nfor(int i=2;i&lt;=n;++i){\n        for(int s=0;s&lt;m;++s){\n            if(ok[s]){\n                for(int s1=0;s1&lt;m;++s1){\n                    if(!(map[s]&amp;s1) &amp;&amp; ok[s1]){\n                        for(int j=k;j&gt;=data[s];--j){\n                            f[s][i][j]+=f[s1][i-1][j-data[s]];\n                        }\n                    }\n                }\n            }\n        }\n    }\n</code></pre>"},{"location":"my%20past/OI/%E7%8A%B6%E5%8E%8Bdp/#_2","title":"\u6700\u4f18\u89e3\u7c7b","text":"<p>P3052</p> <p>f[1&lt;&lt;n]\u8868\u793a\u7b54\u6848\uff0cg[1&lt;&lt;n]\u8868\u793a\u8be5\u72b6\u6001\u7684\u6700\u540e\u4e00\u4e2a\u7535\u68af\u7684\u6700\u5927\u5269\u4f59\u4f53\u79ef</p> <p>\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a <pre><code>if(g[i]&gt;=a[j] &amp;&amp; f[i | (1&lt;&lt;(j-1))]&gt;=f[i]){\n    f[i | (1&lt;&lt;(j-1))]=f[i];\n    g[i | (1&lt;&lt;(j-1))]=max(g[i | (1&lt;&lt;(j-1))],g[i]-a[j]);\n}else if(g[i]&lt;a[j] &amp;&amp; f[i | (1&lt;&lt;(j-1))]&gt;=f[i]+1){\n    f[i | (1&lt;&lt;(j-1))]=f[i]+1;\n    g[i | (1&lt;&lt;(j-1))]=max(g[i | (1&lt;&lt;(j-1))],w-a[j]);\n}\n</code></pre> \u56e0\u4e3a\u5f53\u524d\u72b6\u6001\u7684\u524dn-1\u4e2a\u72b6\u6001\u4e00\u5b9a\u5df2\u6ee1\uff0c\u4f46\u4e0d\u4e00\u5b9a\u65f6\u6700\u4f18\uff1b\u7b2cn\u4e2a\u72b6\u6001\u672a\u6ee1\uff0c\u4e14\u4e0d\u4e00\u5b9a\u6700\u4f18\uff0c\u56e0\u6b64\u4e00\u5b9a\u8981\u5148\u53d6f\u7684\u6700\u4f18\uff0c\u5728\u66f4\u65b0g\u53d6\u6700\u4f18\u3002 \u5f53f\u6700\u4f18\u65f6\uff0c\u524dn-1\u4e00\u5b9a\u65f6\u5f53\u524d\u6700\u6ee1\u7684\u72b6\u6001\uff0c\u6240\u4ee5\u4e0d\u7528\u518d\u8003\u8651\uff0c\u76f4\u63a5\u8003\u8651\u6700\u540e\u4e00\u4e2a\u72b6\u6001\u7684\u6700\u5927\u503c\u5373\u53ef\u3002\u5e76\u4e14f\u6700\u4f18\u5c31\u8bc1\u660eg\u66f4\u5927\u3002 \u4f8b\u5982\uff1a <pre><code>3 10\n4 \n6 \n7\n</code></pre> 4 6 7\u53ef\u4ee5\u75314 6 \u62166 7\u8f6c\u79fb\u800c\u6765\uff0c\u4f466 7\u7b54\u6848\u5df2\u7ecf\u4e3a2\uff0c\u800c4 6 \u4e3a1\uff0c\u5219\u5e94\u8be5\u53d64 6 \u7684\u72b6\u6001\u4f5c\u4e3a4 6 7 \u7684\u8f6c\u79fb\u3002 \uff08\u6bcf\u4e2a\u72b6\u6001\u7684\u6700\u4f18\u89e3\u65f6\u552f\u4e00\u7684\uff09</p> <p>P1357</p> <p>\u8fd9\u9053\u9898\u7528\u5230\u4e86\u77e9\u9635\u5feb\u901f\u5e42\u3002</p> <p>\u9996\u5148\u8003\u8651\u66b4\u529b\\(dp\\).</p> <p>\u8bbe\u72b6\u6001\\(f[i][S]\\)\u8868\u793a\u5f53\u524d\u4f4d\u7f6e\u4e3a\\(i\\),\u72b6\u6001\u4e3a\\(S\\)\u7684\u65b9\u6848\u6570\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u7684\u8d77\u70b9\u4e3a\\(0\\),\u72b6\u6001\u4e3a\\(S\\)\uff0c\u90a3\u4e48\u521d\u59cb\u503c\\(f[0][S]=1\\).</p> <p>\u7136\u540e\u7531\u4e8e\u5934\u4e0e\u5c3e\u8981\u5b8c\u5168\u91cd\u5408\uff0c\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u4e3a\\(f[n][S]\\).</p> <p>\u8f6c\u79fb\u65b9\u7a0b\u4e3a:</p> \\[ f[i+1][T&gt;&gt;1]=\\sum f[i][T] \\\\ f[i+1][(T&gt;&gt;1)|(1&lt;&lt;m)]=\\sum f[i][T],popcnt((T&gt;&gt;1)|(1&lt;&lt;m))\\leq k \\\\popcnt(i)\u8868\u793ai\u5728\u4e8c\u8fdb\u5236\u4e0b\u6709\u51e0\u4e2a1 \\] <p>\u6211\u4eec\u53d1\u73b0\uff0c\u6bcf\u6b21\u7684\u8f6c\u79fb\u65b9\u5f0f\u90fd\u662f\u56fa\u5b9a\u7684\uff0c\u90fd\u53ef\u4ee5\u8868\u793a\u6210\u4e00\u4e2a$01\u77e9\u9635.</p> <p>\u6545\u6211\u4eec\u53ef\u4ee5\u7528\u4e00\u4e2a\u957f\u5bbd\u4e3a\\(2^m\\)\u7684\u77e9\u9635\u6765\u52a0\u901f\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long\nusing namespace std;\nconst int N=33,P=1e9+7;\nint n,m,k,res;\nint popcnt(int x) {\n    int cnt=0;\n    while(x) cnt+=(x&amp;1),x&gt;&gt;=1;\n    return cnt;\n}\nstruct ma {\n    int f[N][N],n,m;\n    ma() {\n        memset(f,0,sizeof f),n=m=0;\n    }\n} s,t,ans;\nma operator *(ma a,ma b) {\n    ma c=ma();\n    int n=a.n,m=a.m,p=b.m;\n    c.n=n,c.m=p;\n    for(int i=0; i&lt;n; ++i)\n        for(int j=0; j&lt;p; ++j)\n            for(int k=0; k&lt;m; ++k) c.f[i][j]=(c.f[i][j]+a.f[i][k]*b.f[k][j]%P)%P;\n    return c;\n}\nma kp(ma x,int p) {\n    if(p&lt;=1) return x;\n    if(p&amp;1) return x*kp(x*x,p&gt;&gt;1);\n    else return kp(x*x,p&gt;&gt;1);\n}\nsigned main() {\n    scanf(\"%lld%lld%lld\",&amp;n,&amp;m,&amp;k);\n    for(int S=0; S&lt;(1&lt;&lt;m); ++S) {\n        if(popcnt(S)&gt;k) continue;\n        s=ma(),t=ma(),ans=ma();\n        s.n=1,s.m=(1&lt;&lt;m);\n        s.f[0][S]=1;\n        t.n=t.m=(1&lt;&lt;m);\n        for(int T=0; T&lt;(1&lt;&lt;m); ++T) {\n            if(popcnt(T)&gt;k) continue;\n            t.f[T][T&gt;&gt;1]=1;\n            if(popcnt((T&gt;&gt;1)|(1&lt;&lt;(m-1)))&lt;=k) t.f[T][(T&gt;&gt;1)|(1&lt;&lt;(m-1))]=1;\n        }\n        ans=s*kp(t,n);\n        res=(res+ans.f[0][S])%P;\n    }\n    printf(\"%lld\",res);\n    return 0;\n}\n</code></pre> <p>P3959</p> <p>\u5982\u679c\u53ea\u8003\u8651\u6bcf\u4e2a\u72b6\u6001\u7684\u70b9\u96c6\u7684\u8bdd\u65f6\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u66f4\u65b0\u540c\u4e00\u4e2a\u70b9\u65f6\u4f1a\u56e0\u4e3a\u4e0d\u540c\u7684\u6df1\u5ea6\u800c\u4ea7\u751f\u4e0d\u540c\u7684\u8d21\u732e\u3002</p> <p>hack data</p> <pre><code>6 6\n1 2 100\n2 3 1\n2 4 10\n3 4 10\n3 5 100\n4 6 10000\n</code></pre> <p>\u597d\u50cf\u53ef\u4ee5\u5361\u6389\\(prim\\)\u548c\u90e8\u5206\u53ea\u8bb0\u5f55\u96c6\u5408\u7684\u72b6\u538b\\(dp\\)\u3002</p> <p>\u6240\u4ee5\u8981\u8003\u8651\u6bcf\u4e2a\u70b9\u5230\u521d\u59cb\u70b9\u7684\u6df1\u5ea6\u3002</p> <p>\u8bbe\\(f[i][j][S]\\)\u8868\u793a\u5728\u6df1\u5ea6\u4e3a\\(i\\)\u7684\u70b9\\(j\\)\u65f6\u4e00\u5171\u6316\u4e86\\(S\\)\u4e2d\u6240\u6709\u5b9d\u85cf\u7684\u6700\u5c0f\u82b1\u8d39\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u8981\u66f4\u65b0\u7684\u96c6\u5408\\(s\\)\u4e2d\u5305\u542b\u4e86\u4e0e\\(j\\)\u8fde\u63a5\u7684\\(k\\)\u70b9\uff0c\u800c\\(j\\)\u5219\u5728\\(s\\)\u5173\u4e8e\\(S\\)\u7684\u8865\u96c6\\(\\_S\\)\u4e2d\u3002</p> <p>\u90a3\u4e48\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ f[i][j][S]=\\min(f[i][j][S]\uff0cd[j][k]* (i+1)+f[i][j][\\_S]+f[i+1][k][s]) \\] <p>\u8fd9\u6709\u70b9\u50cf\u6811\u5f62\u80cc\u5305\\(dp\\)\u7684\u8f6c\u79fb\u65b9\u7a0b\u3002</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u65b9\u5f0f\u6765\u5b9e\u73b0\u5b83\u5566!</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=13,M=1e3+10,INF=0x3f3f3f3f;\nint f[N][N][1&lt;&lt;N];\nint d[N][N],D[N][N],head[N],sz[1&lt;&lt;N];\nint n,m,v,u,w,ans,cnt;\nstruct edge {\n    int v,w,nxt;\n} e[M&lt;&lt;1];\nint read1() {\n    int x=0;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0')ch=getchar();\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0')x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nvoid write1(int x) {\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n}\nvoid add(int u,int v,int w) {\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid init() {\n    for(int i=1; i&lt;=n; ++i) {\n        for(int j=1; j&lt;=n; ++j) {\n            if(i==j)continue;\n            if(d[i][j]&lt;INF)D[i][++D[i][0]]=j;\n        }\n    }\n}\nint dfs(int i,int j,int S) {\n    if(f[i][j][S]&lt;INF)return f[i][j][S];\n    if(S==(1&lt;&lt;(j-1)))return f[i][j][S]=0;\n\n    if(sz[S]&gt;n-i)return f[i][j][S]=INF;\n    if(sz[S]&lt;=1)return f[i][j][S]=0;\n\n    for(int s=S; s; s=(s-1)&amp;S) {\n        int _S=S^s;\n        if(((1&lt;&lt;(j-1))&amp;s))continue;\n        int tmp=dfs(i,j,_S);\n        if(tmp&gt;=f[i][j][S])continue;\n        for(int o=1; o&lt;=D[j][0]; ++o) {\n            int k=D[j][o];\n            if((1&lt;&lt;(k-1))&amp;s) f[i][j][S]=min(f[i][j][S],d[j][k]*(i+1)+tmp+dfs(i+1,k,s));\n        }\n    }\n    return f[i][j][S];\n}\n\nint main() {\n    //freopen(\"P3959_17.in\",\"r\",stdin);\n    ans=INF;\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    memset(d,0x3f,sizeof d);\n    n=read1(),m=read1();\n    for (int i=1; i&lt;(1&lt;&lt;n); ++i) sz[i]=sz[i&amp;(i-1)]+1;//\n\n    for(int i=1; i&lt;=m; ++i) u=read1(),v=read1(),w=read1(),add(u,v,w),add(v,u,w),d[u][v]=min(d[u][v],w),d[v][u]=min(d[v][u],w);\n    init();\n    for(int o=1; o&lt;=n; ++o) {\n        memset(f,0x3f,sizeof f);\n        ans=min(ans,dfs(0,o,(1&lt;&lt;n)-1));\n    }\n    write1(ans);\n    return 0;\n}\n</code></pre> <p>~~\u7136\u540e\u5c31T\u4e86~~</p> <p>\u6ce8\u610f\uff0c\u4e0a\u8ff0\u4ee3\u7801\u4e2d\u5305\u542b\u4e86\u5feb\u8bfb\u5feb\u5199\uff0c\u9884\u5904\u7406\\(j\\)\u7684\u679a\u4e3e\u91cf\\(k\\),\u8bb0\u5fc6\u5316\u641c\u7d22\u81ea\u5e26\u7684\u526a\u679d\uff0c\u6700\u4f18\u6027\u526a\u679d(\\(f[i][j][\\_S]&lt;f[i][j][S]\\))\uff0c\u975e\u6cd5\u72b6\u6001\u526a\u679d\u7b49\u4e00\u7cfb\u5217\u5361\u5e38\u65b9\u6cd5\uff0c\u4f46\u5bf9\u4e8e\\(n=12\\)\u7684\u6570\u636e\u8fd8\u8981\u8dd1\\(3s\\)\u4ee5\u4e0a\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u4e0d\u8981\u9012\u5f52\uff0c\u53ea\u8981\u9012\u63a8\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=13,M=1e3+10,INF=0x3f3f3f3f;\nint f[N][N][1&lt;&lt;N];\nint d[N][N],D[N][N],head[N],sz[1&lt;&lt;N];\nint n,m,v,u,w,ans,cnt;\nstruct edge {\n    int v,w,nxt;\n} e[M&lt;&lt;1];\nint read1() {\n    int x=0;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0')ch=getchar();\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0')x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nvoid write1(int x) {\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n}\nvoid add(int u,int v,int w) {\n    e[++cnt].v=v,e[cnt].w=w,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid init() {\n    for(int i=1; i&lt;=n; ++i) {\n        for(int j=1; j&lt;=n; ++j) {\n            if(i==j)continue;\n            if(d[i][j]&lt;INF)D[i][++D[i][0]]=j;\n        }\n    }\n}\nvoid dp() {\n    memset(f,0x3f,sizeof f);\n    for(int i=1; i&lt;=n; ++i)f[n-1][i][1&lt;&lt;(i-1)]=0;\n    for(int i=n-2; i&gt;=0; --i) {\n        for(int j=1; j&lt;=n; ++j) {\n            f[i][j][1&lt;&lt;(j-1)]=0;\n            for(int S=1; S&lt;(1&lt;&lt;n); ++S) {\n                if(sz[S]&gt;n-i)continue;\n                for(int s=S; s; s=(s-1)&amp;S) {\n                    int _S=S^s;\n                    if(((1&lt;&lt;(j-1))&amp;s))continue;\n                    if(sz[s]&gt;n-i-1)continue;\n                    if(f[i][j][_S]&gt;=f[i][j][S])continue;\n                    for(int o=1; o&lt;=D[j][0]; ++o) {\n                        int k=D[j][o];\n                        if((1&lt;&lt;(k-1))&amp;s) f[i][j][S]=min(f[i][j][S],d[j][k]*(i+1)+f[i][j][_S]+f[i+1][k][s]);\n                    }\n                }\n            }\n        }\n    }\n}\nint main() {\n    //freopen(\"P3959_15.in\",\"r\",stdin);\n    ans=INF;\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    memset(d,0x3f,sizeof d);\n    n=read1(),m=read1();\n    for (int i=1; i&lt;(1&lt;&lt;n); ++i) sz[i]=sz[i&amp;(i-1)]+1;//\n\n    for(int i=1; i&lt;=m; ++i) u=read1(),v=read1(),w=read1(),add(u,v,w),add(v,u,w),d[u][v]=min(d[u][v],w),d[v][u]=min(d[v][u],w);\n    init();\n    dp();\n    for(int i=1; i&lt;=n; ++i)ans=min(ans,f[0][i][(1&lt;&lt;n)-1]);\n    write1(ans);\n    return 0;\n}\n</code></pre> <p>\u6ce8\u610f\u8d77\u59cb\u72b6\u6001\u4e3a\u96c6\u5408\u4e2d\u53ea\u6709\u4e00\u4e2a\u70b9\u7684\u72b6\u6001\uff0c\u6b64\u65f6\u7b54\u6848\u4e3a\\(0\\)</p> <ul> <li>\u9012\u63a8\u7684\u597d\u5904\u5728\u4e8e\uff0c\u4e0d\u9700\u8981\u679a\u4e3e\u5f53\u524d\u7684\u521d\u59cb\u70b9\u5177\u4f53\u662f\u54ea\u4e2a\uff0c\u800c\u662f\u53ef\u4ee5\u4e00\u5f00\u59cb\u9884\u5904\u7406\u4e3a\\(0\\)\u540e\u4e00\u8d77\u8f6c\u79fb\u3002</li> </ul> <p>P2150</p> <p>\u6ce8\u610f\u5230\u4e00\u4e2a\u6027\u8d28\uff0c\u5047\u8bbe\\(S_1,S_2\\)\u8868\u793a\u7532\u4e59\u9009\u62e9\u7684\u6240\u6709\u6570\u7684\u8d28\u56e0\u6570\u96c6\u5408\uff0c\u90a3\u4e48\\(S_1,S_2\\)\u4e0d\u80fd\u6709\u4ea4\u96c6.</p> <p>\u90a3\u4e48\u5bf9\u4e8e\\(n&lt;=30\\)\uff0c\u8d28\u56e0\u6570\u79cd\u7c7b\u5f88\u5c11\uff0c\u53ef\u4ee5\u72b6\u538b\\(dp\\).</p> <p>\u8bbe\\(f[S_1][S_2]\\)\u8868\u793a\u7532\u4e59\u8d28\u56e0\u6570\u96c6\u5408\u4e3a\\(S_1,S_2\\)\u65f6\u7684\u65b9\u6848\u6570\u3002</p> <p>\u8fb9\u754c\\(f[0][0]=1\\),\\(S\\)\u8868\u793a\\(2-n\\)\u6bcf\u4e2a\u6570\u7684\u8d28\u56e0\u6570\u96c6\u5408\uff0c\u8f6c\u79fb\u65b9\u7a0b:</p> \\[  f[j|S][k]+=f[j][k]\\times (S\\&amp;k==0),f[j][k|S]+=f[j][k]\\times (S\\&amp;j==0),j\\&amp; k ==0 \\] <p>\u800c\u5bf9\u4e8e\\(n&lt;=500\\),\u53d1\u73b0\u6bcf\u4e2a\u6570\u5927\u4e8e\\(22\\)\u7684\u8d28\u56e0\u6570\u53ea\u6709\u4e00\u4e2a\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4e00\u4e2a\u7ed3\u6784\u4f53\\((o,b,S)\\)\u8868\u793a\u6bcf\u4e2a\u6570\u7684\u539f\u6570\uff0c\u5927\u8d28\u56e0\u6570\u548c\u5c0f\u8d28\u56e0\u6570\u96c6\u5408\u3002</p> <p>\u8fd9\u6837\uff0c\u5c06\u5927\u8d28\u56e0\u6570\u76f8\u540c\u7684\u6570\u5206\u7ec4\u8f6c\u79fb\uff0c\u5373\u5bf9\u4e8e\u5927\u8d28\u56e0\u6570\u6392\u4e2a\u5e8f\u3002(\u987a\u5e8f\u65e0\u6240\u8c13)</p> <p>\u4e4b\u540e\uff0c\u5f00\u4e24\u4e2a\u4e34\u65f6\u6570\u7ec4\\(f1[S_1][S_2],f2[S_1][S_2]\\)\u5206\u522b\u8868\u793a\u4e00\u4e2a\u6570\u7532\u6216\u8005\u4e59\u9009\u65f6\u7684\u65b9\u6848\u6570\u3002</p> <p>\u8f6c\u79fb\u4e0e\u4e0a\u9762\u7684\u7c7b\u4f3c\u3002</p> <p>\u6bcf\u5f53\u4e00\u7ec4\u8f6c\u79fb\u7ed3\u675f\uff0c\u5c31\u66f4\u65b0\u4e00\u904d\\(f\\)\u6570\u7ec4\u3002</p> <p>\u6ce8\u610f\\(f1,f2\\)\u4e2d\u4e0d\u5305\u542b\u7532\u4e59\u9009\u62e9\u540c\u4e00\u4e2a\u6570\uff0c\u4f46\u5305\u542b\u4e86\u7532\u4e59\u90fd\u4e0d\u9009\u540c\u4e00\u4e2a\u6570\u7684\u60c5\u51b5\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5982\u679c\u76f4\u63a5\\(f[j][k]=f1[j][k]+f2[j][k]\\),\u90fd\u4e0d\u9009\u7684\u60c5\u51b5\u4f1a\u91cd\u590d\uff0c\u6240\u4ee5\u518d\u51cf\u53bb\u4e00\u4e2a\\(f[j][k]\\)\u5373\u53ef\u3002</p> <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long\nusing namespace std;\nconst int N=510,M=266;\nint p[9]= {0,2,3,5,7,11,13,17,19};\nint n,P,ans;\nint f[M][M],f1[M][M],f2[M][M];\nstruct node {\n    int o,b,S;\n    void init() {\n        S=0;\n        int tmp=o;\n        for(int i=1; i&lt;=8; ++i) while(tmp%p[i]==0) S|=(1&lt;&lt;(i-1)),tmp/=p[i];\n        if(tmp&gt;1) b=tmp;\n        else b=-1;\n    }\n} a[N];\nbool cmp(node a,node b) {\n    return a.b&lt;b.b;\n}\nsigned main() {\n    scanf(\"%lld%lld\",&amp;n,&amp;P);\n    for(int i=1; i&lt;n; ++i) a[i].o=i+1,a[i].init();\n    sort(a+1,a+n,cmp);\n    f[0][0]=1;\n    for(int i=1; i&lt;n; ++i) {\n        int S=a[i].S;\n        if(i==1 || a[i].b!=a[i-1].b || a[i].b==-1) memcpy(f1,f,sizeof f1),memcpy(f2,f,sizeof f2);\n        for(int j=255; j&gt;=0; --j)\n            for(int k=255; k&gt;=0; --k) \n                if((j&amp;k)==0) f2[j][k|S]=(f2[j][k|S]+((S&amp;j)==0)*f2[j][k])%P,f1[j|S][k]=(f1[j|S][k]+((S&amp;k)==0)*f1[j][k])%P;\n        if(i==n-1 || a[i].b!=a[i+1].b || a[i].b==-1) {\n            for(int j=0; j&lt;=255; ++j)\n                for(int k=0; k&lt;=255; ++k)\n                    if((j&amp;k)==0) f[j][k]=(f1[j][k]+f2[j][k]-f[j][k]+P)%P;\n        }\n    }\n    ans=0;\n    for(int j=0; j&lt;=255; ++j)\n        for(int k=0; k&lt;=255; ++k)\n            if((j&amp;k)==0 &amp;&amp; f[j][k]) ans=(ans+f[j][k])%P;\n    printf(\"%lld\",ans%P);\n    return 0;\n}\n</code></pre> <p>P7519</p> <ol> <li>\u66b4\u529b\u641c\u7d22</li> </ol> <p>\u53ef\u4ee5\u7528\u8d2a\u5fc3\u89e3\u51b3\u6bcf\u4e2a\u961f\u4f0d\u7684\u8fc7\u9898\u6570\\(b[i]\\)\uff0c\u5373\\(b[j]=a[i]+b[i]+(i&lt;j)-a[j]\\).</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053\u5269\u4f59\u7684\u9898\u6570\\(m\\),\u4e0a\u4e00\u4e2a\u961f\u4f0d\u7684\\(b[j]\\)\u548c\u4e0a\u4e2a\u961f\u4f0d\u7684\u7f16\u53f7\\(j\\)\u5373\u53ef\u8f6c\u79fb\u3002</p> <p><pre><code>#include&lt;bits/stdc++.h&gt;\nusing namespace std;\ntypedef long long ll;\nconst int N=100,M=110;\nint a[N],b[N],vis[N];\nint top,n,m;\nll ans;\nbool cmp(int x,int y) {\n    if(a[x]==a[y]) return x&lt;y;\n    return a[x]&gt;a[y];\n}\nvoid dfs(int dep,int res,int lst,int b) {\n    if(res&lt;0) return;\n    if(dep&gt;n) {\n        if(res&gt;=0) ++ans;\n        return;\n    }\n    for(int i=1; i&lt;=n; ++i) {\n        if(vis[i]) continue;\n        vis[i]=1;\n        int tmp=max(b,a[lst]+b-a[i]+(i&gt;lst));\n        dfs(dep+1,res-tmp,i,tmp);\n        vis[i]=0;\n    }\n}\nint main() {\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1; i&lt;=n; ++i) scanf(\"%d\",&amp;a[i]),b[i]=i;\n    sort(b+1,b+n+1,cmp);\n    dfs(1,m,b[1],0);\n    printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre> \u590d\u6742\u5ea6\\(O(nn!)\\)</p> <ol> <li>\u66b4\u529b\u72b6\u538b</li> </ol> <p>\u7528\\(f[S][i][j][k][l]\\)\u8868\u793a\u5f53\u524d\u96c6\u5408\u4e3a\\(S\\),\u8003\u8651\u5230\u7b2c\\(i\\)\u4e2a\u961f\u4f0d\uff0c\u5f53\u524d\u5269\u4f59\u9898\u6570\u4e3a\\(j\\)\uff0c\u4e0a\u4e00\u4e2a\u961f\u4f0d\u7f16\u53f7\u4e3a\\(k\\),\u4e0a\u4e00\u4e2a\u961f\u4f0d\u8fc7\u9898\u6570\u4e3a\\(l\\)\u65f6\u7684\u65b9\u6848\u6570\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u76f4\u63a5\u5c06\u4e0a\u9762\u7684\u641c\u7d22\u6539\u6210\u8bb0\u5fc6\u5316\u641c\u7d22\u5373\u53ef\u3002</p> <p>\u590d\u6742\u5ea6\\(O(2^nn^2m^2)\\)</p> <p>~~\u8fd8\u4e0d\u5982\u66b4\u529b\u641c\u7d22~~</p> <p>3.\u4f18\u5316\u72b6\u538b</p> <p>\u663e\u7136\u5c06\u9012\u5f52\u6539\u6210\u9012\u63a8\u80fd\u4f18\u5316\u6389\\(i\\)\u90a3\u4e00\u7ef4\uff0c\u800c\u6709\u4e86\u4e0a\u9762\u7684\u601d\u8def\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u8003\u8651\u518d\u4f18\u5316\u6389\\(l\\)\u90a3\u4e00\u7ef4.</p> <p>\u7531\u4e8e\\(b[i]\\)\u5355\u8c03\u4e0d\u964d\uff0c\u6240\u4ee5\u5982\u679c\u4e00\u4e2a\u961f\u4f0d\u7684\\(b[i]\\)\u5df2\u7ecf\u786e\u5b9a\uff0c\u90a3\u4e48\u540e\u9762\u7684\u961f\u4f0d\\(b[j]\\)\u90fd\u8981\u5927\u4e8e\u7b49\u4e8e\\(b[i]\\)\u3002\u6240\u4ee5\u76f8\u5f53\u4e8e\u4e00\u5c42\u4e00\u5c42\u7684\u52a0\u4e0a\u65b0\u7684\u8d21\u732e\\(\\Delta b=b[j]-b[i]\\),\u800c\u4e2a\u6570\u4e3a\\(n-|S|\\),\u6240\u4ee5\u6d88\u8017\u7684\u8fc7\u9898\u6570\u4e3a\\(\\Delta b\\times (n-|S|)\\).</p> <p>\u6240\u4ee5\u8bb0\\(d[i][j]\\)\u8868\u793a\u5982\u679c\\(j\\)\u8981\u8d85\u8d8a\\(i\\)\u7684\u6700\u5c0f\u4ee3\u4ef7\u3002</p> <p>\u8f6c\u79fb\u5982\u4e0b\uff1a</p> <p><pre><code>for(int i=1;i&lt;=n;++i)\n        for(int j=1;j&lt;=n;++j) d[i][j]=max(0,a[i]-a[j]+(i&lt;j));\n</code></pre> \u8fd9\u6837\u76f8\u5f53\u4e8e\u6bcf\u4e2a\u961f\u4f0d\u5bf9\u540e\u9762\u6240\u6709\u961f\u4f0d\u90fd\u4ea7\u751f\u5f71\u54cd\u3002</p> <p>\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\\(f[S][i][j]\\)\u8868\u793a\u5f53\u524d\u96c6\u5408\u4e3a\\(S\\),\u4e0a\u4e00\u4e2a\u961f\u4f0d\u4e3a\\(i\\),\u5269\u4f59\u9898\u6570\u4e3a\\(j\\)\u65f6\u7684\u65b9\u6848\u6570\u3002</p> <p>\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ \u5bf9\u4e8ei,j\\in S,i\\not \\in A,j\\in A,k\\in [d[j][i]\\times(n-|A|),m],\u6709\\\\ f[S][i][k]+=f[A][j][k-d[j][i]\\times(n-|A|)] \\] <p>\u5bf9\u4e8e\u521d\u59cb\u8fb9\u754c\uff0c\u56e0\u4e3a\u8981\u4fdd\u8bc1\u7b2c\u4e00\u4e2a\u6570\u7684\\(b[i]\\)\u80fd\u591f\u8d85\u8d8a\\(a_{\\max}\\),\u6240\u4ee5 \\(f[1&lt;&lt;(i-1)][i][d[pos][i]\\times n]=1\\)</p> <p>\u6700\u7ec8\u7b54\u6848\u4e3a\\(\\sum_{i=1}^n \\sum_{j=1}^{m}f[T][i][j]\\),\\(T\\)\u8868\u793a\u5168\u96c6\u3002 <pre><code>#include&lt;bits/stdc++.h&gt;\n#define int long long \nusing namespace std;\nconst int N=14,M=550;\nint a[N],d[N][N],popcnt[1&lt;&lt;N],s[N];\nint ans,n,m,T,tmp;\nint f[1&lt;&lt;N][N][M];  \nvoid init(){\n    int pos=0,maxn=0;\n    T=(1&lt;&lt;n)-1;\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=n;++j) d[i][j]=max(0ll,a[i]-a[j]+(i&lt;j));\n        if(maxn&lt;a[i] || (maxn==a[i] &amp;&amp; pos&gt;i)) maxn=a[i],pos=i;\n    }\n    for(int i=1;i&lt;=T;++i) popcnt[i]=popcnt[i&gt;&gt;1]+(i&amp;1);\n    for(int i=1;i&lt;=n;++i){\n        int tmp=d[pos][i]*n;\n        if(tmp&lt;=m) f[1&lt;&lt;(i-1)][i][tmp]=1;\n    }\n}\nvoid dp(){\n    for(int S=0;S&lt;=T;++S){\n        for(int i=1;i&lt;=n;++i){\n            if(S&amp;(1&lt;&lt;(i-1))){\n                int A=S^(1&lt;&lt;(i-1));\n                for(int j=1;j&lt;=n;++j){\n                    if((i!=j) &amp;&amp; (S&amp;(1&lt;&lt;(j-1)))){\n                        int tmp=d[j][i]*(n-popcnt[A]);\n                        for(int k=tmp;k&lt;=m;++k) f[S][i][k]+=f[A][j][k-tmp];\n                    }\n                }\n            }\n        }\n    }\n    for(int i=1;i&lt;=n;++i)\n        for(int j=1;j&lt;=m;++j) ans+=f[T][i][j];\n    printf(\"%lld\",ans);\n}\nsigned main() {\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1; i&lt;=n; ++i) scanf(\"%lld\",&amp;a[i]);\n    init();\n    dp();\n    return 0;\n}\n</code></pre></p>"},{"location":"my%20past/OI/%E7%9F%A9%E9%98%B5%E4%B9%98%E6%B3%95/","title":"\u77e9\u9635\u4e58\u6cd5","text":"<p>P3328</p> <p>\u795e\u9898\uff0c\u7ebf\u6bb5\u6811+\u77e9\u9635\u4e58\u6cd5</p> <p>1. \u77e9\u9635\u4e58\u6cd5\u9884\u5904\u7406</p> <p>\u9996\u5148\uff0c\u8bbe\\(f[i]=F[a[i]]\\)\uff0c\u800c\u8fd9\u4e2a\u53ef\u4ee5\u7528\\(3\\times 3\\)\u77e9\u9635\u9884\u5904\u7406\u51fa\u6765\u3002</p> <p>\u5177\u4f53\u5730\uff0c\u8bbe\u4e09\u5143\u5411\u91cf\\([f_{k+2},f_{k+1},1]\\)\uff0c\u5219\u6709\u9012\u63a8\u5f0f</p> \\[[f_{k+2},f_{k+1},1]=[f_{k+1},f_k,1]\\times\\left[ \\begin{array}{lll}1 &amp; 1&amp; 0\\\\a &amp; 0 &amp; 0\\\\b&amp; 0 &amp; 1 \\end{array}  \\right]\\] <p>\u5219</p> \\[[f_{k+2},f_{k+1},1]=[2,1,1]\\times\\left[ \\begin{array}{lll}1 &amp; 1&amp; 0\\\\a &amp; 0 &amp; 0\\\\b&amp; 0 &amp; 1 \\end{array}  \\right]^k\\] <p>2. \u7ebf\u6bb5\u6811\u7ef4\u62a4</p> <p>\u6709\u4e86\\(f[i]\\)\u6570\u7ec4\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u4e86\u3002</p> <p>\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u5efa\u4e24\u4e2a\u4e8c\u7ef4\\(3\\times 3\\)\u6570\u7ec4\uff0c\\(sum\\)\u548c\\(data\\),\u5206\u522b\u7ef4\u62a4\uff1a</p> \\[sum: \\left[\\begin{array}{l}f_{a_{i-1}-1} &amp; f_{a_{i-1}}&amp; f_{a_{i-1}+1}\\\\ f_{a_{i+1}-1}&amp; f_{a_{i+1}}&amp; f_{a_{i+1}+1}\\end{array}\\right] \\\\ data:\\left[\\begin{array}{l}f_{a_{i-1}-1}\\times f_{a_{i+1}-1}&amp; f_{a_{i-1}-1}\\times f_{a_{i+1}}&amp; f_{a_{i-1}-1}\\times f_{a_{i+1}+1}\\\\ f_{a_{i-1}}\\times f_{a_{i+1}-1}&amp; f_{a_{i}-1}\\times f_{a_{i+1}}&amp; f_{a_{i-1}}\\times f_{a_{i+1}+1}\\\\ f_{a_{i-1}+1}\\times f_{a_{i+1}-1}&amp; f_{a_{i-1}+1}\\times f_{a_{i+1}}&amp; f_{a_{i-1}+1}\\times f_{a_{i+1}+1}\\\\ \\end{array}\\right] \\] <p>\u8fd9\u6837\uff0c\u6bcf\u6b21\u9047\u5230\\(+1,-1\\)\u64cd\u4f5c\u65f6\uff0c\u53ef\u4ee5\u76f4\u63a5\u7528\u73b0\u6709\u7684\u503c\u6c42\u51fa\u672a\u77e5\u91cf\u3002</p> <p>\u540c\u65f6\uff0c\u56e0\u4e3a\u540c\u4e00\u4e2a\u533a\u95f4\u5bf9\\(a_{i-1},a_{i+1}\\)\u7684\u5f71\u54cd\u4e0d\u540c\uff0c\u6bcf\u4e2a\\([l,r]\\)\u66f4\u6539\u4f1a\u5bf9\\([l+1,r+1]\\)\u7684\\(a_{i-1}\\)\u8fdb\u884c\u66f4\u6539\uff0c\u800c\u5bf9\\([l-1,r-1]\\)\u7684\\(a_{i+1}\\)\u8fdb\u884c\u66f4\u6539\u3002</p> <p>\u6240\u4ee5\u6211\u4eec\u6bcf\u6b21\u66f4\u6539\u4e24\u6b21\uff0c\u8bb0\u5f55\u4e00\u4e2a\\(t\\)\uff0c\u8868\u793a\u662f\u6539\\(a_{i-1}\\)\u8fd8\u662f\\(a_{i+1}\\).</p> <p>\u5bf9\u4e8e\u52a0\u64cd\u4f5c\uff0c\u6709\\(f_{k+2}=f_{k+1}+a\\times f_k+b\\):</p> <pre><code>void add(int i,int t) {\n    int l=tre[i].l,r=tre[i].r;ll w=r-l+1;\n    for(int k=0; k&lt;=1; ++k) _s(i,t,k)=_s(i,t,k+1);\n    _s(i,t,2)=(_s(i,t,1)+a*_s(i,t,0)%P+b*w%P)%P;\n    if(t==0) { //a[i-1]\n        for(int k=0; k&lt;=2; ++k)\n            for(int j=0; j&lt;=1; ++j) _d(i,j,k)=_d(i,j+1,k);\n        for(int k=0; k&lt;=2; ++k) _d(i,2,k)=(_d(i,1,k)+_d(i,0,k)*a%P+b*_s(i,1,k)%P)%P;\n    } else {\n        for(int j=0; j&lt;=2; ++j)\n            for(int k=0; k&lt;=1; ++k) _d(i,j,k)=_d(i,j,k+1);\n        for(int j=0; j&lt;=2; ++j) _d(i,j,2)=(_d(i,j,1)+a*_d(i,j,0)%P+b*_s(i,0,j)%P)%P;\n    }//a[i+1]\n    return;\n}\n</code></pre> <p>\u6ce8\u610f\u7ebf\u6bb5\u6811\u7ef4\u62a4\u533a\u95f4\uff0c\u6240\u4ee5\\(b\\)\u8981\u4e58\u4ee5\u533a\u95f4\u957f\\(r-l+1\\)</p> <p>\u5bf9\u4e8e\u51cf\u64cd\u4f5c\u9700\u8981\u89e3\u65b9\u7a0b\u6c42\u51fa\\(f_k\\)\u3002</p> <p>\\(f_k=\\left\\{\\begin{array}{r}\\frac{f_{k+2}-f_{k+1}-b}{a}     (a\\not =0) \\\\ f_{k+1}-b (a=0) \\end{array} \\right.\\)</p> <p>\u5219\u5bf9\u4e8e\\(a\\)\u7279\u5224\uff0c\u6709\uff1a</p> <pre><code>void del(int i,int t) {\n    int l=tre[i].l,r=tre[i].r;ll w=r-l+1;\n    if(a==0){\n        for(int k=2;k&gt;=1;--k) _s(i,t,k)=_s(i,t,k-1);\n        _s(i,t,0)=(_s(i,t,1)-b*w%P+P)%P;\n        if(t==0){//a[i-1]\n            for(int k=0;k&lt;=2;++k)\n                for(int j=2;j&gt;=1;--j) _d(i,j,k)=_d(i,j-1,k);\n            for(int k=0;k&lt;=2;++k) _d(i,0,k)=(_d(i,1,k)-b*_s(i,1,k)%P+P)%P;\n        }else{//a[i+1]\n            for(int j=0;j&lt;=2;++j)\n                for(int k=2;k&gt;=1;--k) _d(i,j,k)=_d(i,j,k-1);\n            for(int j=0;j&lt;=2;++j) _d(i,j,0)=(_d(i,j,1)-b*_s(i,0,j)%P+P)%P;\n        }\n    }else{\n        for(int k=2;k&gt;=1;--k) _s(i,t,k)=_s(i,t,k-1);\n        _s(i,t,0)=(_s(i,t,2)-_s(i,t,1)+P-b*w%P+P)%P*inva%P;\n        if(t==0){//a[i-1]\n            for(int k=0;k&lt;=2;++k)\n                for(int j=2;j&gt;=1;--j) _d(i,j,k)=_d(i,j-1,k);\n            for(int k=0;k&lt;=2;++k) _d(i,0,k)=(_d(i,2,k)-_d(i,1,k)+P-b*_s(i,1,k)%P+P)%P*inva%P;\n        }else{//a[i+1]\n            for(int j=0;j&lt;=2;++j)\n                for(int k=2;k&gt;=1;--k) _d(i,j,k)=_d(i,j,k-1);\n            for(int j=0;j&lt;=2;++j) _d(i,j,0)=(_d(i,j,2)-_d(i,j,1)+P-b*_s(i,0,j)%P+P)%P*inva%P;\n        }\n    }\n}\n</code></pre> <p>\u90a3\u4e48\u6211\u4eec\u9700\u8981\u4e24\u4e2a\\(lazytag\\)\uff0c\u5206\u522b\u8868\u793a\\(a_{i-1}\\)\u548c\\(a_{i+1}\\)\u7684\u53d8\u5316\u91cf\u3002</p> <p>\\(pushup\\)\u76f4\u63a5\u66b4\u529b\u5408\u5e76\uff0c\\(pushdown\\)\u4e5f\u76f4\u63a5\u8ba1\u7b97\u5373\u53ef\u3002</p> <p>\\(change\\)\u9700\u8981\u533a\u5206\\(t\\)\uff0c\\(query\\)\u8fd4\u56de\\(data[2][0]\\)\u5373\u53ef\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5b8c\u6574\u7684\u8fc7\u4e86\u4e00\u904d\u4e3b\u8981\u6d41\u7a0b\u3002</p> <p>~~\u5361\u5e38\u4e00\u76f4\u662f\u6211\u7684\u75db\uff0c\u6240\u4ee5\u4e00\u4e0b\u4ee3\u7801\u8981\u5438\u6c27\u624d\u80fd\u8fc7~~</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;ctime&gt;\n#define ls (i&lt;&lt;1)\n#define rs (i&lt;&lt;1|1)\n#define mid (l+r&gt;&gt;1)\n#define _s(i,j,k) tre[i].sum[j][k]\n#define _d(i,j,k) tre[i].data[j][k]\n#define ll long long \nusing namespace std;\nconst int N=3e5+10,P=1e9+7;\nstruct ma {\n    ll f[3][3];\n    int n,m;\n    ma() {\n        memset(f,0,sizeof f);n=m=0;\n    }\n} s,t;\nint read1(){\n    int x=0;char ch=getchar();\n    while(ch&lt;'0' || ch&gt;'9') ch=getchar();\n    while(ch&gt;='0' &amp;&amp; ch&lt;='9') x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nvoid write1(ll x){\n    if(x&gt;9) write1(x/10);\n    putchar(x%10+'0');return;\n}\nma operator *(ma x,ma y) {\n    ma z=ma();\n    int n=x.n,m=x.m,p=y.m;\n    z.n=n,z.m=p;\n    for(int i=0; i&lt;n; ++i)\n        for(int j=0; j&lt;p; ++j)\n            for(int k=0; k&lt;m; ++k) z.f[i][j]=(z.f[i][j]+x.f[i][k]*y.f[k][j]%P)%P;\n    return z;\n}\nstruct tree {\n    int l,r,tag[2];\n    ll sum[3][3],data[3][3];\n} tre[N&lt;&lt;2];\nint n,q,_l,_r,x,y;\nll inva,a,b;\nll f[N][3];\nint A[N];\nchar ch[10],_c;\nll kp(ll x,int p) {\n    if(p==0) return 1;\n    if(p==1) return x%P;\n    if(p&amp;1) return x*kp(x*x%P,p&gt;&gt;1)%P;\n    else return kp(x*x%P,p&gt;&gt;1)%P;\n}\nma Kp(ma x,int p) {\n    if(p==1) return x;\n    if(p&amp;1) return x*Kp(x*x,p&gt;&gt;1);\n    else return Kp(x*x,p&gt;&gt;1);\n}\nvoid initf() {\n    inva=kp(a,P-2)%P;\n    s.n=s.m=3;\n    s.f[0][0]=s.f[0][1]=s.f[2][2]=1;s.f[1][0]=a;s.f[2][0]=b;\n    t.n=1,t.m=3;\n    t.f[0][0]=2;t.f[0][1]=t.f[0][2]=1;\n    for(int i=1; i&lt;=n; ++i) {\n        if(A[i]==1) {\n            f[i][0]=-P,f[i][1]=1,f[i][2]=2;\n        } else if(A[i]==2) {\n            f[i][0]=1,f[i][1]=2;\n            f[i][2]=(f[i][1]+a*f[i][0]%P+b)%P;\n        } else {\n            ma tmp=t*Kp(s,A[i]-2);\n            f[i][0]=tmp.f[0][1];\n            f[i][1]=tmp.f[0][0];\n            f[i][2]=(f[i][1]+a*f[i][0]%P+b)%P;\n        }\n    }\n}\nvoid pushup(int i) {\n    for(int j=0; j&lt;=1; ++j)\n        for(int k=0; k&lt;=2; ++k) _s(i,j,k)=(_s(ls,j,k)+_s(rs,j,k))%P;\n    for(int j=0; j&lt;=2; ++j)\n        for(int k=0; k&lt;=2; ++k) _d(i,j,k)=(_d(ls,j,k)+_d(rs,j,k))%P;\n}\nvoid build(int i,int l,int r) {\n    tre[i].l=l,tre[i].r=r;\n    if(l==r) {\n        for(int k=0; k&lt;=2; ++k) _s(i,0,k)=f[l-1][k];\n        for(int k=0; k&lt;=2; ++k) _s(i,1,k)=f[l+1][k];\n        for(int j=0; j&lt;=2; ++j)\n            for(int k=0; k&lt;=2; ++k) _d(i,j,k)=_s(i,0,j)*_s(i,1,k)%P;\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    pushup(i);return;\n}\nvoid add(int i,int t) {\n    int l=tre[i].l,r=tre[i].r;ll w=r-l+1;\n    for(int k=0; k&lt;=1; ++k) _s(i,t,k)=_s(i,t,k+1);\n    _s(i,t,2)=(_s(i,t,1)+a*_s(i,t,0)%P+b*w%P)%P;\n    if(t==0) { //a[i-1]\n        for(int k=0; k&lt;=2; ++k)\n            for(int j=0; j&lt;=1; ++j) _d(i,j,k)=_d(i,j+1,k);\n        for(int k=0; k&lt;=2; ++k) _d(i,2,k)=(_d(i,1,k)+_d(i,0,k)*a%P+b*_s(i,1,k)%P)%P;\n    } else {\n        for(int j=0; j&lt;=2; ++j)\n            for(int k=0; k&lt;=1; ++k) _d(i,j,k)=_d(i,j,k+1);\n        for(int j=0; j&lt;=2; ++j) _d(i,j,2)=(_d(i,j,1)+a*_d(i,j,0)%P+b*_s(i,0,j)%P)%P;\n    }//a[i+1]\n    return;\n}\nvoid del(int i,int t) {\n    int l=tre[i].l,r=tre[i].r;ll w=r-l+1;\n    if(a==0){\n        for(int k=2;k&gt;=1;--k) _s(i,t,k)=_s(i,t,k-1);\n        _s(i,t,0)=(_s(i,t,1)-b*w%P+P)%P;\n        if(t==0){//a[i-1]\n            for(int k=0;k&lt;=2;++k)\n                for(int j=2;j&gt;=1;--j) _d(i,j,k)=_d(i,j-1,k);\n            for(int k=0;k&lt;=2;++k) _d(i,0,k)=(_d(i,1,k)-b*_s(i,1,k)%P+P)%P;\n        }else{//a[i+1]\n            for(int j=0;j&lt;=2;++j)\n                for(int k=2;k&gt;=1;--k) _d(i,j,k)=_d(i,j,k-1);\n            for(int j=0;j&lt;=2;++j) _d(i,j,0)=(_d(i,j,1)-b*_s(i,0,j)%P+P)%P;\n        }\n    }else{\n        for(int k=2;k&gt;=1;--k) _s(i,t,k)=_s(i,t,k-1);\n        _s(i,t,0)=(_s(i,t,2)-_s(i,t,1)+P-b*w%P+P)%P*inva%P;\n        if(t==0){//a[i-1]\n            for(int k=0;k&lt;=2;++k)\n                for(int j=2;j&gt;=1;--j) _d(i,j,k)=_d(i,j-1,k);\n            for(int k=0;k&lt;=2;++k) _d(i,0,k)=(_d(i,2,k)-_d(i,1,k)+P-b*_s(i,1,k)%P+P)%P*inva%P;\n        }else{//a[i+1]\n            for(int j=0;j&lt;=2;++j)\n                for(int k=2;k&gt;=1;--k) _d(i,j,k)=_d(i,j,k-1);\n            for(int j=0;j&lt;=2;++j) _d(i,j,0)=(_d(i,j,2)-_d(i,j,1)+P-b*_s(i,0,j)%P+P)%P*inva%P;\n        }\n    }\n}\nvoid calc(int i,int t,int c) {\n    if(!c) return;\n    if(c&gt;0) for(int k=1; k&lt;=c; ++k) add(i,t);\n    else for(int k=1; k&lt;=-c; ++k) del(i,t);\n}\nvoid pushdown(int i) {\n    int l=tre[i].l,r=tre[i].r,c=tre[i].tag[0],d=tre[i].tag[1];\n    if(!c &amp;&amp; !d) return;\n    tre[ls].tag[0]+=c;tre[ls].tag[1]+=d;\n    tre[rs].tag[0]+=c;tre[rs].tag[1]+=d;\n    calc(ls,0,c);calc(ls,1,d);\n    calc(rs,0,c);calc(rs,1,d);\n    tre[i].tag[0]=tre[i].tag[1]=0;\n}\nvoid change(int i,int el,int er,int t,int c) {\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er) {\n        tre[i].tag[t]+=c;\n        calc(i,t,c);\n        return;\n    }\n    pushdown(i);\n    if(el&lt;=mid) change(ls,el,er,t,c);\n    if(er&gt;mid) change(rs,el,er,t,c);\n    pushup(i);\n    return;\n}\nll query(int i,int el,int er) {\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er) return _d(i,2,0);\n    ll ans=0;\n    pushdown(i);\n    if(el&lt;=mid) ans=(ans+query(ls,el,er))%P;\n    if(er&gt;mid) ans=(ans+query(rs,el,er))%P;\n    return ans;\n}\nint main() {\n    n=read1(),q=read1(),a=(long long)read1(),b=(long long)read1();\n    for(int i=1; i&lt;=n; ++i) A[i]=read1();\n    initf();\n    build(1,1,n);\n    for(int i=1; i&lt;=q; ++i) {\n        scanf(\"%s\",ch);_l=read1(),_r=read1();\n        if(ch[0]=='q') {\n            if(_l+1&lt;=_r-1) write1(query(1,_l+1,_r-1)),putchar('\\n');\n            else putchar('0'),putchar('\\n');\n        } else if(ch[0]=='p') {\n            x=_l+1,y=_r+1&lt;n?_r+1:n;change(1,x,y,0,1);\n            x=_l-1&gt;1?_l-1:1,y=_r-1;change(1,x,y,1,1);\n        } else { //m\n            x=_l+1,y=_r+1&lt;n?_r+1:n;change(1,x,y,0,-1);\n            x=_l-1&gt;1?_l-1:1,y=_r-1;change(1,x,y,1,-1);\n        }\n    }\n    return 0;\n}\n</code></pre> <p>~~\u5b66\u6d41\u7a0b\u7528\u4e86\u4e00\u5929\u534a\uff0c\u5199\u4ee3\u7801\u4e0d\u5230\u4e24\u5c0f\u65f6\u5199\u4e86\u4e24\u767e\u884c\uff0c\u6240\u4ee5\u601d\u8def\u6e05\u6670\u662f\u975e\u5e38\u91cd\u8981\u7684\u3002~~</p>"},{"location":"my%20past/OI/%E7%A6%BB%E6%95%A3%E5%8C%96_%E5%93%88%E5%B8%8C/","title":"\u79bb\u6563\u4f18\u5316","text":""},{"location":"my%20past/OI/%E7%A6%BB%E6%95%A3%E5%8C%96_%E5%93%88%E5%B8%8C/#_2","title":"\u5e94\u7528","text":"<p>\u89e3\u51b3\u6709\u5df2\u77e5\u7684\u56fa\u5b9a\u8f93\u5165(\u5373\u6ca1\u6709\u5728\u7ebf\u63d2\u5165\uff0c\u79bb\u7ebf\u63d2\u5165\u6240\u6709\u6570\u636e\uff0c\u8ba1\u7b97\u8fc7\u7a0b\u4e0d\u4ea7\u751f\u6570\u636e)\uff0c\u4e14\u8303\u56f4\u8f83\u5927\u7684\u60c5\u51b5\uff0c\u901a\u5e38\u9700\u8981\u7684\u662f\u6392\u540d\u800c\u4e0d\u662f\u5177\u4f53\u6570\u503c\uff0c\u56e0\u6b64\u76f4\u63a5\u6309\u5927\u5c0f\u91cd\u65b0\u8d4b\u4e88\u6bcf\u4e2a\u6570\u4e00\u4e2a\u65b0\u503c\u3002</p> <p>\u6a21\u677f <pre><code>    for(int i=1;i&lt;=n;++i){\n        scanf(\"%d\",&amp;a[i]);\n        b[i]=a[i];\n    }\n    sort(b+1,b+n+1);//\u6392\u5e8f\n    int tot=unique(b+1,b+n+1)-b-1;//\u53bb\u91cd\n    for(int i=1;i&lt;=n;++i)a[i]=lower_bound(b+1,b+tot+1,a[i])-b;//\u91cd\u5b9a\u4e49\u4f4d\u7f6e\n</code></pre></p>"},{"location":"my%20past/OI/%E7%A6%BB%E6%95%A3%E5%8C%96_%E5%93%88%E5%B8%8C/#_3","title":"\u54c8\u5e0c\u4f18\u5316","text":""},{"location":"my%20past/OI/%E7%A6%BB%E6%95%A3%E5%8C%96_%E5%93%88%E5%B8%8C/#_4","title":"\u5e94\u7528","text":"<p>\u89e3\u51b3\u6709\u67e5\u8be2\u4e14\u8303\u56f4\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\uff0c\u4f1a\u9700\u8981\u5177\u4f53\u6570\u503c\u3002</p> <p>\u5f53\u89e3\u51b3\u52a8\u6001\u5728\u7ebf\u95ee\u9898\u65f6(\u53ef\u80fd\u662f\u8ba1\u7b97\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u6570\u636e)\u9700\u8981\u5efa\u7acb\u53ef\u63d2\u5165\u7684hash\u94fe\u8868\uff0c\u79bb\u7ebf\u95ee\u9898\u53ef\u4ee5\u76f4\u63a5\u7528\u6570\u7ec4\u5b58\u50a8\uff0c\u4ece\u5934\u5230\u5c3e\u626b\u4e00\u904d\u5224\u91cd\u3002</p> <p>\u672c\u8d28\u5c31\u662f\u5c06\u7279\u522b\u5927\u7684\u6570\u901a\u8fc7h(k)\u7684\u65b9\u5f0f\u6620\u5c04\u4e3a\u65b0\u7684\u5c0f\u6570\u503c\uff0c\u5e76\u5b58\u50a8\u5230\u94fe\u8868\u6216\u6570\u7ec4\u4e2d\u3002(\u82e5\u662f\u94fe\u8868\u5219\u8303\u56f4\u662f\u94fe\u5934\u6570\u7ec4\u5927\u5c0f\u7684\u8303\u56f4\uff1b\u82e5\u662f\u6570\u7ec4\u5219\u8303\u56f4\u662fint(long long)\u7684\u8303\u56f4\u3002)</p> <p>\u4e0d\u662f\u666e\u901a\u6570\u7684\u4e5f\u53ef\u4ee5\u8fdb\u884chash\u4f18\u5316\uff0c\u4f8b\u5982\u6570\u5b57\u5b57\u7b26\u4e32\u5c31\u53ef\u4ee5\u7528hash\u4f18\u5316\u5b58\u50a8\u3002\uff08\u5c24\u5176\u662f\u5b57\u7b26\u4e32\u4e2d\u6570\u5b57\u7279\u522b\u5927\u7684\u60c5\u51b5\uff0cASCII\u7801\u5b58\u4e0d\u4e0b\uff09</p> <p>~~\u5728\u52a8\u6001\u67e5\u8be2\u4e0a\u56e0\u4e3a\u7801\u91cf\u800c\u5b8c\u80dc\u5e73\u8861\u6811~~</p> <p>P2852</p> <p>\u901a\u8fc7p\u548cP\u89e3\u51b3\u95ee\u9898\u3002</p> <p>\u5b9a\u4e49p=1000017(10007\u4e5f\u884c\uff0c\u5c31\u662f1e6\u4e0d\u9700\u8981\u8fdb\u4f4d\uff0c\u66f4\u76f4\u89c2),P=1000000007,\u53d6\u4e86\u4e24\u4e2a\u8d28\u6570\u9632\u6b62\u51b2\u7a81\u3002</p> <p>\u56e0\u6b64\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a\uff1a\u5c06\u5b57\u7b26\u4e32\u4ee5p\u8fdb\u5236\u6570\u7684\u65b9\u5f0f\u5b58\u50a8\u4e3a\u5c0f\u4e8eP\u7684\u6570\u3002(\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662fhash\u7684\u6838\u5fc3\uff1a\u5c06\u7279\u522b\u5927\u7684\u6570\u901a\u8fc7h(k)\u7684\u65b9\u5f0f\u6620\u5c04\u4e3a\u65b0\u7684\u5c0f\u6570\u503c\uff0c\u5e76\u5b58\u50a8\u3002)</p> <p>\u6ce8\u610f\u5b58\u50a8\u7684\u662fp\u8fdb\u5236\u6570\u572810\u8fdb\u5236\u8868\u793a\u4e0b mod P\u7684\u7ed3\u679c\u3002</p> <p>\u5224\u65ad\u662f\u6392\u4e2a\u5e8f\u5c31\u884c\u3002</p> <p>\u7136\u540e\u4e8c\u5206,\u6ca1\u4e86\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=3e4+10,p=10007,P=1000000007;\nint a[N],b[N],c[N],d[N];\nint n,k;\nvoid init(){\n    b[0]=0;\n    c[0]=1;\n    for(int i=1;i&lt;=n;++i){\n        b[i]=(b[i-1]*p+a[i])%P;\n    }\n    for(int i=1;i&lt;=n;++i){\n        c[i]=(c[i-1]*p)%P; \n    }\n    return;\n}\nbool cmp(int a,int b){\n    return a&lt;b;//:)\n}\nbool check(int x){\n    memset(d,0,sizeof d);\n    int top=0;\n    for(int i=x;i&lt;=n;++i){\n        d[++top]=(b[i]-b[i-x]*c[x])%P;\n        if(d[top]&lt;0)d[top]+=P;\n    }\n    sort(d+1,d+top+1,cmp);\n    int cnt=0,ans=0;\n    for(int i=1;i&lt;=top;++i){\n        cnt++;\n        if(d[i+1]!=d[i] || i==top){\n            ans=max(ans,cnt);\n            cnt=0;\n        }\n    }\n    return ans&gt;=k;\n}\nint solve(){\n    int l=0,r=n+1,ans=0;\n    while(l&lt;r){\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)){\n            ans=max(ans,mid);\n            l=mid+1;\n        }else r=mid;\n    }\n    return ans;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]);\n    init();\n    int ans=solve();\n    printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E7%A6%BB%E6%95%A3%E5%8C%96_%E5%93%88%E5%B8%8C/#_5","title":"\u5eb7\u6258\u5c55\u5f00","text":"<p>\u672c\u8d28\u4e5f\u662f\u4e00\u79cdhash\u4f18\u5316\uff0c\u8fd9\u6b21\u7684\u6620\u5c04\u51fd\u6570\u4e3acantor(k)\u3002\u5bf9\u4e8e\u4e00\u4e2a\u5168\u6392\u5217,\u5176\u5eb7\u6258\u5c55\u5f00\u4e3a $$ cantor(k)=\\sum_{k=n}^1 f(a[k])* (k-1)!$$ f(a[k])\u6307\u6bd4a[k]\u5c0f\u7684\uff0c\u672a\u51fa\u73b0\u7684\u6570\u7684\u4e2a\u6570\u3002 \u4f8b\u598234512\u503c\u4e3a61,\u6240\u4ee5\u662f\u7b2c62\u4e2a\u3002</p> <p>P1379</p> <p>\u56e0\u4e3a\u603b\u5171\u7684\u72b6\u6001\u4e00\u51719!=362880\u79cd\uff0c\u4e14\u540e\u8fdb\u961f\u7684\u91cd\u590d\u72b6\u6001\u4e00\u5b9a\u6ca1\u6709\u4e4b\u524d\u7684\u754c\u66f4\u4f18\uff0c\u6240\u4ee5\u76f4\u63a5\u526a\u679dbfs\u5373\u53ef\uff0c\u7528cantor(k)\u5224\u65ad\u662f\u5426\u5165\u961f\u3002 <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;queue&gt;\n#define int long long \nusing namespace std;\nconst int N=4e5+10;\nint tmp[3][3],d[3][3]={1,2,3,8,0,4,7,6,5};\nint dx[4]={1,0,-1,0},dy[4]={0,1,0,-1};\nint vis[9],vist[N];\nint l[10];\nint n,goal;\nstruct node{\n    int v;\n    int step;\n    int d[3][3];\n    node(int vv,int s,int dd[3][3]){\n        v=vv;\n        step=s;\n        for(int i=0;i&lt;3;++i){\n            for(int j=0;j&lt;3;++j)d[i][j]=dd[i][j];\n        }\n    }\n};\nint cantor(int d[3][3]){//3x3-&gt;cantor\n    memset(vis,0,sizeof vis);\n    int ans=0;\n    for(int i=0;i&lt;3;++i){\n        for(int j=0;j&lt;3;++j){\n            int cnt=0;\n            for(int k=0;k&lt;d[i][j];++k)if(vis[k])cnt++;\n            ans+=(d[i][j]-cnt)*l[9-i*3-j-1];\n            vis[d[i][j]]=1;\n        }\n    }\n    return ans;\n}\nvoid get1(int n){//int-&gt;3x3\n    for(int i=2;i&gt;=0;--i){\n        for(int j=2;j&gt;=0;--j){\n            d[i][j]=n%10;\n            n/=10;\n        }\n    }\n    return;\n}\nvoid init(){\n    l[0]=l[1]=1;\n    for(int i=2;i&lt;=9;++i)l[i]=l[i-1]*i;\n    goal=cantor(d);\n    return;\n}\nint bfs(){\n    memset(vist,0,sizeof vist);\n    queue&lt;node&gt; q;\n    get1(n);\n    while(!q.empty())q.pop();\n    int a=cantor(d);\n    q.push(node(a,0,d));\n    vist[a]=1;\n    while(!q.empty()){\n        memcpy(d,q.front().d,sizeof q.front().d);\n        int step=q.front().step;\n        int a=cantor(d);\n        if(a==goal)return step;\n        int x=0,y=0;\n        for(int i=0;i&lt;3;++i){\n            for(int j=0;j&lt;3;++j){\n                if(d[i][j]==0){\n                    x=i,y=j;\n                    break;  \n                }\n            }\n        }\n        q.pop();\n        for(int i=0;i&lt;4;++i){\n            int xx=dx[i]+x,yy=y+dy[i];\n            if(xx&gt;=0 &amp;&amp; xx&lt;3 &amp;&amp; yy&gt;=0 &amp;&amp; yy&lt;3){\n                memcpy(tmp,d,sizeof d);\n                swap(tmp[x][y],tmp[xx][yy]);\n                int a=cantor(tmp);\n                if(a==goal)return step+1;\n                if(!vist[a]){\n                    vist[a]=1;\n                    q.push(node(a,step+1,tmp));\n                }\n            }\n        }\n    }\n    return -1;\n}\nsigned main(){\n    init();\n    if(goal!=46685)goal=46685;\n    scanf(\"%lld\",&amp;n);\n    printf(\"%lld\",bfs());\n    return 0;\n}\n</code></pre></p>"},{"location":"my%20past/OI/%E7%BA%BF%E6%80%A7dp/","title":"\u7ebf\u6027dp/\u666e\u901adp","text":""},{"location":"my%20past/OI/%E7%BA%BF%E6%80%A7dp/#dp","title":"\u5750\u6807dp","text":"<p>P7074</p> <p>\u7531\u4e8e\u4ece\u4e0a\u5f80\u4e0b\u6709\u540e\u6548\u6027\uff0c\u6240\u4ee5\u65cb\u8f6c90\u5ea6\u540e\u518d\u505adp</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5750\u6807\uff0c\u90fd\u6709\u4e24\u79cd\u65b9\u5411\uff0c\u5411\u5de6\u548c\u5411\u53f3\u3002</p> <p>\u6240\u4ee5\u8bbef[i][j][0/1]\u8868\u793a\u5de6/\u53f3\u65b9\u5411\u65f6\u7684\u6700\u5927\u503c\u3002</p> <p>\u6b64\u65f6\u6709\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ f[i][j][0]=max(f[i][j][0],max(f[i][j-1][0],f[i][j-1][1])+c[i][j]);(i=1\\to n)\\\\ f[i][j][1]=max(f[i][j][1],max(f[i][j-1][0],f[i][j-1][1])+c[i][j]);(i=1\\to n)\\\\ f[i][j][0]=max(f[i][j][0],f[i-1][j][0]+c[i][j]);(i=1\\to n)\\\\ f[i][j][1]=max(f[i][j][1],f[i+1][j][1]+c[i][j]);(i=n\\to 1) \\] <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=1e3+10,INF=1e12;\nint n,m;\nint c[N][N],f[N][N][2];\n\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=m;++j){\n            scanf(\"%lld\",&amp;c[i][j]);\n        }\n    }\n    for(int i=0;i&lt;=n+1;++i){\n        for(int j=0;j&lt;=m+1;++j){\n            f[i][j][0]=-INF;\n            f[i][j][1]=-INF;\n        }\n    }\n    f[1][1][0]=f[1][1][1]=c[1][1];\n    for(int j=1;j&lt;=m;++j){\n        for(int i=1;i&lt;=n;++i){\n            f[i][j][0]=max(f[i][j][0],max(f[i][j-1][0],f[i][j-1][1])+c[i][j]);\n            f[i][j][1]=max(f[i][j][1],max(f[i][j-1][0],f[i][j-1][1])+c[i][j]);\n            f[i][j][0]=max(f[i][j][0],f[i-1][j][0]+c[i][j]);\n        }\n        for(int i=n;i&gt;=1;--i){\n            f[i][j][1]=max(f[i][j][1],f[i+1][j][1]+c[i][j]);\n        }\n    }\n    printf(\"%lld\",max(f[n][m][0],f[n][m][1]));\n    return 0;\n}\n</code></pre> <p>P1437</p> <p>\u56e0\u4e3a\u4ece\u4e0a\u5f80\u4e0b\u641c\u4f1a\u5b58\u5728\u540e\u6548\u6027\uff0c\u6240\u4ee5\u8981\u4ece\u53f3\u5f80\u5de6\u641c\u3002 \u8bbef[i][j][k]\u8868\u793a\u7b2ci\u5217\u53bb\u4e86j\u4e2a\u7816\u5757\u4e14\u603b\u5171\u53bb\u53d6\u4e86k\u4e2a\u7816\u5757\u7684\u72b6\u6001\u3002</p> <p>\u8f6c\u79fb\u65b9\u7a0b+code\uff1a</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#include&lt;cstdio&gt;\nusing namespace std;\nconst int N=55,M=N*N;\nint n,m;\nint a[N][N];\nint f[N][N][M];\nint t[N][N];\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=n-i+1;++j){\n            scanf(\"%d\",&amp;a[i][j]);\n        }\n    }\n    memset(f,-0x3f,sizeof f); //\u907f\u514d\u4e0d\u5408\u6cd5\u72b6\u6001\u7684\u8f6c\u79fb\u3002\u56e0\u4e3a\u6709v\u6bd4k-j\u5927\u7684\u60c5\u51b5\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0d\u5408\u6cd5\uff0c\u56e0\u6b64\u5e94\u8be5\u4e3a\u8d1f\u65e0\u7a77\n    f[n+1][0][0]=0;//\u521d\u59cb\u5316\n    int ans=0;\n    for(int i=n;i&gt;=1;--i){\n        for(int j=0,sum=0;j&lt;=n-i+1;++j,sum+=a[j][i]){\n            for(int v=max(j-1,0)/*\u9632\u6ea2\u51fa*/;v&lt;=n-i;++v){//\u8868\u793a\u4e0a\u4e00\u5217\u81f3\u5c11\u8981\u53d6j-1\u4e2a\uff0c\u6700\u591a\uff08n-i+1\uff09-1\u4e2a\n                for(int k=j;k&lt;=m;++k){\n                    f[i][j][k]=max(f[i][j][k],f[i+1][v][k-j]+sum);\n                }\n            }\n        }\n    }\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=n-i+1;++j)ans=max(ans,f[i][j][m]);\n    }\n    printf(\"%d\",ans);\n    return 0;\n} \n/*\n4 6\n2 2 3 4\n8 2 7\n2 3\n49\n\n*/\n</code></pre> <p>CF360B</p> <p>~~\u6211\u662f\u50bb\u903c~~</p> <p>\u4e8c\u5206+dp</p> <p>\u8bbedp[i]\u8868\u793a\\(a_i\\)\u4e0d\u6539\u65f61~i\u6700\u591a\u4e0d\u6539\u7684\u4e2a\u6570\u3002</p> <p>\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a</p> <pre><code>    for(int i=2;i&lt;=n;++i){\n        for(int j=1;j&lt;i;++j){\n            if(x*(i-j)&gt;=abs1(a[i]-a[j])){\n                dp[i]=max(dp[i],dp[j]+1);\n            }\n        }\n    }\n</code></pre> <p>\u6761\u4ef6\u662f\u53ea\u8981\u4e24\u4e2a\u6570\u76f8\u5dee\u5728\u5f53\u524d\u4e8c\u5206\u7684\u957f\u5ea6\u8303\u56f4\u5185\uff0c\u90a3\u4e48\u5c31\u5c06i\u5230j\u4e4b\u95f4\u505a\u66f4\u6539\uff0ci\u548cj\u4fdd\u6301\u4e0d\u53d8\uff0c\u770b\u6700\u591a\u7559\u4e0b\u51e0\u4e2a\u6570\u4e0d\u6539\u3002</p> <p>\u6b63\u786e\u6027\u662f\u56e0\u4e3a\u5982\u679ci\u5230j\u4e4b\u95f4\u6709\u5176\u4ed6\u4e0ei\u7b26\u5408\u8fd9\u4e2a\u6761\u4ef6\u7684\u6570k\uff0c\u90a3\u4e48k\u4e00\u5b9a\u4f1a\u88abi\u641c\u5230\uff0c\u53ef\u80fd\u5b58\u5728\u66f4\u4f18\u7684\u7ed3\u679c\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=2200,INF=0x7fffffff;\nint a[N],dp[N];\nint n,k;\nint abs1(int x){\n    return x&gt;0?x:-x;\n}\nbool check(int x){\n    int cnt=0;\n    for(int i=1;i&lt;=n;++i)dp[i]=1;\n    for(int i=2;i&lt;=n;++i){\n        for(int j=1;j&lt;i;++j){\n            if(x*(i-j)&gt;=abs1(a[i]-a[j])){\n                dp[i]=max(dp[i],dp[j]+1);\n            }\n        }\n    }\n    for(int i=1;i&lt;=n;++i){\n        if(i-dp[i]+n-i&lt;=k)return true;\n    }\n    return false;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]);\n\n    int l=0,r=INF,ans=INF;\n    while(l&lt;r){\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)){\n            r=mid;\n            ans=mid;\n        }else l=mid+1;\n    }\n    printf(\"%lld\",ans);\n\n\n    return 0;\n} \n</code></pre> <p>UVA1025</p> <p>\u8bbe\\(f[i][j]\\)\u8868\u793a\u5728\u7b2c\\(j\\)\u79d2\u5230\u8fbe\u7b2c\\(i\\)\u4e2a\u8f66\u7ad9\u65f6\u7684\u6700\u5c0f\u7b49\u5f85\u65f6\u95f4\u3002</p> <p>\u90a3\u4e48\u6bcf\u6b21\u7531\u4e09\u79cd\u51b3\u7b56\uff1a</p> <p>1) \u5982\u679c\u4e0d\u662f1\u53f7\u8f66\u7ad9\u5e76\u4e14\u6b64\u65f6\u6709\u5411\u5de6\u7684\u8f66\uff0c\u5c31\u5411\u5de6\u8fb9\u3002 2) \u5982\u679c\u4e0d\u662fn\u53f7\u8f66\u7ad9\u5e76\u4e14\u6b64\u65f6\u6709\u5411\u53f3\u7684\u8f66\uff0c\u5c31\u5411\u53f3\u8fb9\u3002 3) \u5728\u8fd9\u4e2a\u8f66\u7ad9\u7b49\u5f851\u79d2\u3002</p> <p>\u5224\u65ad\u6b64\u65f6\u6709\u6ca1\u6709\u5411\u5de6\u5411\u53f3\u7684\u8f66\u53ef\u4ee5\u9884\u5904\u7406\u51fa\\(g[i][j][0/1]\\)</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=55,T=220,INF=0x3f3f3f3f;\nint f[N][T],g[N][T][2];\nint u[T],v[T],a[N],b[N],s[N];\nint n,t,M1,M2,cnt;\nvoid init() {\n    memset(u,0,sizeof u);memset(v,0,sizeof v);memset(g,0,sizeof g);memset(f,0x3f,sizeof f);\n    scanf(\"%d\",&amp;t);\n    for(int i=1;i&lt;n;++i)scanf(\"%d\",&amp;s[i]);\n    a[1]=0;b[n]=0;\n    for(int i=2;i&lt;=n;++i)a[i]=a[i-1]+s[i-1];\n    for(int i=n-1;i&gt;=1;--i)b[i]=b[i+1]+s[i];\n    scanf(\"%d\",&amp;M1);\n    for(int i=1,tmp; i&lt;=M1; ++i)scanf(\"%d\",&amp;tmp),u[tmp]=1;\n    scanf(\"%d\",&amp;M2);\n    for(int i=1,tmp; i&lt;=M2; ++i)scanf(\"%d\",&amp;tmp),v[tmp]=1;\n    for(int i=1;i&lt;=n;++i)\n        for(int j=0;j&lt;=t;++j)\n            if(j&gt;=a[i] &amp;&amp; u[j-a[i]])g[i][j][1]=1;\n            if(j&gt;=b[i] &amp;&amp; v[j-b[i]])g[i][j][0]=1;\n    f[1][0]=0;\n}\nvoid dp(){\n    for(int j=0;j&lt;=t;++j)\n        for(int i=1;i&lt;=n;++i)\n            if(g[i][j][0] &amp;&amp; i&gt;1)f[i-1][j+s[i-1]]=min(f[i-1][j+s[i-1]],f[i][j]);\n            if(g[i][j][1] &amp;&amp; i&lt;n)f[i+1][j+s[i]]=min(f[i+1][j+s[i]],f[i][j]);\n            f[i][j+1]=min(f[i][j+1],f[i][j]+1); \n}\nint main() {\n    while(1) {\n        scanf(\"%d\",&amp;n);\n        if(!n)return 0;\n        ++cnt;\n        init();\n        dp();\n        printf(\"Case Number %d: \",cnt);\n        if(f[n][t]==INF)printf(\"impossible\\n\");\n        else printf(\"%d\\n\",f[n][t]);\n    }\n    return 0;\n}\n</code></pre> <ul> <li>\u7ed3\u8bba\uff1a\u5c06\u51b3\u7b56\u5bf9\u5e94\u72b6\u6001\u8bbe\u6210\u8f6c\u79fb\u65b9\u7a0b\u3002</li> </ul> <p>P5017</p> <p>\u5f00\u59cb\u60f3\u5230\u8bbe\\(f[i][j]\\)\u8868\u793a\u6709\\(i\\)\u4e2a\u4eba\u7b49\u5f85\uff0c\u5728\u7b2c\\(j\\)\u5206\u949f\u7684\u60c5\u51b5\u3002</p> <p>~~\u540e\u6765\u53d1\u73b0\u76f4\u63a5\u7206\u70b8~~</p> <p>\u53d1\u73b0\u6211\u4eec\u65e0\u6cd5\u8bb0\u5f55\u7b49\u5f85\u7684\u4eba\u90fd\u662f\u8c01\uff0c\u6240\u4ee5\u5c31\u4e0d\u8bb0\u5f55\uff0c\u5728\u8f6c\u79fb\u65f6\u7b97\u51fa\u6765\u3002</p> <p>\u6240\u4ee5\u8bbe\\(f[i][j]\\)\u8868\u793a\u8003\u8651\u5230\u7b2c\\(i\\)\u4e2a\u4eba\uff0c\u7b2c\\(j\\)\u5206\u949f\u7684\u60c5\u51b5\uff0c\u5c06\\(f[i][j]\\)\u8f6c\u79fb\u5230\\(f[i+k][j+m]\\)\u548c\\(f[i][j+1]\\),\u8868\u793a\u7acb\u523b\u53d1\u8f66\u548c\u7b49\u5f85\u4e00\u5206\u949f\u7684\u60c5\u51b5\u3002</p> <p>~~\u7ed3\u679c\u8fd8\u662f\u7206\u70b8~~</p> <p>\u6b63\u786e\u505a\u6cd5\u662f\uff1a</p> <p>\u6211\u4eec\u53d1\u73b0\u6709\u4e2a\u6027\u8d28\uff0c\u5c31\u662f\u6bcf\u4e2a\u4eba\u7b49\u5f85\u65f6\u95f4\u4e0d\u8d85\u8fc7\\(m-1\\)\uff0c\u56e0\u4e3a\u5c31\u7b97\u8fd9\u4e2a\u4eba\u5230\u8fbe\u7684\u524d\u4e00\u79d2\u949f\u53d1\u8f66\uff0c\u8fd8\u662f\u80fd\u5728\\(m-1\\)\u79d2\u540e\u4e0a\u8f66\u3002</p> <p>\u6b64\u65f6\u5047\u8bbe\u7b2c\\(i\\)\u4e2a\u4eba\u5728\\(t[i]+j\\)\u79d2\u4e0a\u8f66\uff0c\u90a3\u4e48\u5728\\([t[i]+j+1,t[i]+j+m]\\)\u79d2\u5185\u7684\u4eba\u7684\u7b49\u5f85\u65f6\u95f4\u5c31\u662f\u8fd9\u6b21\u8f6c\u79fb\u7684\u6240\u6709\u8d21\u732e\uff0c\u800c\u4e0d\u7528\u52a0\u4e0a\\([t[i]+j-m+1,t[i]+j+m]\\)\u79d2\u5185\u7684\u8d21\u732e\uff0c\u56e0\u4e3a\u8fd9\u4e2a\u5728\u4e0a\u4e00\u8f6e\u5df2\u7ecf\u8ba1\u7b97\u8fc7\u4e86\u3002</p> <p>\u6b64\u65f6\u6211\u4eec\u53ea\u8003\u8651\u7b2c\\(i\\)\u4e2a\u4eba\u7b49\u5f85\\(\\min(m-1,t[i+1]-t[i])\\)\u79d2\u7684\u65f6\u95f4\u5373\u53ef\u3002</p> <p>\u8bbe\\(f[i][j]\\)\u8868\u793a\u7b2c\\(i\\)\u4e2a\u4eba\u53ca\u4e4b\u524d\u7684\u6240\u6709\u4eba\u8981\u4e48\u5df2\u7ecf\u5230\u8fbe\u4e86\u76ee\u7684\u5730\uff0c\u8981\u4e48\u5df2\u7ecf\u5728\u8f66\u4e0a\u65f6\uff0c\u4e14\\(i\\)\u6070\u597d\u7b49\u4e86\\(j\\)\u79d2\u624d\u4e0a\u8f66\u7684\u6700\u4f18\u89e3\u3002</p> <p>\u56e0\u4e3a\u7b2c\\(i+1\\)\u4e2a\u4eba\u5230\u7b2c\\(k\\)\u4e2a\u4eba\u90fd\u4e0d\u4f1a\u4e0a\u8f66\uff0c\u90fd\u8981\u7b49\u5230\\(t[i]+j+m=tmp+t[i+k]\\)\u79d2\uff0c\u6240\u4ee5\u4ed6\u4eec\u7b49\u5f85\u7684\u603b\u65f6\u95f4\u4e3a\\(\\sum_{v=i+1}^{i+k} tmp+t[i+k]-t[v]\\),\u56e0\u4e3a\\(tmp+t[i+k]\\)\u4e3a\u5b9a\u503c\uff0c\u6240\u4ee5\u539f\u5f0f\u4e3a$k* (tmp+t[i+k])-(s[i+k]-s[i]) $</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=550,INF=0x3f3f3f3f;\nint f[N][N];\nint t[N],s[N];\nint n,m;\nbool cmp(int a,int b){return a&lt;b;}\nint main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;t[i]);\n    sort(t+1,t+n+1,cmp);\n    for(int i=1;i&lt;=n;++i)s[i]=s[i-1]+t[i];\n    memset(f,0x3f,sizeof f);\n    t[0]=-INF;\n    f[0][0]=0;\n    for(int i=0;i&lt;=n;++i){\n        int maxn=min(m-1,t[i+1]-t[i]);\n        for(int j=0;j&lt;=maxn;++j){\n            if(f[i][j]&gt;=INF)continue;\n\n            for(int k=1;i+k&lt;=n;++k){\n                int tmp=max(t[i]+j+m-t[i+k],0);\n                f[i+k][tmp]=min(f[i+k][tmp],f[i][j]+(tmp+t[i+k])*k-(s[i+k]-s[i]));\n            }\n        }\n    }\n    int ans=INF;\n    for(int i=0;i&lt;m;++i)ans=min(ans,f[n][i]);\n    printf(\"%d\",ans);\n    return 0;\n} \n</code></pre> <p>P3957</p> <p>\u6bcf\u6b21\u7684\\(dp\\)\u5c31\u662f\u53d6\\([i-R,i-L]\\)\u5185\u7684$f[j]_ { \\max } $,\u800c\u8fd9\u4e2a\u4e1c\u897f\u663e\u7136\u53ef\u4ee5\u7528\u5355\u8c03\u961f\u5217\u7ef4\u62a4\u3002</p> <p>\u6ce8\u610f\u6bcf\u6b21\u7684\u64cd\u4f5c\u5e94\u8be5\u5148\u4ece\u53f3\u52a0\u5165\u5143\u7d20\uff0c\u5728\u4ece\u5de6\u5220\u9664\uff0c\u5426\u5219\u4f1a\u51fa\u9519~~\u8fd9\u662f\u4e2a\u672a\u89e3\u4e4b\u8c1c\uff1f~~</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long\nusing namespace std;\nconst int N=5e5+10,INF=1e18;\nint n,d,k;\nint x[N],s[N],f[N];\nint q[N];\nbool check(int g) {\n    int L=max(d-g,1ll),R=d+g,ans=-INF,l=1,r=0,tot=0;//\u6ce8\u610f\u51fa\u89c6\u72b6\u6001\u7684\u8bbe\u5b9a\n    memset(f,-0x3f,sizeof f);\n    f[0]=0;\n    memset(q,0,sizeof q);//\u5b58\u50a8\u7684\u662f\u6700\u4f18\u89e3\u7684\u6807\u53f71~n\n    for(int i=1; i&lt;=n; ++i) {\n        while(x[tot]&lt;=x[i]-L &amp;&amp; tot&lt;i) {//1,\u4e0e2\u7684\u987a\u5e8f\n            if(f[tot]&gt;-INF) {//\u9632\u6b62\u975e\u6cd5\u72b6\u6001\u8f6c\u79fb\n                while(r&gt;=l &amp;&amp; f[tot]&gt;f[q[r]])--r;\n                q[++r]=tot;\n            } \n            ++tot;\n        }\n        while(r&gt;=l &amp;&amp; x[i]-R&gt;x[q[l]])++l;//2\uff0c\u88ab\u5751\u6b7b\uff0c\u6ce8\u610f\u4e0e1\u7684\u987a\u5e8f\u4e0d\u8981\u98a0\u5012\n        if(r&gt;=l){\n            f[i]=max(f[i],f[q[l]]+s[i]);\n        }\n        ans=max(ans,f[i]);  \n    }\n    return ans&gt;=k;\n}\nsigned main() {\n    scanf(\"%lld%lld%lld\",&amp;n,&amp;d,&amp;k);\n    for(int i=1; i&lt;=n; ++i)scanf(\"%lld%lld\",&amp;x[i],&amp;s[i]);\n    int l=0,r=INF,ans=-1;\n    while(l&lt;r) {\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)) {\n            ans=mid;\n            r=mid;\n        } else l=mid+1;\n    }\n    if(l&gt;=N) {\n        printf(\"-1\");\n    } else printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre> \u987a\u4fbf\u7ec3\u7ec3\u53cc\u7aef\u961f\u5217\\(deque\\)\u6765\u5b9e\u73b0\u5355\u8c03\u961f\u5217</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;queue&gt;\n#define int long long\nusing namespace std;\nconst int N=5e5+10,INF=1e18;\nint n,d,k;\nint x[N],s[N],f[N];\nint read1(){int x=0,f=1;char ch=getchar();while(ch&gt;'9' || ch&lt;'0'){if(ch=='-')f=-1;ch=getchar();}while(ch&lt;='9' &amp;&amp; ch&gt;='0'){x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';ch=getchar();}return x*f;}\nbool check(int g) {\n    int L=max(d-g,1ll),R=d+g,ans=-INF,tot=0;\n    memset(f,-0x3f,sizeof f);\n    f[0]=0;\n    deque&lt;int&gt; q;\n    for(int i=1; i&lt;=n; ++i) {\n        while(x[tot]&lt;=x[i]-L &amp;&amp; tot&lt;i) {\n            if(f[tot]&gt;-INF) {\n                while(!q.empty() &amp;&amp; f[tot]&gt;f[q.back()])q.pop_back();\n                q.push_back(tot);\n            } \n            ++tot;\n        }\n        while(!q.empty() &amp;&amp; x[i]-R&gt;x[q.front()])q.pop_front();\n        if(!q.empty()){\n            f[i]=max(f[i],f[q.front()]+s[i]);\n        }\n        ans=max(ans,f[i]);  \n    }\n    return ans&gt;=k;\n}\nsigned main() {\n    n=read1(),d=read1(),k=read1();\n    for(int i=1; i&lt;=n; ++i)x[i]=read1(),s[i]=read1();\n    int l=0,r=INF,ans=-1;\n    while(l&lt;r) {\n        int mid=l+r&gt;&gt;1;\n        if(check(mid)) {\n            ans=mid;\n            r=mid;\n        } else l=mid+1;\n    }\n    if(l&gt;=N) {\n        printf(\"-1\");\n    } else printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre> ~~\u5b9e\u6d4bSTL\u662f\u771f\u7684\u6162\uff0c\u5feb\u8bfb\u5438\u6c27\u90fd\u62ef\u6551\u4e0d\u4e86~~</p>"},{"location":"my%20past/OI/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/","title":"\u7ebf\u6027\u4ee3\u6570","text":""},{"location":"my%20past/OI/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_2","title":"\u7ebf\u6027\u57fa","text":""},{"location":"my%20past/OI/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_3","title":"\u5b9a\u4e49","text":"<p>\u5b9a\u4e49\u4e00\u4e2ap\u6570\u7ec4\uff0c\u6ee1\u8db3\u5bf9\u4e8e\u4efb\u610fa\u6570\u7ec4\u4e2d\u7684\u6570\uff0c\u90fd\u80fd\u7531p\u4e2d\u4e00\u4e9b\u5143\u7d20\u5f02\u6216\u5f97\u6765\uff0c\u5e76\u4e14\u4fdd\u8bc1p\u5143\u7d20\u4e2a\u6570\u6700\u5c11\u3002</p> <p>\u5176\u4e2da\u6570\u7ec4\u4e2d\u6570\u7684\u4e2a\u6570\u4e3an\uff0c\u6700\u5927\u503c\u7ea6\u4e3a\\(2^N\\)\uff0c\u5219p\u6570\u7ec4\u7684\u5927\u5c0f\u4e3a\\(\\Theta(N)\\)\uff0c\u5373\u5c06a\u4e2d\u7684\u6570\u770b\u62102\u8fdb\u5236\u6570\uff0cp\u53ea\u7531N\u4e2a\u7b2ci\u4f4d\u662f\u6700\u9ad8\u4f4d1\u7684\u6570\u7ec4\u6210\uff0c1&lt;=i&lt;=N\u3002</p> <p>\u81f3\u4e8e\u4e3a\u4ec0\u4e48\u4e0d\u4f7f\u7528\u6700\u9ad8\u4f4d\u4e3a1\uff0c\u5176\u4ed6\u4f4d\u5168\u4e3a0\u7684\u6570\u4f5c\u4e3a\u57fa\uff0c\u56e0\u4e3a\u5982\u679c\u8d2a\u5fc3\u5730\uff0c\u53ea\u8981\\(a\\)\u6570\u7ec4\u7b2c\\(i\\)\u4f4d\u67091\uff0c\u5c31\u52a0\u5165\\(2^{i-1}\\)\u4f5c\u4e3a\u57fa\uff0c\u4f46\u662f\u53ef\u80fd\u6709\u4e00\u4e2a\u57fa\u7b2c\\(i\\)\u4f4d\u662f1\uff0c\u53ef\u4ee5\u8868\u793a\u8fd9\u4e2a\u6570\uff0c\u90a3\u4e48\u5c31\u4e0d\u9700\u8981\\(2^{i-1}\\)\uff0c\u5373\u6c42\u51fa\u7684\u57fa\u4e0d\u4e00\u5b9a\u662f\u6700\u5c11\u7684\u3002</p>"},{"location":"my%20past/OI/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/#_4","title":"\u6784\u9020\u65b9\u5f0f","text":"<p><pre><code>void add(int x){\n    for(int i=N-1;i&gt;=0;--i){\n        if(x&amp;(1ll&lt;&lt;i)){//\u53ef\u4ee5\u75311&lt;&lt;i\u6d88\u53bb\u6700\u9ad8\u4f4d\u76841\uff0c\u7ee7\u7eed\u5339\u914d\u4f4e\u4f4d\u76841,\u6ce8\u610f1ll\n            if(!p[i]){//\u6ca1\u6709\u5bf9\u5e94\u7684p[i]\uff0c\u5c31\u521b\u9020\u4e00\u4e2a\n                p[i]=x;cnt++;break;//cnt\u8868\u793ap\u4e2d\u5143\u7d20\u4e2a\u6570\n            }\n            x^=p[i];//\u6709\u5bf9\u5e94\u7684p[i]\u5c31\u6d88\u53bb\n        }\n    }\n    return;\n}\n</code></pre> * \u89e3\u91ca\uff1a\u56e0\u4e3aa[i]\u53ef\u4ee5\u7531p\u9010\u6e10\u6d88\u53bb\u6700\u9ad8\u4f4d1\uff0c\u6700\u7ec8\u5f97\u52300\uff0c\u6240\u4ee5\u6700\u591a\u53ea\u9700\u8981N\u4e2a\"\u6700\u9ad8\u4f4d1\"\u6570</p> <p>3812 </p> <p>\u771f.\u6a21\u677f</p> <ul> <li>\u4e3a\u4ec0\u4e48\u7531\u7ebf\u6027\u57fa\u4ece\u9ad8\u4f4d\u5230\u4f4e\u4f4d\u8d2a\u5fc3\u5f02\u6216\u51fa\u6765\u7684\u5c31\u662f\u6700\u5927\u503c\uff1f</li> </ul> <p>\u56e0\u4e3a\u5373\u4fbf1011111^111111\u540e\u4f1a\u4f7f\u540e\u4e94\u4f4d\u53d8\u4e3a\u96f6\uff0c\u4f46\u662f\u7b2c\u516d\u4f4d\u4f1a\u53d81\uff0c\u6240\u4ee5\u8d2a\u5fc3\u662f\u6b63\u786e\u6ef4\u30021011111^111111=1100000</p> <ul> <li>\u4f1a\u4e0d\u4f1a\u6700\u5927\u503c\u4e0d\u80fd\u7531\u7ebf\u6027\u57fa\u6784\u9020\u51fa\u6765\uff1f</li> </ul> <p>\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3ax1^x1=0,0^x1=x1,\u5c31\u662f\u8bf4\uff0c\u540c\u4e00\u4e2a\u6570x1\u5f02\u6216\u4efb\u610f\u6b21\u53ea\u80fd\u4e3ax1\u62160\u3002</p> <p>\u5982\u679c\u5b58\u5728\u6700\u5927\u503c\uff0c\u90a3\u4e48\u5b83\u662fa1^a2^...^an\u5f97\u6765,\u5c31\u662f(x1^x2)^(x1^x3)^...^(x2^x3),\u800c\u6700\u540e\u4e00\u5b9a\u80fd\u5316\u4e3ax1^x2^...^xn.</p> <ul> <li>\u4f1a\u4e0d\u4f1a\u7ebf\u6027\u57fa\u5f02\u6216\u51fa\u7684\u6700\u5927\u503c\u4e0d\u80fd\u7531\u539f\u6570\u7ec4\u5f97\u51fa\uff1f</li> </ul> <p>\u4e0d\u53ef\u80fd\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u7ebf\u6027\u57fa\u81f3\u5c11\u7531\u4e00\u4e2a\u539f\u6570\u7ec4\u4e2d\u7684\u6570\u5f97\u51fa\u3002</p> <p>1.\u5047\u8bbe\u4e00\u4e2a\u539f\u6570a\u5305\u542b\u6700\u9ad8\u4f4d\u7ebf\u6027\u57fax1\u548c\u5f53\u524d\u7ebf\u6027\u57fax3\uff0c\u4e00\u4e2a\u539f\u6570b\u5305\u542b\u6b21\u9ad8\u4f4d\u7ebf\u6027\u57fax2\u548c\u5f53\u524d\u7ebf\u6027\u57fax3\uff0c\u90a3\u4e48\uff1a</p> <p>\u82e5\u5148a\uff0c\u5219\u4e0d\u53ef\u80fd\u6709x3\u51fa\u73b0</p> <p>\u82e5\u5148b\uff0c\u5219\u4e0d\u53ef\u80fd\u6709x3\u51fa\u73b0</p> <p>\u6240\u4ee5\u4e0d\u4f1a\u51fa\u73b0x3\u62b5\u6d88x3\u7684\u60c5\u51b5\uff0c\u56e0\u4e3ax3\u4e0d\u53ef\u80fd\u5b58\u5728\u3002</p> <p>2.\u5047\u8bbe\u4e00\u4e2a\u6570a\u5305\u542b\u9ad8\u4f4dx1\u548c\u4f4e\u4f4dx2,\u4e00\u4e2a\u6570b\u5305\u542b\u4f4e\u4f4dx2,\u663e\u7136a\u5c31\u662f\u6700\u5927\u503c.</p> <p>2.\u5047\u8bbe\u4e00\u4e2a\u6570a\u5305\u542b\u9ad8\u4f4dx1,\u4e00\u4e2a\u6570b\u5305\u542b\u4f4e\u4f4dx2,\u663e\u7136a^b\u5c31\u662f\u6700\u5927\u503c</p> <p>\u6240\u4ee5\u4e0d\u53ef\u80fd\u4f1a\u6709\u6700\u5927\u503c\u4e0d\u80fd\u7531\u539f\u6570\u7ec4\u5f97\u51fa\u7684\u60c5\u51b5\u3002</p> <p>P3857 TJOI</p> <p>\u6a21\u677f\u9898\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u5f00\u5173\u90fd\u662f\u4e00\u4e2a2\u8fdb\u5236\u6570\uff0c\u4ee4p\u4e3a\u7ec4\u6210a\u6240\u6709\u6570\u7684\u7ebf\u6027\u57fa\uff0c\u56e0\u4e3a\u6ca1\u8bf4\u4e00\u4e2a\u6570\u53ea\u7528\u4e00\u6b21\uff0c\u90a3\u4e48\u6bcf\u4e2ap[i]\u7531\u88ab\u9009\u548c\u4e0d\u88ab\u9009\u4e24\u79cd\u53ef\u80fd\uff0c\u7b54\u6848\u4e3a\\(2^N\\) <pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#include&lt;cstdio&gt;\n#define int long long \nusing namespace std;\nconst int N=55;\nint a[N&lt;&lt;2],p[N&lt;&lt;2];\nint n,m,cnt;\nint read1(){\n    int x=0;\n    char ch=getchar();\n    while(ch!='O' &amp;&amp; ch!='X'){\n        ch=getchar();\n    }\n    while(ch=='O' || ch=='X'){\n        int f=0;\n        if(ch=='O')f=1;\n        x=(x&lt;&lt;1)+f;\n        ch=getchar();\n    }\n    return x;\n}\nvoid add(int x){\n    for(int i=N-1;i&gt;=0;--i){\n        if(x&amp;(1ll&lt;&lt;i)){\n            if(!p[i]){\n                p[i]=x;cnt++;break;\n            }\n            x^=p[i];\n        }\n    }\n    return;\n}\nint kp(int x,int p){\n    if(p&lt;=1)return x;\n    if(p%2==0)return kp(x*x,p&gt;&gt;1);\n    else return x*kp(x*x,p&gt;&gt;1);\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        a[i]=read1();\n    }\n    cnt=0;\n    for(int i=1;i&lt;=m;++i){\n        add(a[i]);\n    }\n    printf(\"%lld\",(1ll&lt;&lt;cnt)%2008);\n    return 0;\n}\n</code></pre></p> <p>P4570 BJWC</p> <p>~~\u6211\u662f\u50bb\u903c~~</p> <p>\u8fd9\u9053\u9898\u6709\u4e00\u4e2a\u91cd\u8981\u6761\u4ef6\uff0c~~\u4e5f\u662f\u6211\u6ca1\u770b\u89c1\u7684~~\uff0c\u5c31\u662f</p> <p>\u4e00\u4e2a\u77ff\u77f3\u7ec4\u5408\u4f1a\u4ea7\u751f\u201c\u9b54\u6cd5\u62b5\u6d88\u201d\u5f53\u4e14\u4ec5\u5f53\u5b58\u5728\u4e00\u4e2a\u975e\u7a7a\u5b50\u96c6\uff0c\u90a3\u4e9b\u77ff\u77f3\u7684\u5143\u7d20\u5e8f\u53f7\u6309\u4f4d\u5f02\u6216\u8d77\u6765\u4e3a\u96f6</p> <p>\u610f\u601d\u662f\u8bf4\uff0c\u4efb\u4f55\u9b54\u6cd5\u77f3\u4e0d\u80fd\u5f02\u6216\u4e24\u904d\u53ca\u4ee5\u4e0a\uff0c\u6bcf\u4e2a\u7ebf\u6027\u57fa\u53ea\u80fd\u7528\u4e00\u6b21\uff0c\u4e0d\u7ba1\u5b83\u5728\u6bcf\u4e2a\u6570\u4e2d\u51fa\u73b0\u591a\u5c11\u6b21\uff0c\u90a3\u4e48\u6bcf\u4e2a\u7ebf\u6027\u57fa\u7684\u8d21\u732e\u5c31\u662f\u5b83\u7b2c\u4e00\u6b21\u5728\u9b54\u6cd5\u77f3\u4e2d\u51fa\u73b0\u65f6\u7684\u503c\u3002\u8981\u4f7f\u503c\u6700\u5927\uff0c\u5c31\u628a\u9b54\u6cd5\u77f3\u6309\u8d21\u732e\u4ece\u5927\u5230\u5c0f\u6392\u5e8f\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=2100,K=63;\nint n,x,y,ans;\nint p[N];\nstruct node{\n    int x,y;\n}q[N];\nbool cmp(node a,node b){\n    return a.y&gt;b.y;\n}\nvoid add(int i){\n    int x=q[i].x,y=q[i].y;\n    for(int i=K-1;i&gt;=0;--i){\n        if(x&amp;(1ll&lt;&lt;i)){//1ll \u6ce8\u610f\n            if(!p[i]){\n                p[i]=x;\n                ans+=y;\n                break;\n            }\n            x^=p[i];\n        }\n    }\n    return;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%lld%lld\",&amp;q[i].x,&amp;q[i].y);\n    }   \n    sort(q+1,q+n+1,cmp);\n    for(int i=1;i&lt;=n;++i){\n        add(i);\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E7%BA%BF%E6%80%A7%E7%AD%9B/","title":"\u6b27\u62c9\u7b5b","text":"<pre><code>    m=0;\n    for(int i=2;i&lt;=n;++i)vis[i]=1;//\u5047\u8bbe\u6240\u6709\u6570\u4e3a\u8d28\u6570\n    for(int i=2;i&lt;=n;++i){\n        if(vis[i])p[++m]=i;//\u5f53\u524d\u662f\u8d28\u6570\n        for(int j=1;j&lt;=m &amp;&amp; p[j]*i&lt;=n;++j){//\u4ece\u6240\u6709\u5df2\u77e5\u8d28\u6570\u4e2d\u4ece\u5c0f\u5230\u5927\u679a\u4e3e\n            vis[p[j]*i]=0;//\u5f53\u524d\u4e3a\u7d20\u6570\n            if(i%p[j]==0)break;//\u82e5\u5f53\u524d\u7684i\u7684\u56e0\u6570\u5305\u542bp[j]\uff0c\u5219\u5982\u679c\u4e0d\u505c\uff0c\u90a3\u4e48i\u4e0d\u4f5c\u4e3a\u6700\u5c0f\u8d28\u56e0\u6570\u7b5b\u4e86\u4e0b\u4e00\u4e2a\u6570\uff0c\u4e0d\u6ee1\u8db3\u7ebf\u6027\u590d\u6742\u5ea6\uff0c\u5982,(3,4)\u4e0d\u80fd\u7b5b12,\u53ea\u6709(2,6)\u80fd\n        }\n    }\n</code></pre>"},{"location":"my%20past/OI/%E7%BA%BF%E6%AE%B5%E6%A0%91/","title":"\u7ebf\u6bb5\u6811","text":"<p>1) \u7ebf\u6bb5\u6811\u4e2d\u7684\u4f18\u5148\u7ea7\uff1a \u4e58\u6cd5\u5927\u4e8e\u52a0\u6cd5(P3373\u6a21\u677f),\u63a8\u5e73\u5927\u4e8e\u52a0\u6cd5,\u6ce8\u610f\u7ef4\u62a4\u4e24\u4e2a\\(lazytag\\)</p> <p>2) \u7ebf\u6bb5\u6811\u6700\u91cd\u8981\u7684\u662f\u53f6\u8282\u70b9\uff0c\u6709\u65f6\u7236\u8282\u70b9\u53ef\u4ee5\u4e3a0,\u53ea\u6709\u53f6\u8282\u70b9\u6709\u503c\uff0c\u5982\u679c\u6709\u64cd\u4f5c\u5c06\u7236\u8282\u70b9\u7684\u503c\u5206\u88c2\uff0c\u5c31\u4f20\u9012\u7ed9\u53f6\u8282\u70b9\u3002\u8fd9\u4e0d\u662f\u4f20\u7edf\u7ebf\u6bb5\u6811\uff0c\u800c\u662f\u5229\u7528\u4e86\u7ebf\u6bb5\u6811\u7684\u7ed3\u6784\uff0c\u56e0\u6b64\u6ce8\u610f\u7ebf\u6bb5\u6811\u7684\u7075\u6d3b\u6027\u3002(P1558)</p> <p>SP2713 GGS4</p> <p>\u8fd9\u9053\u9898\u7528\u4e86\u4e00\u4e2a\\(_{\u5c0f\u6280\u5de7}\\)</p> <p>\u56e0\u4e3a\u6570\u636e\u8303\u56f4\u662f1e18\uff0c\u6700\u591a\u516d\u6b21\u5c31\u4f1a\u5f97\u52301,\u800c1\u548c0\u5f00\u5e73\u65b9\u540e\u8fd8\u662f\u81ea\u8eab\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u5bf9\u4e0d\u7b49\u4e8e\u4e00\u7684\u6570\u66b4\u529b\u4fee\u6539\uff0c\u82e5\u533a\u95f4\u548c\u5c0f\u4e8e\u7b49\u4e8e\u533a\u95f4\u957f\u5ea6\uff0c\u5219\u53ea\u52691\u62160\uff0c\u4e0d\u9700\u518d\u4fee\u6539\u3002\u603b\u7684\u4fee\u6539\u6b21\u6570\\(\\Theta(6nlogn)\\),\u53c8\u56e0\u4e3a\u6bcf\u6b21\u90fd\u8981\u67e5\u8be2\uff0c\u7528\u4e8e\u5224\u65ad\u6216\u8f93\u51fa\u7b54\u6848\uff0c\u6240\u4ee5\\(\\Theta(nlogn)\\)</p> <p>\u603b\u590d\u6742\u5ea6\\(\\Theta(6nlogn)\\)</p> <p>P1856 &amp; P5490</p> <p>\u626b\u63cf\u7ebf(\u79bb\u6563\u5316+\u7ebf\u6bb5\u6811\uff09</p> <p>\u5c06\u6bcf\u4e2a\u77e9\u5f62\u90fd\u79bb\u6563\u6210\u8fb9\uff0c\u5728\u52a0\u5165\u7ebf\u6bb5\u6811\u4e2d\u3002</p> <p>\u7edf\u8ba1\u7684\u65b9\u5f0f\uff1a</p> <p>\u7528cover\u548clen\u6570\u7ec4\u5206\u522b\u8bb0\u5f55\u8be5\u533a\u95f4\u88ab\u8986\u76d6\u7684\u6b21\u6570\u548c\u88ab\u8986\u76d6\u7684\u957f\u5ea6\u3002</p> <p>\u5982\u679ccover&gt;0\uff0c\u8bf4\u660e\u81f3\u5c11\u88ab\u5168\u8986\u76d6\u4e86\u4e00\u6b21\uff0clen=r-l+1</p> <p>\u5982\u679ccover==0\uff0c\u8bf4\u660e\u6ca1\u6709\u5168\u8986\u76d6\uff0c\u53ef\u80fd\u662f\u8fde\u7eed\u7684\u533a\u95f4\u3002\u6240\u4ee5\u7ee7\u627f\u5b50\u8282\u70b9\u7684\u4fe1\u606f\uff0c\u76f4\u63a5pushup\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n//#define int long long \nusing namespace std;\nconst int N=2e5+10,INF=1e4;\nstruct node{\n    int i,j,x,y;\n}q[N];\nstruct edge{\n    int l;\n    int r;\n    int z;\n    int t;\n}e[N];\nstruct tree{\n    int len,cover;\n}tre[N];\nint n,ans;\nbool cmp1(edge a,edge b){\n    if(a.z==b.z)return a.t&gt;b.t;\n    else return a.z&lt;b.z;\n}\nbool cmp2(edge a,edge b){\n    if(a.z==b.z)return a.t&gt;b.t;\n    else a.z&gt;b.z;\n}\nvoid pushup(int i,int l,int r){\n    if(tre[i].cover&gt;0){\n        tre[i].len=r-l+1;\n    }else{\n        tre[i].len=tre[i&lt;&lt;1].len+tre[i&lt;&lt;1|1].len;\n    }\n}\nvoid change(int i,int l,int r,int el,int er,int k){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tre[i].cover+=k;\n        if(tre[i].cover&gt;0){\n            tre[i].len=r-l+1;\n        }else{\n            tre[i].len=tre[i&lt;&lt;1].len+tre[i&lt;&lt;1|1].len;\n        }\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(el&lt;=mid)change(i&lt;&lt;1,l,mid,el,er,k);\n    if(er&gt;mid)change(i&lt;&lt;1|1,mid+1,r,el,er,k);\n    pushup(i,l,r);\n    return;\n}\n\nvoid ins(int i,int l,int r,int el,int er){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tre[i].cover++;\n        tre[i].len=r-l+1;\n        return;\n    }\n    //if(l+1==r)return;\n    int mid=l+r&gt;&gt;1;\n    if(el&lt;=mid)ins(i&lt;&lt;1,l,mid,el,er);\n    if(er&gt;mid)ins(i&lt;&lt;1|1,mid+1,r,el,er);\n    pushup(i,l,r);\n    return;\n}\nvoid del(int i,int l,int r,int el,int er){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tre[i].cover--;\n        if(tre[i].cover&gt;0)tre[i].len=r-l+1;\n        else tre[i].len=tre[i&lt;&lt;1].len+tre[i&lt;&lt;1|1].len;\n        return;\n    }\n    //if(l+1==r)return;\n    int mid=l+r&gt;&gt;1;\n    if(el&lt;=mid)del(i&lt;&lt;1,l,mid,el,er);\n    if(er&gt;mid)del(i&lt;&lt;1|1,mid+1,r,el,er);\n    pushup(i,l,r);\n    return;\n}\nint abs1(int a){\n    return a&gt;0?a:-a;\n}\nvoid build(int i,int l,int r){\n    if(l==r){\n        tre[i].len=0;\n        tre[i].cover=0;\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(i&lt;&lt;1,l,mid);\n    build(i&lt;&lt;1|1,mid+1,r);\n    //pushup(i,l,r);\n    tre[i].len=0;\n    tre[i].cover=0;\n    return;\n}\nvoid work3(){\n    int cnt=0;\n    for(int i=1;i&lt;=n;++i){\n        e[++cnt].l=q[i].i;\n        e[cnt].r=q[i].x;\n        e[cnt].z=q[i].j;\n        e[cnt].t=1;\n        e[++cnt].l=q[i].i;\n        e[cnt].r=q[i].x;\n        e[cnt].z=q[i].y;\n        e[cnt].t=-1;\n    }\n    sort(e+1,e+cnt+1,cmp1);\n    build(1,-INF,INF);\n    for(int i=1;i&lt;=cnt;++i){\n        int l=e[i].l,r=e[i].r,t=e[i].t;\n        int lst=tre[1].len;\n        change(1,-INF,INF,l,r-1,t);\n        ans+=abs1(lst-tre[1].len);\n    }\n    //cout&lt;&lt;ans&lt;&lt;endl;\n    return;\n}\nvoid work4(){\n    int cnt=0;\n    for(int i=1;i&lt;=n;++i){\n        e[++cnt].l=q[i].j;\n        e[cnt].r=q[i].y;\n        e[cnt].z=q[i].i;\n        e[cnt].t=1;\n        e[++cnt].l=q[i].j;\n        e[cnt].r=q[i].y;\n        e[cnt].z=q[i].x;\n        e[cnt].t=-1;\n    }\n    sort(e+1,e+cnt+1,cmp1);\n    //memset(tre,0,sizeof tre);\n    build(1,-INF,INF);\n    for(int i=1;i&lt;=cnt;++i){\n        int l=e[i].l,r=e[i].r,t=e[i].t;\n        int lst=tre[1].len;\n        change(1,-INF,INF,l,r-1,t);     \n        ans+=abs1(lst-tre[1].len);\n    }\n\n    return;\n}\nvoid work1(){\n    int cnt=0;\n    for(int i=1;i&lt;=n;++i){\n        e[++cnt].l=q[i].i;\n        e[cnt].r=q[i].x;\n        e[cnt].z=q[i].j;\n        e[cnt].t=1;\n        e[++cnt].l=q[i].i;\n        e[cnt].r=q[i].x;\n        e[cnt].z=q[i].y;\n        e[cnt].t=-1;\n    }\n    sort(e+1,e+cnt+1,cmp1);\n    build(1,-INF,INF);\n    for(int i=1;i&lt;=cnt;++i){\n        int l=e[i].l,r=e[i].r,t=e[i].t;\n        int lst=tre[1].len;\n        if(t==1) ins(1,-INF,INF,l,r-1);\n        else del(1,-INF,INF,l,r-1);//cout&lt;&lt;lst&lt;&lt;\" \"&lt;&lt;tre[1].len&lt;&lt;endl;\n        ans+=abs1(lst-tre[1].len);\n    }\n    //cout&lt;&lt;ans&lt;&lt;endl;\n    return;\n}\nvoid work2(){\n    int cnt=0;\n    for(int i=1;i&lt;=n;++i){\n        e[++cnt].l=q[i].j;\n        e[cnt].r=q[i].y;\n        e[cnt].z=q[i].i;\n        e[cnt].t=1;\n        e[++cnt].l=q[i].j;\n        e[cnt].r=q[i].y;\n        e[cnt].z=q[i].x;\n        e[cnt].t=-1;\n    }\n    sort(e+1,e+cnt+1,cmp1);\n    //memset(tre,0,sizeof tre);\n    build(1,-INF,INF);\n    for(int i=1;i&lt;=cnt;++i){\n        int l=e[i].l,r=e[i].r,t=e[i].t;\n        int lst=tre[1].len;\n        if(t==1) ins(1,-INF,INF,l,r-1);\n        else del(1,-INF,INF,l,r-1);\n\n        ans+=abs1(lst-tre[1].len);\n    }\n\n    return;\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%d%d%d%d\",&amp;q[i].i,&amp;q[i].j,&amp;q[i].x,&amp;q[i].y);\n    }\n    ans=0;\n    work3();\n    work4();\n    printf(\"%d\",ans);\n    return 0;\n}\n/*\n2 \n0 0 4 4\n0 4 4 8\n\n*/\n</code></pre> <ul> <li>\u7ebf\u6bb5\u6811\u7684\u7279\u70b9\uff1a\u53ea\u6709\u7528\u5f53\u524d\u533a\u95f4\u65f6\u624d\u7528pushdown\u8ba1\u7b97\u503c,\u4fdd\u8bc1\\(O(nlogn)\\)\uff1b\u5f53\u524d\u533a\u95f4\u4e00\u5b9a\u53ea\u5305\u542b\u5c0f\u533a\u95f4\u548c\u81ea\u5df1\uff0c\u4e0d\u4f1a\u6709\u67d0\u4e2a\u533a\u95f4\u7684\u4e00\u90e8\u5206\u3002</li> </ul> <p>SP1043 GSS1</p> <p>\u7ebf\u6bb5\u6811\u3002</p> <p>\u7528\u7ed3\u6784\u4f53tre\u4f5c\u4e3a\u8282\u70b9\u7ef4\u62a4\u56db\u4e2a\u503c\uff1a</p> <p>\u533a\u95f4\u548c s\uff0c\u533a\u95f4\u6700\u5927\u5b50\u6bb5\u548c t\uff0c\u533a\u95f4\u4ece\u5de6\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u5927\u524d\u7f00\u548c l\uff0c\u533a\u95f4\u4ece\u53f3\u7aef\u70b9\u5f00\u59cb\u7684\u6700\u5927\u540e\u7f00\u548c r\u3002</p> <ul> <li> <ol> <li>\u5982\u4f55\u5408\u5e76\u4e24\u4e2a\u5c0f\u533a\u95f4 ls , rs\uff0c\u5f97\u5230\u5927\u533a\u95f4 i \u7684\u5b50\u6bb5\u548c\uff1f</li> </ol> </li> </ul> <p>\u8003\u8651\u5b50\u6bb5\u548c\u7684\u6700\u5927\u503c\u4ece\u4f55\u800c\u6765\uff1a</p> <p>1\uff09\u7531\u4e24\u4e2a\u5c0f\u533a\u95f4\u81ea\u8eab\u5185\u90e8\u4ea7\u751f\uff0c\u90a3\u4e48\u7b54\u6848\u5c31\u662fmax(tre[ls].t , tre[rs].t)</p> <p>2)\u7531\u4e24\u4e2a\u5c0f\u533a\u95f4\u5408\u5e76\u5f97\u51fa\uff0c\u5219\u7528\u5230\u7684\u5c31\u662f\u5de6\u533a\u95f4\u7684\u540e\u7f00\u548c\u52a0\u6709\u533a\u95f4\u7684\u524d\u7f00\u548c\uff0c\u5408\u5e76\u51fa\u8986\u76d6\u4e24\u4e2a\u5c0f\u533a\u95f4\u7684\u5927\u533a\u95f4\u3002\u6b32\u4f7f\u5176\u503c\u6700\u5927\uff0c\u5219\u53d6\u6700\u5927\u524d\u7f00\u540e\u7f00\u548ctre[ls].r + tre[rs].l\u3002</p> <p>\u56e0\u6b64</p> <p><pre><code>tre[i].t=max(max(tre[i&lt;&lt;1].t,tre[i&lt;&lt;1|1].t),tre[i&lt;&lt;1].r+tre[i&lt;&lt;1|1].l);\n</code></pre> \u8fd9\u91ccls=i&lt;&lt;1 ,rs=i&lt;&lt;1|1.</p> <ul> <li>2.\u5982\u4f55\u7ef4\u62a4\u5f53\u524d\u8282\u70b9\u7684\u6700\u5927\u524d\u7f00\uff0c\u540e\u7f00\u548c\uff1f</li> </ul> <p>\u5f53\u524d\u5927\u533a\u95f4\u7684\u524d\u7f00\u548c\u662f\u957f\u77ed\u4e24\u79cd\u60c5\u51b5\u53d6max\uff0c\u5373\u5de6\u8fb9\u5c0f\u533a\u95f4\u7684\u6700\u5927\u524d\u7f00\u548c\u7684\u503c\uff0c\u548c\u8986\u76d6\u6574\u4e2a\u5de6\u8fb9\u5c0f\u533a\u95f4\u548c\u53f3\u8fb9\u5c0f\u533a\u95f4\u7684\u6700\u5927\u524d\u7f00\u548c\u7684\u503c \u53d6max\u3002</p> <p>\u540e\u7f00\u548c\u540c\u7406\u3002</p> <p><pre><code>tre[i].l=max(tre[i&lt;&lt;1].l,tre[i&lt;&lt;1].s+tre[i&lt;&lt;1|1].l);\n\ntre[i].r=max(tre[i&lt;&lt;1|1].r,tre[i&lt;&lt;1|1].s+tre[i&lt;&lt;1].r);\n</code></pre> \u6700\u540e\u533a\u95f4\u548c\u5c31\u662f\u5de6\u53f3\u533a\u95f4\u76f8\u52a0\u3002</p> <p>\u4e0d\u9700\u8981\u4fee\u6539\uff0c\u53ea\u7528\u67e5\u8be2\u3002</p> <p>\u5177\u4f53\u7684\u770b\u6ce8\u91ca\u548c\u4ee3\u7801\u5427QwQ</p> <p>Code Time\uff1a </p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=1e5+10,INF=15007+5;\nstruct node{\n    int l,r,t,s;\n    node(){//\u521d\u59cb\u5316\uff0c\u9632\u6b62\u968f\u673a\u6570\u636e\u9020\u6210\u5e72\u6270\n        l=-INF,r=-INF,t=-INF,s=-INF;\n    }\n}tre[N&lt;&lt;2];//\u522b\u95ee\u6211\u4e3a\u4ec0\u4e48\u5148\u5f00\u4e24\u500d\u7a7a\u95f4\u518d\u4e584\nint n,m,l,r;\nint a[N];\nvoid pushup(int i){\n    tre[i].t=max(max(tre[i&lt;&lt;1].t,tre[i&lt;&lt;1|1].t),tre[i&lt;&lt;1].r+tre[i&lt;&lt;1|1].l);\n    tre[i].l=max(tre[i&lt;&lt;1].l,tre[i&lt;&lt;1].s+tre[i&lt;&lt;1|1].l);\n    tre[i].r=max(tre[i&lt;&lt;1|1].r,tre[i&lt;&lt;1|1].s+tre[i&lt;&lt;1].r);\n    tre[i].s=tre[i&lt;&lt;1].s+tre[i&lt;&lt;1|1].s;\n    return;\n}\nvoid build(int i,int l,int r){//\u5efa\u6811\n    if(l==r){\n        tre[i].t=a[l];\n        tre[i].l=a[l];\n        tre[i].r=a[l];\n        tre[i].s=a[l];\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(i&lt;&lt;1,l,mid);\n    build(i&lt;&lt;1|1,mid+1,r);\n    pushup(i);\n    return;\n}\nnode query(int i,int l,int r,int el,int er){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        return tre[i];\n    }\n    int mid=l+r&gt;&gt;1;\n    node ans=node(),x=node(),y=node();\n    if(el&lt;=mid)x=query(i&lt;&lt;1,l,mid,el,er);\n    if(er&gt;mid)y=query(i&lt;&lt;1|1,mid+1,r,el,er);\n\n    ans.t=max(max(x.t,y.t),x.r+y.l);//pushup\n    ans.l=max(x.l,x.s+y.l);\n    ans.r=max(y.r,y.s+x.r);\n    ans.s=x.s+y.s;\n\n    return ans;\n}\nsigned main(){\n    memset(tre,0,sizeof tre);\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%lld\",&amp;a[i]);    \n    }\n    build(1,1,n);\n    scanf(\"%lld\",&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;l,&amp;r);\n        node res=node();\n        res=query(1,1,n,l,r);\n        printf(\"%lld\\n\",res.t);\n    }\n    return 0;\n} \n/*\n\n\u6570\u636e\n\n&gt;&gt;&gt;input\n8\n-1 2 3 1 -1 1 1 -1\n4\n1 8\n2 7\n4 5\n3 4\n&gt;&gt;&gt;output\n7\n7\n1\n4\n*/\n</code></pre> Orz</p> <p>CF833B</p> <p>\u8bbe\\(f[i][j]\\)\u8868\u793a\u524d\\(i\\)\u4e2a\u989c\u8272\u5206\u6210\\(j\\)\u7aef\u7684\u6700\u5927\u8d21\u732e\uff0c\\(col[i][j]\\)\u8868\u793a\u4ece\\(i\\)\u5230\\(j\\)\u7684\u8d21\u732e\u3002</p> <p>\u5219\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ f[i][j]=\\max_{k=0}^{i-1}(f[k][j-1]+col[k+1][i]) \\] <p>\u8fd9\u6837\u505a\u590d\u6742\u5ea6\\(O(n^2k)\\),\u80af\u5b9a\u7206\u70b8\u3002</p> <p>\u7531\u4e8e\u6bcf\u6b21\u9700\u8981\u679a\u4e3e\\(k\\)\u800c\u803d\u8bef\u65f6\u95f4\uff0c\u6240\u4ee5\u8003\u8651\u628a\u4e0a\u4e00\u8f6e\u6240\u6709\u7684\\(f[k][j-1]\\)\u4e22\u8fdb\u7ebf\u6bb5\u6811\u91cc\u7ef4\u62a4\u3002</p> <p>\u7528\u5230\u4e86\u53bb\u91cd\u7684\u5e38\u7528$_ {trick} $,\u5c31\u662f\u5c06\u6bcf\u4e2a\u989c\u8272\u4e0a\u4e00\u6b21\u51fa\u73b0\u7684\u4f4d\u7f6e\u8bb0\u5f55\u4e0b\u6765\u3002\u4e4b\u540e\uff0c\u7528\u7ebf\u6bb5\u6811\u7684\u533a\u95f4\u52a0\u6765\u66f4\u65b0\u5f53\u524d\u7684\u989c\u8272\u5bf9\u4e4b\u524d\u54ea\u4e9b\u4f4d\u7f6e\u7531\u8d21\u732e\u3002</p> <p>\u7ebf\u6bb5\u6811\u4e2d\u4f4d\u7f6e\\(k\\)\u7ef4\u62a4\u7684\u5c31\u662f\u4ece\\(k\\)\u5230\\(i\\)\u7684\u8d21\u732e\\(col[k][i]\\)\u52a0\u4e0a\\(f[k-1][j-1]\\)\u7684\u603b\u8d21\u732e\u3002</p> <p>\u8fd9\u6837\u6bcf\u6b21\u53ea\u9700\u8981\u53d6\\(query(1,1,n,1,j)\\)\u5373\u53ef\u66f4\u65b0\\(f[i][j]\\).</p> <p>~~\u6ce8\u610f\u7ebf\u6bb5\u6811\u7684\u6e05\u96f6\u64cd\u4f5c(lazytag)\uff0c\u6211\u5df2\u7ecf\u88ab\u5751\u7684\u89c1\u7956\u5b97\u4e86,\u89c1\u6ce8\u91ca~~</p> <p>code time:</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define ls i&lt;&lt;1\n#define rs i&lt;&lt;1|1\n#define int long long \nusing namespace std;\nconst int N=4e4+10,K=55;\nint f[K][N],pos[N],pre[N],tre[N&lt;&lt;2],tag[N&lt;&lt;2];\nint n,k,t;\nvoid pushup(int i){\n    tre[i]=max(tre[ls],tre[rs]);\n}\nvoid pushdown(int i,int l,int r){\n    int k=tag[i];\n    if(!k)return;\n    tag[ls]+=k;tag[rs]+=k;tre[ls]+=k;tre[rs]+=k;\n    tag[i]=0;   \n}\nvoid build(int i,int l,int r,int now){\n    tag[i]=0;//\u4e00\u5b9a\u8981\u6e05\u96f6\uff0c\u5e76\u4e14\u8981\u5199\u5728\u5916\u9762\n    if(l==r){\n        tre[i]=f[now][l-1];\n        return;\n    }\n    int mid=(l+r)&gt;&gt;1;\n    build(ls,l,mid,now);\n    build(rs,mid+1,r,now);\n    pushup(i);\n}\nvoid change(int i,int l,int r,int el,int er,int k){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tag[i]+=k;tre[i]+=k;\n        return;\n    }\n    pushdown(i,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    if(el&lt;=mid) change(ls,l,mid,el,er,k);\n    if(er&gt;mid) change(rs,mid+1,r,el,er,k);\n    pushup(i);\n}\nint query(int i,int l,int r,int el,int er){\n    if(el&lt;=l &amp;&amp; r&lt;=er) return tre[i];\n    pushdown(i,l,r);\n    int mid=(l+r)&gt;&gt;1,ans=0;\n    if(el&lt;=mid)ans=max(ans,query(ls,l,mid,el,er));\n    if(er&gt;mid)ans=max(ans,query(rs,mid+1,r,el,er));\n    return ans;\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;k);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;t),pre[i]=pos[t]+1,pos[t]=i;\n    for(int i=1;i&lt;=k;++i){\n        build(1,1,n,i-1);\n        for(int j=1;j&lt;=n;++j){\n            change(1,1,n,pre[j],j,1);\n            f[i][j]=query(1,1,n,1,j);\n        }\n    }\n    printf(\"%lld\",f[k][n]);\n}\n</code></pre> <p>SP1557 GSS2</p> <p>~~OrzOrzOrz~~</p> <p>\u597d\u9898\uff0c\u662fGSS1\u7684\u8d85\u7ea7\u52a0\u5f3a\u3002</p> <p>\u5bf9\u4e8e\u533a\u95f4\u53bb\u91cd\u53ef\u4ee5\u79bb\u7ebf\u5c06r\u6392\u5e8f\uff0c\u9010\u4e2a\u52a0\u5165a[i]\uff0c\u8ba1\u7b97\u5f53\u524d\u4ee5r\u4e3a\u53f3\u7aef\u70b9\u7684\u6240\u6709\u5b50\u533a\u95f4\u4e2d\u7684\u6700\u5927\u548c\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u6700\u5927\u5b50\u6bb5\u548c\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\u7ef4\u62a4\u56db\u4e2a\u503c\uff1a</p> <p>s \u8868\u793a\u5f53\u524d\u70b9\u7684\u6700\u5927\u5b50\u6bb5\u548c</p> <p>m \u8868\u793a\u5f53\u524d\u70b9\u5386\u53f2\u6700\u5927</p> <p>stag \u8868\u793a\u5f53\u524d\u61d2\u6807\u8bb0</p> <p>mtag \u8868\u793a\u5386\u53f2\u6700\u5927\u61d2\u6807\u8bb0</p> <p>mtag\u5b58\u5728\u7684\u610f\u4e49\uff1a stag\u5728\u540c\u65f6\u9047\u5230\u8bb8\u591a\u64cd\u4f5c\u65f6\u4f1a\u5c06\u6240\u6709\u64cd\u4f5c\u8986\u76d6\u6210\u4e00\u4e2a\u64cd\u4f5c\uff0c\u800c\u5386\u53f2\u6700\u5927\u9700\u8981stag\u4e2d\u7684\u6700\u5927\u72b6\u6001\uff0c\u8fd9\u53ea\u7528stag\u8868\u793a\u4e0d\u51fa\u6765\uff0c\u6240\u4ee5\u7528\u4e00\u4e2amtag.</p> <p>\u8fd9\u6837\uff0c\u6bcf\u6b21\u67e5\u8be2[l,r]\u7684tre[i].m\u5373\u53ef</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=2e5+10;\nstruct node{\n    int m,s,mtag,stag;\n}tre[N&lt;&lt;2];\nstruct que{\n    int l,r,id;\n}q[N];\nint n,m;\nint pre[N],vis[N&lt;&lt;1],a[N],ans[N];\nbool cmp(que a,que b){\n    return a.r&lt;b.r;\n}\nvoid pushup(int i){\n    tre[i].s=max(tre[i&lt;&lt;1].s,tre[i&lt;&lt;1|1].s);\n    tre[i].m=max(tre[i&lt;&lt;1].m,tre[i&lt;&lt;1|1].m);\n}\nvoid pushdown(int i,int l,int r){\n\n    int ls=i&lt;&lt;1,rs=i&lt;&lt;1|1,mid=l+r&gt;&gt;1;\n\n    tre[ls].m=max(tre[ls].m,tre[ls].s+tre[i].mtag);\n    tre[rs].m=max(tre[rs].m,tre[rs].s+tre[i].mtag);\n\n    tre[ls].s+=tre[i].stag;\n    tre[rs].s+=tre[i].stag;\n\n    tre[ls].mtag=max(tre[ls].mtag,tre[i].mtag+tre[ls].stag);\n    tre[rs].mtag=max(tre[rs].mtag,tre[i].mtag+tre[rs].stag);\n\n    tre[ls].stag+=tre[i].stag;\n    tre[rs].stag+=tre[i].stag;\n\n    tre[i].stag=0;\n    tre[i].mtag=0;\n\n    return;\n}\nvoid add(int i,int l,int r,int el,int er,int k){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tre[i].s+=k;\n        tre[i].m=max(tre[i].m,tre[i].s);\n        tre[i].stag+=k;\n        tre[i].mtag=max(tre[i].mtag,tre[i].stag);\n        return;\n    }\n    pushdown(i,l,r);\n    int mid=l+r&gt;&gt;1;\n    if(el&lt;=mid)add(i&lt;&lt;1,l,mid,el,er,k);\n    if(er&gt;mid)add(i&lt;&lt;1|1,mid+1,r,el,er,k);\n    pushup(i);\n    return;\n}\nint query(int i,int l,int r,int el,int er){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        return tre[i].m;\n    }\n    pushdown(i,l,r);\n    int mid=l+r&gt;&gt;1,ans=0;\n    if(el&lt;=mid)ans=max(ans,query(i&lt;&lt;1,l,mid,el,er));\n    if(er&gt;mid)ans=max(ans,query(i&lt;&lt;1|1,mid+1,r,el,er));\n    return ans;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]);\n    scanf(\"%lld\",&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;q[i].l,&amp;q[i].r);\n        q[i].id=i;\n    }\n    sort(q+1,q+m+1,cmp);\n    for(int i=1;i&lt;=n;++i){\n        pre[i]=vis[a[i]+N];\n        vis[a[i]+N]=i;\n    }\n    /*for(int i=1;i&lt;=n;++i){\n        cout&lt;&lt;pre[i]&lt;&lt;\" \";\n    }\n    cout&lt;&lt;endl;*/\n\n    for(int i=1,j=1;i&lt;=n;++i){\n        int ll=pre[i]+1,rr=i;\n        add(1,1,n,ll,rr,a[i]);\n        for(j;j&lt;=m &amp;&amp; q[j].r&lt;=i;++j){\n            ans[q[j].id]=query(1,1,n,q[j].l,q[j].r);\n        }\n    }\n    for(int i=1;i&lt;=m;++i){\n        printf(\"%lld\\n\",ans[i]);\n    }\n    return 0;\n} \n/*\n8\n-1 2 3 1 -1 1 1 -1\n3\n1 2\n2 4\n1 8\n*/\n</code></pre> \u6ce8\u610f\u4e0b\u9762\u6ca1\u6709mtag\u7684\u9519\u8bef\u4ee3\u7801:</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=2e5+10;\nstruct node{\n    int m,s,stag;\n}tre[N&lt;&lt;2];\nstruct que{\n    int l,r,id;\n}q[N];\nint n,m;\nint pre[N],vis[N&lt;&lt;1],a[N],ans[N];\nbool cmp(que a,que b){\n    return a.r&lt;b.r;\n}\nvoid pushup(int i){\n    tre[i].s=max(tre[i&lt;&lt;1].s,tre[i&lt;&lt;1|1].s);\n    tre[i].m=max(tre[i&lt;&lt;1].m,tre[i&lt;&lt;1|1].m);\n    tre[i].m=max(tre[i].m,tre[i].s);//\n}\nvoid pushdown(int i,int l,int r){\n\n    int ls=i&lt;&lt;1,rs=i&lt;&lt;1|1,mid=l+r&gt;&gt;1;\n\n    tre[ls].m=max(tre[ls].m,tre[ls].s+tre[i].stag);\n    tre[rs].m=max(tre[rs].m,tre[rs].s+tre[i].stag);\n\n    tre[ls].s+=tre[i].stag;\n    tre[rs].s+=tre[i].stag;\n\n    tre[ls].stag+=tre[i].stag;\n    tre[rs].stag+=tre[i].stag;\n\n    tre[i].stag=0;\n\n    return;\n}\nvoid add(int i,int l,int r,int el,int er,int k){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tre[i].s+=k;\n        tre[i].stag+=k;\n        tre[i].m=max(tre[i].m,tre[i].s);\n        return;\n    }\n    pushdown(i,l,r);\n    int mid=l+r&gt;&gt;1;\n    if(el&lt;=mid)add(i&lt;&lt;1,l,mid,el,er,k);\n    if(er&gt;mid)add(i&lt;&lt;1|1,mid+1,r,el,er,k);\n    pushup(i);\n    return;\n}\nint query(int i,int l,int r,int el,int er){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        return tre[i].m;\n    }\n    pushdown(i,l,r);\n    int mid=l+r&gt;&gt;1,ans=0;\n    if(el&lt;=mid)ans=max(ans,query(i&lt;&lt;1,l,mid,el,er));\n    if(er&gt;mid)ans=max(ans,query(i&lt;&lt;1|1,mid+1,r,el,er));\n    return ans;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]);\n    scanf(\"%lld\",&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;q[i].l,&amp;q[i].r);\n        q[i].id=i;\n    }\n    sort(q+1,q+m+1,cmp);\n    for(int i=1;i&lt;=n;++i){\n        pre[i]=vis[a[i]+N];\n        vis[a[i]+N]=i;\n    }\n    /*for(int i=1;i&lt;=n;++i){\n        cout&lt;&lt;pre[i]&lt;&lt;\" \";\n    }\n    cout&lt;&lt;endl;*/\n\n    for(int i=1,j=1;i&lt;=n;++i){\n        int ll=pre[i]+1,rr=i;\n        add(1,1,n,ll,rr,a[i]);\n        for(j;j&lt;=m &amp;&amp; q[j].r&lt;=i;++j){\n            ans[q[j].id]=query(1,1,n,q[j].l,q[j].r);\n        }\n    }\n    for(int i=1;i&lt;=m;++i){\n        printf(\"%lld\\n\",ans[i]);\n    }\n    return 0;\n} \n/*\n9\n4 -2 -2 3 -1 -4 2 2 -6\n4\n1 2\n1 5\n4 9\n2 8\n*/\n</code></pre> <p>P3924</p> <p>\u8fd9\u9053\u9898\u7684\u5173\u952e\u5c31\u662f\uff0c\u5bf9\u4e8e\u6bcf\u6b21\u4fee\u6539\uff0c\u6709\u6548\u4ea7\u751f\u8d21\u732e\u7684\u53ea\u6709\u53f6\u5b50\u8282\u70b9\uff0c\u6240\u4ee5\u76f4\u63a5\u901a\u8fc7\u6df1\u5ea6\u7ef4\u62a4\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u5230\u6839\u4e0a\u7684\u6982\u7387\u603b\u548c\uff0c\u56e0\u4e3a\u6bcf\u6b21\u4fee\u6539\u7684\u6570\u76f8\u540c\uff0c\u6240\u4ee5\u76f4\u63a5\u524d\u7f00\u548c\u7d2f\u52a0\u3002\u5f00\u59cbO\uff08n\uff09\u6c42\u51fa\u521d\u59cb\u503c\uff0c\u6bcf\u6b21\u518d\u52a0\u3002</p> <p>P4588</p> <p>\u5bf9\u4e8e\u6bcf\u6b21\u64cd\u4f5c\uff0c\u5982\u679c\u76f4\u63a5\u9006\u5143\u80af\u5b9a\u4e0d\u884c\u3002</p> <p>\u8003\u8651\u7ebf\u6bb5\u6811\uff0c\u6bcf\u6b21\u7684\u64cd\u4f5c\u5c31\u662f\u5355\u70b9\u4fee\u6539\u3002</p> <p>\u6ce8\u610f\\(pushup\\)\u4e00\u76f4\u8981\\(modM\\) <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \n#define ls i&lt;&lt;1\n#define rs i&lt;&lt;1|1\nusing namespace std;\nconst int N=2e5+10;\nint tre[N&lt;&lt;2];\nint Q,t,M,op,m;\nvoid pushup(int i){\n    tre[i]=(tre[ls]*tre[rs])%M;\n}\nvoid build(int i,int l,int r){\n    if(l==r){\n        tre[i]=1;\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    pushup(i);\n}\nvoid change(int i,int l,int r,int pos,int k){\n    if(l==r){\n        tre[i]=k;\n        return;\n    }\n    int mid=l+r&gt;&gt;1;\n    if(pos&lt;=mid)change(ls,l,mid,pos,k);\n    else change(rs,mid+1,r,pos,k);\n    pushup(i);\n}\nsigned main(){\n    scanf(\"%lld\",&amp;t);\n    while(t--){\n        scanf(\"%lld%lld\",&amp;Q,&amp;M);\n        build(1,1,Q);\n        for(int i=1;i&lt;=Q;++i){\n            scanf(\"%lld%lld\",&amp;op,&amp;m);\n            if(op==1){\n                change(1,1,Q,i,m);\n            }else{\n                change(1,1,Q,m,1);\n            }\n            printf(\"%lld\\n\",tre[1]%M);\n        }\n    }\n    return 0;\n}\n</code></pre> ~~\u7ebf\u6bb5\u6811\u601d\u7ef4\u9898\u771f\u591a~~</p> <p>P1712</p> <p>\u5c3a\u53d6\u6cd5\u7ebf\u6bb5\u6811\u3002</p> <p>\u5148\u5c06\u533a\u95f4\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\uff0c\u4f9d\u6b21\u53f3\u79fb\\(r\\).</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u533a\u95f4\uff0c\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u5f53\u524d\u7684\u533a\u95f4\u6709\u54ea\u4e9b\u91cd\u5408\u7684\u5730\u65b9\uff0c\u5982\u679c\u6709\u4e00\u4e2a\u70b9\u91cd\u5408\u5ea6\\(\\geq m\\),\u5c31\u53f3\u79fb\\(l\\)\u5e76\u7edf\u8ba1\u7b54\u6848\u3002</p> <p>CF1042D</p> <p>\u7ef4\u62a4\u6bcf\u4e2a\u7aef\u70b9\\(i\\)\u524d\u9762\u6709\u591a\u5c11\u4e2a\u7aef\u70b9\\(j\\)\u6ee1\u8db3\\(sum[i]-sum[j-1]&lt;t\\)\u3002</p> <p>\u56e0\u4e3a\u6bcf\u6b21\u505a\u5b8c\u90fd\u4f1a\u52a0\u5165\\(sum[i]\\)\uff0c\u6240\u4ee5\u4fdd\u8bc1\\(sum[j-1],1 \\leq j \\leq i-1 \\(\u5728\u4e4b\u524d\u5df2\u7ecf\u6c42\u51fa\u6765\u4e86\uff0c\u56e0\u6b64\u53ef\u4ee5\u6743\u503c\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u4e4b\u524d\u6ee1\u8db3\u6761\u4ef6\u7684\u7aef\u70b9\u4e2a\u6570,\u5373\\)&gt;sum[i]-t\\)\u7684\u4e2a\u6570\u3002</p> <p>P5482</p> <p>\u7ec6\u8282\u7279\u591a\u7684\u4e00\u9053\u9898\u3002</p> <p>\u6ce8\u610f\u6bcf\u4e2a\u7b49\u5f0f\u7684\\(a\\)\u6709\u4e09\u79cd\u60c5\u51b5\uff1a</p> <p>1) \\(a&gt;0\\),\u6b64\u65f6\u6b63\u5e38\u8ba8\u8bba 2) \\(a=0\\),\u9700\u8981\u7279\u6b8a\u8ba8\u8bba\uff0c\u4e0d\u80fd\u9664\uff0c\u4e0d\u7136\u5c31\\(RE\\)\u4e86. 3) \\(a&lt;0\\),\u8fd9\u662f\u9700\u8981\u5c06\u7b49\u5f0f\u53cd\u8f6c\uff1a\\(-x&gt;-\\frac{c-b}{a}\\),\u6240\u4ee5\u65b0\u7684\u89e3\\(t=-x\\),\u6ee1\u8db3\\(-at+b&gt;c\\)</p> <p>\u8fd8\u6709\u5c31\u662f\u9700\u8981\u5224\u65ad\\(x\\)\u548c\\(t\\)\u7684\u51fa\u754c\u60c5\u51b5\uff0c\u5982\u679c\u5c0f\u4e8e\\(-1e6\\)\uff0c\u5c31\u5728\u6811\u72b6\u6570\u7ec4\\(1\\)\u7684\u4f4d\u7f6e\u52a0\\(1\\);\u5982\u679c\u5927\u4e8e\\(1e6\\),\u5c31\u4e0d\u80fd\u505a\u4efb\u4f55\u5904\u7406\u3002</p> <p>\u518d\u6709\u5c31\u662f\u91cd\u590d\u5220\u9664\uff0c\u6bcf\u6b21\u5220\u9664\u540e\u8981\u6253\u4e0a\u6807\u8bb0\u3002</p> <p>~~\u5751\u7239\u6bd2\u7624\u9898~~</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long\n#define lowbit(x) x&amp;-x\nusing namespace std;\nconst int N=2e6+100,M=2e5+10,C=1e6+1,LIM=2e6+1;\nstruct node{\n    int a,b,k,type,res;\n}op[M];\nint c[N],d[N];\nint n,cnt,a,b,k;\nchar ch[10];\nvoid change1(int x,int k) {\n    while(x&lt;=N-1) {\n        c[x]+=k;\n        x+=lowbit(x);\n    }\n}\nint sum1(int x) {\n    int ans=0;\n    while(x&gt;0) {\n        ans+=c[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\nvoid change2(int x,int k){\n    while(x&lt;=N-1){\n        d[x]+=k;\n        x+=lowbit(x);\n    }\n}\nint sum2(int x){\n    int ans=0;\n    while(x&gt;0){\n        ans+=d[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\nsigned main() {\n    scanf(\"%lld\",&amp;n);\n    for(int i=1; i&lt;=n; ++i) {\n        scanf(\"%s\",ch);\n        if(ch[0]=='A') {\n            ++cnt;\n            scanf(\"%lld%lld%lld\",&amp;op[cnt].a,&amp;op[cnt].b,&amp;op[cnt].k);\n            a=op[cnt].a,b=op[cnt].b,k=op[cnt].k;\n            if(a==0){\n                if(b&gt;k){\n                    op[cnt].type=0,change1(1,1);// \u4e00\u5b9a\u6709\u89e3\n                }else{\n                    op[cnt].type=1;//\u65e0\u89e3\n                }\n            }else if(a&gt;0){\n                int tmp=(k-b)/a;\n                if(a*tmp+b&lt;=k)tmp++;\n                if(tmp+C&lt;1)op[cnt].type=2,change1(1,1);//\u4e00\u5b9a\u6709\u89e3\n                else if(tmp+C&gt;LIM)op[cnt].type=3;//\u4e00\u5b9a\u65e0\u89e3\n                else op[cnt].res=tmp+C,op[cnt].type=4,change1(tmp+C,1);\n            }else{//a&lt;0\n                int tmp=(b-k)/a;\n                if(-a*tmp+b&lt;=k)tmp++;\n                if(tmp+C&lt;1)op[cnt].type=5,change2(1,1);\n                else if(tmp+C&gt;LIM)op[cnt].type=6;\n                else op[cnt].res=tmp+C,op[cnt].type=7,change2(tmp+C,1);\n            }\n        }else if(ch[0]=='D'){\n            scanf(\"%lld\",&amp;k);\n            if(op[k].type==0 || op[k].type==2)change1(1,-1);\n            if(op[k].type==5)change2(1,-1);\n            if(op[k].type==4)change1(op[k].res,-1);\n            if(op[k].type==7)change2(op[k].res,-1);\n            op[k].type=8;//\u5df2\u5220\u9664\n        }else{\n            scanf(\"%lld\",&amp;k);\n            int tmp1=sum1(k+C);\n            int tmp2=sum2(-k+C);\n            printf(\"%lld\\n\",tmp1+tmp2);\n        }\n    }\n    return 0;\n}\n</code></pre> <p>P4243</p> <p>\u7b2c\u4e00\u9053\u9ed1\u9898!</p> <p>~~\u867d\u7136\u53ea\u6709\u7d2b\u9898\u7684\u96be\u5ea6~~</p> <p>\u5f53\u770b\u89c1\u7b49\u5dee\u6570\u5217\uff0c\u6709\u4e2a\u5e38\u7528\u7684\u5c0f\\(_ {Trick}\\),\u5c31\u662f\u5c06\u7b49\u5dee\u6570\u5217\u8f6c\u6362\u6210\u5dee\u5206\u6570\u5217\uff0c\u5373\\(b[i]=a[i+1]-a[i]\\)\uff0c\u8fd9\u6837\uff0c\u53ea\u9700\u8981\u7ef4\u62a4\u8fde\u7eed\u7684\u76f8\u540c\u7684\u503c\u6709\u591a\u5c11\u6bb5\u5373\u53ef\u3002</p> <p>\u6bcf\u6b21\u7684\\(A\\)\u64cd\u4f5c\u53ef\u4ee5\u770b\u6210\u5728\\(s-1\\)\u5904\u52a0\u4e0a\\(a\\),\u5728\\([s,t-1]\\)\u8fd9\u4e00\u6bb5\u52a0\u4e0a\\(b\\)\uff0c\u518d\u5728\u6700\u540e\u7684\\(t+1\\)\u5904\u52a0\u4e0a\\(-a+b*(t-s)\\)\u5373\u53ef\u3002</p> <p>\u800c\\(B\\)\u64cd\u4f5c\u590d\u6742\uff0c\u9700\u8981\\(nlrc,lrc,lc,rc\\)\u5206\u522b\u8868\u793a\\((l,r),[l,r],[l,r),(l,r]\\)\u7684\u56db\u79cd\u60c5\u51b5\u3002</p> <p>\u6b64\u65f6\uff0c\u770b\u8d77\u6765\u597d\u50cf\u53ea\u9700\u8981\\(lrc\\),\u5408\u5e76\u65f6\u5224\u65ad\u4e00\u4e0b\u5de6\u53f3\u7aef\u70b9\u662f\u5426\u76f8\u7b49\u5c31\u884c\u4e86\u554a\u3002</p> <p>\u4e3a\u4ec0\u4e48\u4f1a\u9700\u8981\\(lc,rc,nlrc\\)\u5462\uff1f</p> <p>\u8003\u8651\u4e0b\u9762\u8fd9\u7ec4\u6570\u636e\uff1a</p> <p><pre><code>s:0 1 2 4 5 7 9\nx: 1 1 2 1 2 2  \n</code></pre> \u6b64\u65f6\uff0c\u5de6\u53f3\u533a\u95f4\u7684\\(lrc\\)\u5206\u522b\u662f\uff1a</p> <p><pre><code>s:[0 1 2 [4] 5 7 9]\nx: [1 1 2] [1 2 2]\nans: [2]    [2]\n\u5408\u5e76\uff1aans=2+2-(2==1)=4\n\u6b63\u786e\u7b54\u6848=3\n</code></pre> \u6211\u4eec\u53d1\u73b0\uff0c\u5bf9\u4e8e\\(4\\)\uff0c\u5b83\u7b97\u4e86\u4e24\u904d\u3002</p> <p>\u6240\u4ee5\u9700\u8981\u8fd9\u79cd\u5408\u5e76\u65b9\u5f0f\uff1a</p> <pre><code>s:[0 1 2 )[4 5 7 9]\nx: [1 1 2) [1 2 2]\nans: [1)    [2]\n\u5408\u5e76\uff1aans=3\uff0c\u6b63\u786e\n</code></pre> <p>\u8fd9\u89e3\u91ca\u4e86\u53e6\u5916\u4e09\u4e2a\u503c\u7684\u5fc5\u8981\u6027\u3002</p> <p>\u6ce8\u610f\uff0c\u53ea\u6709\\((...[x]...)\\)\uff0c\u5373\u4e24\u4e2a\u533a\u95f4\u5305\u542b\u539f\u5e8f\u5217\u7684\u540c\u4e00\u4e2a\u6570,\u8fd9\u79cd\u60c5\u51b5\u624d\u80fd\u5c06\u5e8f\u5217\u5408\u5e76\u540e\u5224\u65ad\\(-1\\)\uff0c\u5373\u539f\u6570\u5217\u4e2d\u6709\u4e00\u4e2a\u6570\u5728\u4e24\u4e2a\u516c\u5dee\u76f8\u7b49\u7684\u7b49\u5dee\u6570\u5217\u4e2d\u90fd\u6709\uff0c\u624d\u80fd\u5408\u5e76\u6210\u4e00\u4e2a\u7b49\u5dee\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8282\u70b9\uff0c\u5728\u4fee\u6539\u65f6\u7528\\(push_down\\)\u5411\u4e0b\u4fee\u6539\\(lval\\)\u548c\\(rval\\),\u518d\u5728\u56de\u6eaf\u65f6\u7528\\(pushup\\)\u7ef4\u62a4\u90a3\u56db\u4e2a\u503c\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\u672c\u4f53\u4e2d\u7684\u7ed3\u6784\u4f53\u4e0d\u597d\u6e05\u96f6\uff0c\u6e05\u96f6\u4e86\u4e5f\u4e0d\u597d\u5408\u5e76\uff0c\u6240\u4ee5\u5c31\u4e0d\u4fdd\u5b58\u76f4\u63a5\u8fd4\u56de\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n\n#define ls i&lt;&lt;1\n#define rs i&lt;&lt;1|1\n\n#define int long long \nusing namespace std;\nconst int N=1e5+10;\nint n,q,s,t,a,b;\nint v[N],w[N];\nchar chh[200];\nstruct node{\n    int lc,rc,nlrc,lrc,lval,rval;\n}tre[N&lt;&lt;2];\n\nint read1(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid write1(int x){\n    if(x&lt;0)putchar('-'),x=-x;\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n    return;\n}\nnode operator +(const node &amp;a,const node &amp;b){//\u91cd\u8981\u7684\u91cd\u8f7d\u8fd0\u7b97\u7b26\n    node c;\n\n    c.lval=a.lval;\n    c.rval=b.rval;\n\n    c.nlrc=a.rc+b.lc-(a.rval==b.lval);//\u5c06pushup\u4e2d\u7684\u5185\u5bb9\u642c\u8fd0\u5230\u8fd9\u91cc\u5373\u53ef\u3002\n    c.nlrc=min(c.nlrc,min(a.nlrc+b.lc,a.rc+b.nlrc));//\u5176\u5b9e\u5c31\u662f\u4e09\u79cd\u60c5\u51b5\u53d6min\n\n    c.lc=a.lrc+b.lc-(a.rval==b.lval);//\u6ce8\u610f\uff0c\u53ea\u6709[]\u8fd9\u79cd\u60c5\u51b5\u624d\u80fd\u5c06\u5e8f\u5217\u5408\u5e76\u540e\u5224\u65ad-1\uff0c\u5373\u539f\u6570\u5217\u4e2d\u6709\u4e00\u4e2a\u6570\u5728\u4e24\u4e2a\u516c\u5dee\u76f8\u7b49\u7684\u7b49\u5dee\u6570\u5217\u4e2d\u90fd\u6709\u3002\n    c.lc=min(c.lc,min(a.lc+b.lc,a.lrc+b.nlrc));\n\n    c.rc=a.rc+b.lrc-(a.rval==b.lval);\n    c.rc=min(c.rc,min(a.rc+b.rc,a.nlrc+b.lrc));\n\n    c.lrc=a.lrc+b.lrc-(a.rval==b.lval);\n    c.lrc=min(c.lrc,min(a.lrc+b.rc,a.lc+b.lrc));\n\n    return c;\n}\nint tag[N&lt;&lt;2];\n\n\nvoid pushdown(int i,int l,int r){\n    if(!tag[i])return;//\u6ce8\u610f1:\u61d2\u6807\u8bb0\u4e3a\u7a7a\u76f4\u63a5\u8df3\u8fc7\u3002\n    int k=tag[i];\n    tag[ls]+=k;\n    tag[rs]+=k;\n    tre[ls].lval+=k;\n    tre[ls].rval+=k;\n    tre[rs].lval+=k;\n    tre[rs].rval+=k;\n    tag[i]=0;\n    return;\n}\nvoid build(int i,int l,int r){\n    if(l&gt;=r){//\u6ce8\u610f2:\u4e0d\u8981\u8ba9l&gt;r\n        tre[i].lc=tre[i].rc=tre[i].lrc=1;\n        tre[i].lval=tre[i].rval=w[l];\n        return;\n    }\n    int mid=(l+r)&gt;&gt;1;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    tre[i]=tre[ls]+tre[rs];\n    return;\n}\nvoid change(int i,int l,int r,int el,int er,int k){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tre[i].lval+=k;\n        tre[i].rval+=k;\n        tag[i]+=k;\n        return;\n    }\n    pushdown(i,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    if(el&lt;=mid)change(ls,l,mid,el,er,k);\n    if(er&gt;mid)change(rs,mid+1,r,el,er,k);\n    tre[i]=tre[ls]+tre[rs];\n    return;\n}\nnode query(int i,int l,int r,int el,int er){\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        return tre[i];\n    }\n    pushdown(i,l,r);\n    int mid=(l+r)&gt;&gt;1;\n    if(er&lt;=mid)return query(ls,l,mid,el,er);//\u8fd9\u91cc\u8fd9\u4e48\u5199\u53ea\u662f\u56e0\u4e3a\u672c\u4f53\u4e2d\u7684\u7ed3\u6784\u4f53\u4e0d\u597d\u6e05\u96f6\uff0c\u6e05\u96f6\u4e86\u4e5f\u4e0d\u597d\u5408\u5e76\uff0c\u6240\u4ee5\u5c31\u4e0d\u4fdd\u5b58\u76f4\u63a5\u8fd4\u56de\u3002\n    else if(el&gt;mid)return query(rs,mid+1,r,el,er);//\u6ce8\u610f3:\u4e0d\u7528\u4fdd\u5b58\u76f4\u63a5\u8fd4\u56de\u7ed3\u6784\u4f53\n    else return query(ls,l,mid,el,mid)+query(rs,mid+1,r,mid+1,er);\n}\n\nsigned main(){\n    //freopen(\"1558/1.in\",\"r\",stdin);\n    n=read1();\n    for(int i=1;i&lt;=n;++i)v[i]=read1();\n    for(int i=1;i&lt;n;++i)w[i]=v[i+1]-v[i];\n    build(1,1,n-1);\n    q=read1();\n    for(int i=1;i&lt;=q;++i){\n        scanf(\"%s\",chh);\n        if(chh[0]=='A'){\n            s=read1(),t=read1(),a=read1(),b=read1();\n            if(s != 1) change(1, 1, n-1, s-1, s-1, a); //\u6ce8\u610f4:\u4e0d\u8981\u8d8a\u754c\n            if(t != n) change(1, 1, n-1, t, t, -(a+b*(t-s))); \n            if(s != t) change(1, 1, n-1, s, t-1, b);\n        }else{\n\n            s=read1(),t=read1();\n            if(s==t){//\u6ce8\u610f5:\u4e0d\u8981\u8d8a\u754c\n                putchar('1');putchar('\\n');\n            }else write1(query(1,1,n-1,s,t-1).lrc),putchar('\\n');\n        }\n    }\n\n\n    return 0;\n} \n</code></pre> <ul> <li>\u6ce8\u610f:\u672c\u4f53\u4ee3\u7801\u5305\u542b\u4e86\u9664\u5386\u53f2\u6700\u5927\u503c\uff0c\u4f18\u5148\u7ea7\u4e4b\u5916\u7684\u6240\u6709\u7ebf\u6bb5\u6811\u5e38\u7528\u7684\u6280\u5de7\uff0c\u5305\u62ec\u91cd\u8f7d\u8fd0\u7b97\u7b26\uff0c\\(lazytag\\)\uff0c\u8be2\u95ee\u65f6\u7684\u5de6\u53f3\u533a\u95f4\u5206\u7c7b\u8ba8\u8bba\u4ee5\u53ca\u8fd4\u56de\u7ed3\u6784\u4f53\u7b49\u7b49\u3002</li> </ul> <p>P4064</p> <p>\u5bf9\u4e8e\u6700\u5c0f\u503c\u6700\u5927\u5316\uff0c\u6211\u4eec\u60f3\u5230\u4e8c\u5206\u3002</p> <p>\u5047\u8bbe\u5f53\u524d\u679a\u4e3e\u7684\u7b54\u6848\u4e3a\\(mid\\)\uff0c\u90a3\u4e48\u5bf9\u4e8e\u6bcf\u4e2a\u70b9\uff0c\u5fc5\u987b\u8981\u52a0\\(\\max(\\lceil\\frac{mid-a_i}{d}\\rceil,0)\\)\u6b21\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8d2a\u5fc3\u5730\u6309\u7167\u53f3\u7aef\u70b9\u4ece\u8fdc\u5230\u8fd1\u5730\u53d6\u3002</p> <p>\u9996\u5148\u8981\u5c06\u533a\u95f4\u6309\u5de6\u7aef\u70b9\u4ece\u5c0f\u5230\u5927\u6392\u5e8f\u3002</p> <p>\u5c06\u6240\u6709\u5de6\u7aef\u70b9\u5c0f\u4e8e\\(i\\)\u7684\u533a\u95f4\u4e22\u8fdb\u4f18\u5148\u961f\u5217\u91cc\uff0c\u6309\u4e0a\u6587\u8981\u6c42\u7ef4\u62a4\u53f3\u7aef\u70b9\u3002</p> <p>\u5982\u679c\u6709\u5f53\u524d\u70b9\u672a\u6ee1\u8db3\u6761\u4ef6\uff0c\u5e76\u4e14\u961f\u5217\u4e3a\u7a7a\u6216\u5f53\u524d\u533a\u95f4\u53f3\u7aef\u70b9\u5df2\u7ecf\u5c0f\u4e8e\\(i\\)\uff0c\u8bf4\u660e\u65e0\u6cd5\u6ee1\u8db3\u6761\u4ef6\u3002\u5426\u5219\u53ef\u4ee5\u6ee1\u8db3\u3002</p> <p>\u8fd9\u6837\u4e8c\u5206\u5373\u5f97\u7b54\u6848\u3002</p> <p>\u6ce8\u610f\u6e05\u96f6\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;queue&gt;\n#define int long long \n#define lowbit(x) (x&amp;-x)\nusing namespace std;\nconst int N=4e5+10,INF=0x3f3f3f3f;\nint a[N],b[N],c[N],vis[N];\nint n,m,T,k,d,minn;\nstruct query {\n    int l,r,id;\n} f[N];\nstruct node{\n    int num,r;\n    node(int numm,int rr){\n        num=numm,r=rr;\n    }\n    bool operator &lt;(const node &amp;x)const{\n        return x.r&gt;r;\n    }\n};\nbool cmp(query a,query b) {\n    return a.l&lt;b.l;\n}\nvoid add(int x,int d) {\n    while(x&lt;=n)c[x]+=d,x+=lowbit(x);\n}\nint sum(int x){\n    int ans=0;\n    while(x&gt;0)ans+=c[x],x-=lowbit(x);\n    return ans;\n}\nvoid init(){\n    for(int i=1; i&lt;=n; ++i) add(i,b[i]);\n}\nvoid clear1() {\n    for(int i=1;i&lt;=m;++i){\n        if(vis[i]){\n            if(f[i].l&gt;0)add(f[i].l,-d);\n            if(f[i].r&lt;n)add(f[i].r+1,d);\n            vis[i]=0;\n        }\n    }\n}\n\n\nbool check(int x) {\n    priority_queue&lt;node&gt; q;\n    int l=1,cnt=0;\n    for(int i=1; i&lt;=n; ++i) {\n        if(cnt&gt;k)return false;\n        while(f[l].l&lt;=i &amp;&amp; l&lt;=m)q.push(node(l,f[l].r)),++l;\n        int delta=x-sum(i);\n        while(delta&gt;0){\n            if(q.empty())return false;\n            int tmp=q.top().num;q.pop();\n            if(f[tmp].r&lt;i)return false;\n            if(f[tmp].l&gt;0)add(f[tmp].l,d);\n            if(f[tmp].r&lt;n)add(f[tmp].r+1,-d);\n            vis[tmp]=1;\n            delta-=d;\n            ++cnt;\n        }\n    }\n    return cnt&lt;=k;\n}\nsigned main() {\n    scanf(\"%lld\",&amp;T);\n    while(T--) {\n        memset(c,0,sizeof c);\n        scanf(\"%lld%lld%lld%lld\",&amp;n,&amp;m,&amp;k,&amp;d);\n        minn=INF;a[0]=0;\n        for(int i=1; i&lt;=n; ++i)scanf(\"%lld\",&amp;a[i]),minn=min(minn,a[i]);\n        for(int i=1; i&lt;=n; ++i)b[i]=a[i]-a[i-1];\n        for(int i=1; i&lt;=m; ++i)scanf(\"%lld%lld\",&amp;f[i].l,&amp;f[i].r),f[i].id=i;\n        sort(f+1,f+m+1,cmp);\n        int l=minn-1,r=minn+k*d+1,ans=0;\n        memset(vis,0,sizeof vis);\n        init();\n        while(l&lt;r) {\n            int mid=l+r&gt;&gt;1;\n            if(check(mid)) {\n                ans=mid;\n                l=mid+1;\n            } else r=mid;\n            clear1();\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n</code></pre> <ul> <li>\u6811\u72b6\u6570\u7ec4\u533a\u95f4\u4fee\u6539&amp;\u5355\u70b9\u67e5\u8be2</li> </ul> <p>\u5bf9\u4e8e\u533a\u95f4\u4fee\u6539\u5e76\u4e14\u53ea\u6709\u5355\u70b9\u67e5\u8be2\u5f97\u9898\u76ee\uff0c\u53ef\u4ee5\u7528\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u5dee\u5206\u6570\u5217\u3002</p> <p>~~\u5dee\u5206\u771f\u7684\u5f3a~~</p> <p>\u5bf9\u4e8e\u5df2\u6709\u7684\u5dee\u5206\u6570\u5217\uff0c\u5c06\\(1 \\to i\\)\u6240\u6709\\(c[i]\\)\u52a0\u8d77\u6765\uff0c\u5c31\u5f97\u5230\u539f\u6570\u5217\u5f97\\(a[i]\\)\uff0c\u800c\u5c06\u533a\u95f4\\([l,r]\\)\u52a0\u4e0a\\(d\\)\u5c31\u76f8\u5f53\u4e8e\u4e24\u4e2a\u5355\u70b9\u4fee\u6539\uff1a <pre><code>if(l&gt;0)add(l,d);\nif(r&lt;n)add(r+1,-d);\n</code></pre></p> <ul> <li>\u9006\u5e8f\u5bf9</li> </ul> <p>\u8bb8\u591a\u95ee\u9898\uff0c\u50cf\u5c06\u4e0d\u540c\u5168\u6392\u5217\u4e2d\u76f8\u540c\u7684\u6570\u5b57\u4e24\u4e24\u914d\u5bf9\uff0c\u53ea\u80fd\u4ea4\u6362\u4e00\u4e2a\u6570\u5b57\u548c\u5b83\u76f8\u90bb\u7684\u6570\u5b57\u7684\u6700\u5c11\u6b65\u6570\u8fd9\u79cd\u95ee\u9898\uff0c\u5c31\u53ef\u4ee5\u8f6c\u5316\u6210\u9006\u5e8f\u5bf9\u6c42\u89e3\u3002</p> <p>P1966</p> <p>\u9996\u5148\u662f\u4e00\u4e2a\u8d2a\u5fc3\u6027\u8d28\u8bc1\u660e\uff1a</p> <p>\u5bf9\u4e8e\\(a[],b[]\\)\u6392\u5e8f\u540e\uff0c\u4e00\u5b9a\u662f\u4e00\u4e00\u5bf9\u5e94\uff0c\u5373\\(a[1]\\to b[1],a[2]\\to b[2],...,a[n]\\to b[n]\\)</p> <p>\u8bc1\u660e\uff1a</p> <p>\u5047\u8bbe\u5df2\u7ecf\u5bf9\u5e94\u597d\u524d\\(n-2\\)\u7ec4\uff0c\u4fdd\u8bc1\u7b54\u6848\u6700\u5c0f\uff0c\u6b64\u65f6\u5269\u4f59\\(a\\)\u7ec4\u7684\\(a,b\\),\\(b\\)\u7ec4\u7684\\(c,d\\)</p> <pre><code>x x x x a b\nx x x x c d\n</code></pre> <p>\u90a3\u4e48\u6709\u4e24\u79cd\u65b9\u5f0f\uff1a\\((a-c)^2+(b-d)^2\\)\u548c\\((a-d)^2+(b-c)^2\\).</p> <p>\u5047\u8bbe\u7b2c\u4e00\u79cd\u6700\u4f18\u3002</p> <p>\u5219\uff1a</p> \\[ -2ac-2bd&lt;-2ad-2bc\\\\ ac+bd&gt;ad+bc\\\\ a(c-d)&gt;b(c-d)\\\\ \u5f53c&lt;d\u65f6\u6709:\\\\a&lt; b \\] <p>\u8bc1\u6bd5\u3002</p> <p>\u90a3\u4e48\u5c31\u8f6c\u5316\u6210\u5c06\\(a[],b[]\\)\u4e00\u4e00\u5bf9\u5e94\u7684\u95ee\u9898\uff1b</p> <p>\u8bbe\\(q[a[i]]=b[i]\\)\uff0c\u90a3\u4e48\u7b54\u6848\u5e94\u6ee1\u8db3\\(q[a[i]]=a[i]\\),\u5373\\(q[i]=i\\)</p> <p>\u6240\u4ee5\u95ee\u9898\u8f6c\u5316\u6210\u6c42\u5c06\\(q\\)\u6570\u7ec4\u5347\u5e8f\u6392\u5217\u7684\u6700\u5c11\u4ea4\u6362\u6b65\u6570\uff0c\u5373\u9006\u5e8f\u5bf9\u6570\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;map&gt;\n#include&lt;algorithm&gt;\n#define int long long \n#define lowbit(x) (x&amp;-x)\nusing namespace std;\nconst int N=2e5+10,P=1e8-3;\nstruct node{\n    int h,id;\n}a[N],b[N];\nint p[N],c[N];\nint n,m; \nbool cmp(node a,node b){\n    return a.h&lt;b.h;\n}\n\nvoid add(int x,int d){\n    while(x&lt;=n)c[x]+=d,x+=lowbit(x);\n}\nint sum(int x){\n    int ans=0;\n    while(x&gt;0){\n        ans+=c[x];\n        x-=lowbit(x);\n    }\n    return ans;\n}\nsigned main(){\n    //freopen(\"P1966_2.in\",\"r\",stdin);\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i].h),a[i].id=i;\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;b[i].h),b[i].id=i;\n    sort(a+1,a+n+1,cmp);\n    sort(b+1,b+n+1,cmp);\n    for(int i=1;i&lt;=n;++i)p[a[i].id]=b[i].id;\n    int ans=0;\n    for(int i=n;i&gt;=1;--i){\n        ans=(ans+sum(p[i]))%P;\n        add(p[i],1);\n    }\n    printf(\"%lld\",(ans+P)%P);\n\n    return 0;\n}\n</code></pre> <p>P6186</p> <p>\u5047\u8bbe\u6bcf\u4e2a\u6570\u524d\u9762\u6bd4\u4ed6\u5927\u7684\u6570\u7684\u4e2a\u6570\u4e3a\\(b[i]\\)</p> <p>\u9700\u8981\u6ce8\u610f\u5230\\(k\\)\u8f6e\u5192\u6ce1\u6392\u5e8f\u7684\u7279\u6027\u662f\uff0c\u5bf9\u4e8e\\(b[i]&gt;k\\)\u7684\u60c5\u51b5\uff0c\u5168\u90e8\\(-k\\),\u5426\u5219\u5c31\u53d8\u4e3a\\(0\\).</p> <p>\u56e0\u4e3a\u6bcf\u4e00\u8f6e\u4e2d\uff0c\u6bcf\u4e2a\u6570\u4e4b\u524d\u7684\u6700\u5927\u6570\\(x\\)\u4e00\u5b9a\u4f1a\u88ab\u79fb\u52a8\u5230\u6bd4\\(x\\)\u5927\u7684\u7b2c\u4e00\u4e2a\u6570\\(y\\)\u4e4b\u524d\uff0c\u5373\u8fd9\u4e2a\u6570\u4e4b\u540e\u3002</p> <p>\u6240\u4ee5\u6240\u6709\u8f83\u5c0f\u6570\u7684\\(b[i]\\)\u90fd\u4f1a\u56e0\u4e3a\u6709\u4e00\u4e2a\u6700\u5927\u6570\u79fb\u52a8\u5230\u6240\u6709\u5c0f\u6570\u7684\u540e\u9762\u800c\\(-1\\).</p> <p>\u800c\u6bcf\u6b21\u79fb\u52a8\u7684\u6700\u5927\u6570\u4e00\u5b9a\u6ee1\u8db3\\(b[i]=0\\),\u79fb\u52a8\u540e\u4e5f\u4e0d\u4f1a\u6539\u53d8\uff0c\u6240\u4ee5\u5047\u8bbe\u6bcf\u8f6e\u7684\u6700\u5927\u6570\u6709\\(p\\)\u4e2a\uff0c\u6bcf\u8f6e\u5192\u6ce1\u6392\u5e8f\u7684\u8d21\u732e\u5c31\u662f\\(n-p\\).</p> <p>\u6240\u4ee5\u6700\u7ec8\u7b54\u6848\u4e3a\uff1a $$\\sum_{b[i]&gt;k}(b[i]-k)  \\=(\\sum_{b[i]&gt;k}b[i])-\\sum_{b[i]&gt;k}k $$</p> <p>\u6240\u4ee5\u7528\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6240\u6709\\(b[i]\\)\u4e3a\\(j\\)\u7684\u6570\u7684\u8d21\u732e,\u8be2\u95ee\u51fa\\(t_1=sum(n)-sum(k)\\)\uff1b</p> <p>\u4e00\u4e2a\u6811\u72b6\u6570\u7ec4\u7ef4\u62a4\u6240\u6709\\(b[i]\\)\u4e3a\\(j\\)\u7684\u6570\u7684\u4e2a\u6570\uff0c\u8be2\u95ee\u51fa\\(t_2=sum(n)-sum(k)\\)\uff1b</p> <p>\u6700\u540e\u8be2\u95ee\u7684\u7b54\u6848\u4e3a\\(t_2-k* t_1\\)</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define lowbit(x) (x&amp;-x)\n#define int long long\nusing namespace std;\nconst int N=3e5+10;\nint n,m,tmp,t,k;\nint a[N],b[N],c[N],d[N];\nvoid add(int* C,int x,int d) {\n    if(x==0)return;\n    while(x&lt;=n)C[x]+=d,x+=lowbit(x);\n}\nint sum(int* C,int x) {\n    int ans=0;\n    while(x&gt;0)ans+=C[x],x-=lowbit(x);\n    return ans;\n}\nsigned main() {\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1; i&lt;=n; ++i)scanf(\"%lld\",&amp;a[i]);\n    for(int i=1;i&lt;=n;++i) {\n        b[i]=i-1-sum(c,a[i]);\n        add(c,a[i],1);\n    }\n    memset(c,0,sizeof c);\n    for(int i=1; i&lt;=n; ++i)add(c,b[i],1),add(d,b[i],b[i]);\n    for(int i=1; i&lt;=m; ++i) {\n        scanf(\"%lld%lld\",&amp;t,&amp;k);\n        if(t==1) {\n            add(c,b[k],-1),add(d,b[k],-b[k]);add(c,b[k+1],-1),add(d,b[k+1],-b[k+1]);\n            if(a[k]&lt;a[k+1])++b[k];else --b[k+1];\n            swap(b[k],b[k+1]),swap(a[k],a[k+1]);\n            add(c,b[k],1),add(d,b[k],b[k]);add(c,b[k+1],1),add(d,b[k+1],b[k+1]);\n        } else {\n            if(k&gt;=n) {\n                printf(\"0\\n\");\n                continue;\n            }\n            int t1=sum(c,n)-sum(c,k),t2=sum(d,n)-sum(d,k);\n            printf(\"%lld\\n\",t2-k*t1);\n        }\n    }\n    return 0;\n}\n</code></pre> <p>P1442</p> <p>\u5f88\u597d\u7684\u7ebf\u6bb5\u6811+dp</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define mid ((l+r)&gt;&gt;1)\n#define ls i&lt;&lt;1\n#define rs i&lt;&lt;1|1\nusing namespace std;\nconst int N=2e5+10;\nstruct plane {\n    int l,r,h,kl,kr;\n} q[N];\nint n,h,x,y,cnt,num,m;\nint a[N],tre[N&lt;&lt;2],tag[N&lt;&lt;2],nxtl[N],nxtr[N],f[N][2];\nbool cmp(int a,int b) {\n    return a&lt;b;\n}\nbool Cmp(plane a,plane b) {\n    return a.h&lt;b.h;\n}\nvoid lsh() {\n    sort(a+1,a+cnt+1,cmp);\n    int tot=unique(a+1,a+cnt+1)-a-1;\n    for(int i=1; i&lt;=n+1; ++i) q[i].l=lower_bound(a+1,a+tot+1,q[i].l)-a,q[i].r=lower_bound(a+1,a+tot+1,q[i].r)-a;\n    x=q[1].l;\n}\nvoid pushup(int i) {\n    tre[i]=tre[ls]+tre[rs];\n}\nvoid pushdown(int i,int l,int r) {\n    int k=tag[i];\n    if(!k)return;\n    tag[ls]=k;\n    tag[rs]=k;\n    tre[ls]=(mid-l+1)*k;\n    tre[rs]=(r-mid)*k;\n    tag[i]=0;\n}\nvoid change(int i,int l,int r,int el,int er,int k) {\n    if(el&lt;=l &amp;&amp; r&lt;=er) {\n        tag[i]=k;\n        tre[i]=(r-l+1)*k;\n        return;\n    }\n    pushdown(i,l,r);\n    if(el&lt;=mid)change(ls,l,mid,el,er,k);\n    if(er&gt; mid)change(rs,mid+1,r,el,er,k);\n    pushup(i);\n}\nint query(int i,int l,int r,int pos) {\n    if(l==r) return tre[i];\n    pushdown(i,l,r);\n    if(pos&lt;=mid)return query(ls,l,mid,pos);\n    else return query(rs,mid+1,r,pos);\n}\nint main() {\n    scanf(\"%d%d%d%d\",&amp;n,&amp;h,&amp;x,&amp;y);\n    cnt=0;\n    q[1].l=q[1].r=q[1].kl=q[1].kr=x,q[1].h=y;\n    a[++cnt]=x;\n    for(int i=2; i&lt;=n+1; ++i)scanf(\"%d%d%d\",&amp;q[i].h,&amp;q[i].l,&amp;q[i].r),a[++cnt]=q[i].kl=q[i].l,a[++cnt]=q[i].kr=q[i].r;\n    lsh();\n    sort(q+1,q+n+2,Cmp);\n    num=1;\n    while((q[num].l!=x || q[num].h!=y) &amp;&amp; num&lt;n+1) ++num;\n    m=n+n+2;\n    for(int i=1; i&lt;=n+1; ++i) {\n        int L=query(1,1,m,q[i].l),R=query(1,1,m,q[i].r);\n        if(q[i].h-q[L].h&gt;h)nxtl[i]=-1;\n        else nxtl[i]=L;\n        if(q[i].h-q[R].h&gt;h)nxtr[i]=-1;\n        else nxtr[i]=R;\n        if(q[i].l+1&lt;=q[i].r-1)change(1,1,m,q[i].l+1,q[i].r-1,i);\n    }\n    memset(f,0x3f,sizeof f);\n    f[0][0]=f[0][1]=0;\n    for(int i=1; i&lt;=n+1; ++i) {\n        if(nxtl[i]!=-1) {\n            if(nxtl[i]==0) f[i][0]=q[i].h;\n            else f[i][0]=min(f[nxtl[i]][0]+(q[i].kl-q[nxtl[i]].kl),f[nxtl[i]][1]+(q[nxtl[i]].kr-q[i].kl))+q[i].h-q[nxtl[i]].h;\n        }\n        if(nxtr[i]!=-1) {\n            if(nxtr[i]==0) f[i][1]=q[i].h;\n            else f[i][1]=min(f[nxtr[i]][0]+(q[i].kr-q[nxtr[i]].kl),f[nxtr[i]][1]+(q[nxtr[i]].kr-q[i].kr))+q[i].h-q[nxtr[i]].h;\n        }\n    }\n    printf(\"%d\",f[num][0]);\n    return 0;\n}\n</code></pre> <p>P2221</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u4ee4\\(r=r-1\\),\u7b54\u6848\u90fd\u662f: $$ans=\\sum_{i=l}^ra[i]* (r-i+1)(i-l+1)\\\u5c55\u5f00\u5f97\\ ans=-\\sum_{i=l}^ra[i]i^2+(r+l)\\sum_{i=l}^ra[i]i+(-rl+r-l+1)\\sum_{i=l}^ra[i]\\ =-s_3+(r+l)s_2+(-rl+r-l+1)s_1 $$</p> <p>\u90a3\u4e48\\(s_1,s_2,s_3\\)\u90fd\u53ef\u4ee5\u7528\u7ebf\u6bb5\u6811\u7ef4\u62a4\u3002</p> <p>\u5bf9\u4e8e\u4fee\u6539\uff0c\\(s_1\\)\u76f4\u63a5\u52a0\u4e0a\u533a\u95f4\u957f\u4e58\\(v\\),\\(s_2,s_3\\)\u9700\u8981\u7528\u524d\u7f00\u548c\u6c42\u51fa\\(i\\)\u548c\\(i^2\\)\u7684\u548c\uff0c\u5728\u4e58\u4ee5\\(v\\)\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define mid ((l+r)&gt;&gt;1)\n#define ls (i&lt;&lt;1)\n#define rs (i&lt;&lt;1|1)\n#define int long long \nusing namespace std;\nconst int N=2e5+10;\nint n,m,L,R,v,ans,res,a;\nint s4[N],s5[N];\nstruct tree{\n    int l,r,tag,s1,s2,s3;\n    tree(){\n        l=r=tag=s1=s2=s3=0;\n    }\n}tre[N&lt;&lt;2];\nchar ch[10];\nint gcd(int a,int b){\n    if(a&lt;b)swap(a,b);\n    return !b?a:gcd(b,a%b);\n}\ntree operator +(const tree a,const tree b){\n    tree c=tree();\n    c.s1=a.s1+b.s1;\n    c.s2=a.s2+b.s2;\n    c.s3=a.s3+b.s3;\n    c.l=a.l;c.r=b.r;\n    c.tag=0;\n    return c;\n}\nvoid init(){\n    for(int i=1;i&lt;=n-1;++i)s4[i]=s4[i-1]+i,s5[i]=s5[i-1]+i*i;\n}\nvoid pushup(int i){\n    tre[i]=tre[ls]+tre[rs];\n}\nvoid pushdown(int i){\n    int l=tre[i].l,r=tre[i].r,v=tre[i].tag;\n    if(!v)return;\n    tre[ls].tag+=v;\n    tre[rs].tag+=v;\n\n    tre[ls].s1+=(mid-(l-1))*v;\n    tre[ls].s2+=(s4[mid]-s4[l-1])*v;\n    tre[ls].s3+=(s5[mid]-s5[l-1])*v;\n\n    tre[rs].s1+=(r-(mid))*v;\n    tre[rs].s2+=(s4[r]-s4[mid])*v;\n    tre[rs].s3+=(s5[r]-s5[mid])*v;\n    tre[i].tag=0;\n}\nvoid build(int i,int l,int r){\n    tre[i].l=l;tre[i].r=r;\n    if(l==r) return;\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    pushup(i);\n}\nvoid change(int i,int el,int er,int v){\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er){\n        tre[i].s1+=(r-(l-1))*v;\n        tre[i].s2+=(s4[r]-s4[l-1])*v;\n        tre[i].s3+=(s5[r]-s5[l-1])*v;\n        tre[i].tag+=v;\n        return;\n    }\n    pushdown(i);\n    if(el&lt;=mid)change(ls,el,er,v);\n    if(er&gt; mid)change(rs,el,er,v);\n    pushup(i);\n}\ntree query(int i,int el,int er){\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er) return tre[i];\n    pushdown(i);\n    if(er&lt;=mid) return query(ls,el,er);\n    else if(el&gt;mid) return query(rs,el,er);\n    else return query(ls,el,mid)+query(rs,mid+1,er);\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    init(); \n    build(1,1,n-1);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%s\",ch);\n        if(ch[0]=='C'){\n            scanf(\"%lld%lld%lld\",&amp;L,&amp;R,&amp;v);--R;\n            if(L&lt;=R) change(1,L,R,v);\n        }else{\n            scanf(\"%lld%lld\",&amp;L,&amp;R);\n            a=(R-L+1);\n            if(L==R){\n                printf(\"0/1\\n\");\n                continue;\n            }\n            --R;\n            tree tmp=query(1,L,R);\n            ans=2*(-tmp.s3+(R+L)*tmp.s2+(-R*L+R-L+1)*tmp.s1),res=a*(a-1);\n            int Gcd=gcd(ans,res);\n            printf(\"%lld/%lld\\n\",ans/Gcd,res/Gcd);\n        }\n    }\n\n\n\n    return 0;\n}\n</code></pre> <p>P2572</p> <p>\u8003\u8651\u5bf9\u4e8e\u4e00\u4e2a\u533a\u95f4\uff0c\u7ef4\u62a4\u8fd9\u4e9b\u91cf\uff1a</p> <ol> <li> <p>\\(l,r\\)\uff0c\u8868\u793a\u7ebf\u6bb5\u6811\u8282\u70b9\u5bf9\u5e94\u7684\u5de6\u53f3\u7aef\u70b9</p> </li> <li> <p>\\(sum\\),\u8868\u793a\u533a\u95f4\u548c</p> </li> <li> <p>\\(L[0/1],R[0/1],S[0/1]\\),\u8868\u793a\\(0/1\\)\u7684\u524d\u7f00\u6700\u5927\u5b50\u6bb5\uff0c\u540e\u7f00\u6700\u5927\u5b50\u6bb5\u548c\u6700\u5927\u5b50\u6bb5</p> </li> <li> <p>\\(tag,frc\\)\uff0c\u8868\u793a\u533a\u95f4\u8986\u76d6\u548c\u53cd\u8f6c\u7684\\(lazytag\\) (\\(frc\\)\u662f\u9996\u597d\u542c\u7684\\(bgm\\)\uff0c\u6765\u81ea\u300a\u58f0\u4e4b\u5f62\u300b,~~\u5899\u88c2\u63a8\u8350~~)</p> </li> </ol> <p>\u90a3\u4e48\\(pushup\\)\u5c31\u662f\u6700\u5927\u5b50\u6bb5\u548c\u7684\u65b9\u5f0f\u3002</p> <p>\\(pushdown\\)\u6ce8\u610f\\(tag\\)\u4f18\u5148\u7ea7\u5927\u4e8e\\(frc\\),\u6240\u4ee5\u8986\u76d6\u662f\u5c06\\(frc\\)\u6e05\u96f6\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define ls (i&lt;&lt;1)\n#define rs (i&lt;&lt;1|1)\n#define mid (l+r&gt;&gt;1)\nusing namespace std;\nconst int N=1e5+10;\nstruct tree {\n    int L[2],S[2],R[2],sum,tag,l,r,frc;\n    tree() {\n        l=r=sum=frc=L[0]=L[1]=R[0]=R[1]=S[0]=S[1]=0,tag=-1;\n    }\n} tre[N&lt;&lt;2];\nint read1(){\n    int x=0;char ch=getchar();\n    while(ch&lt;'0' || ch&gt;'9') ch=getchar();\n    while(ch&gt;='0' &amp;&amp; ch&lt;='9') x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nvoid write1(int x){\n    if(x&gt;9) write1(x/10);\n    putchar(x%10+'0');\n}\nint n,m,op,l,r;\nint a[N];\ntree operator +(tree a,tree b) {\n    tree c=tree();\n    int la=a.l,ra=a.r,lb=b.l,rb=b.r,xa=ra-la+1,xb=rb-lb+1;\n    for(int k=0; k&lt;=1; ++k) c.L[k]=(a.L[k]==xa?xa+b.L[k]:a.L[k]),c.R[k]=(b.R[k]==xb?xb+a.R[k]:b.R[k]),c.S[k]=max(max(a.S[k],b.S[k]),a.R[k]+b.L[k]); \n    c.sum=a.sum+b.sum;\n    c.l=a.l,c.r=b.r;\n    return c;\n}\nvoid pushup(int i) {\n    tre[i]=tre[ls]+tre[rs];\n}\nvoid pushdown(int i) {\n    int l=tre[i].l,r=tre[i].r,k=tre[i].tag,v=tre[i].frc;\n    if(k!=-1) {\n        tre[ls].tag=tre[rs].tag=k;\n        tre[ls].frc=tre[rs].frc=0;\n        tre[ls].sum=(mid-l+1)*k;\n        tre[ls].S[k]=tre[ls].L[k]=tre[ls].R[k]=(mid-l+1);\n        tre[ls].S[k^1]=tre[ls].L[k^1]=tre[ls].R[k^1]=0;\n        tre[rs].sum=(r-mid)*k;\n        tre[rs].S[k]=tre[rs].L[k]=tre[rs].R[k]=(r-mid);\n        tre[rs].S[k^1]=tre[rs].L[k^1]=tre[rs].R[k^1]=0;\n        tre[i].tag=-1;\n    }\n    if(v!=0) {\n        tre[ls].frc^=v,tre[rs].frc^=v;\n        tre[ls].sum=(mid-l+1)-tre[ls].sum;\n        swap(tre[ls].L[0],tre[ls].L[1]);\n        swap(tre[ls].R[0],tre[ls].R[1]);\n        swap(tre[ls].S[0],tre[ls].S[1]);\n        tre[rs].sum=(r-mid)-tre[rs].sum;\n        swap(tre[rs].L[0],tre[rs].L[1]);\n        swap(tre[rs].R[0],tre[rs].R[1]);\n        swap(tre[rs].S[0],tre[rs].S[1]);\n        tre[i].frc=0;\n    }\n}\nvoid build(int i,int l,int r) {\n    tre[i].l=l,tre[i].r=r,tre[i].tag=-1,tre[i].frc=0;\n    if(l==r) {\n        tre[i].sum=a[l];\n        tre[i].L[a[l]]=tre[i].R[a[l]]=tre[i].S[a[l]]=1;\n        return;\n    }\n    build(ls,l,mid);\n    build(rs,mid+1,r);\n    pushup(i);\n}\nvoid change(int i,int el,int er,int k) {\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er) {\n        tre[i].tag=k,tre[i].frc=0;\n        tre[i].sum=(r-l+1)*k;\n        tre[i].S[k]=tre[i].L[k]=tre[i].R[k]=(r-l+1);\n        tre[i].S[k^1]=tre[i].L[k^1]=tre[i].R[k^1]=0;\n        return;\n    }\n    pushdown(i);\n    if(el&lt;=mid) change(ls,el,er,k);\n    if(er&gt; mid) change(rs,el,er,k);\n    pushup(i);\n}\nvoid reverse(int i,int el,int er) {\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er) {\n        tre[i].frc^=1;\n        tre[i].sum=(r-l+1)-tre[i].sum;\n        swap(tre[i].L[0],tre[i].L[1]);\n        swap(tre[i].R[0],tre[i].R[1]);\n        swap(tre[i].S[0],tre[i].S[1]);\n        return;\n    }\n    pushdown(i);\n    if(el&lt;=mid) reverse(ls,el,er);\n    if(er&gt; mid) reverse(rs,el,er);\n    pushup(i);\n}\ntree query(int i,int el,int er) {\n    int l=tre[i].l,r=tre[i].r;\n    if(el&lt;=l &amp;&amp; r&lt;=er) return tre[i];   \n    pushdown(i);\n    if(er&lt;=mid) return query(ls,el,er);\n    else if(el&gt; mid) return query(rs,el,er);\n    else return query(ls,el,mid)+query(rs,mid+1,er);\n}\nint main() {\n    //freopen(\"1.in\",\"r\",stdin); \n    n=read1(),m=read1();\n    for(int i=1; i&lt;=n; ++i) a[i]=read1();\n    build(1,1,n);\n    for(int i=1; i&lt;=m; ++i) {\n        op=read1(),l=read1(),r=read1(),++l,++r;\n        if(op==0) {\n            change(1,l,r,0);\n        } else if(op==1) {\n            change(1,l,r,1);\n        } else if(op==2) {\n            reverse(1,l,r);\n        } else if(op==3) {\n            write1(query(1,l,r).sum),putchar('\\n');\n        } else {\n            write1(query(1,l,r).S[1]),putchar('\\n');\n        }\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/","title":"\u7ebf\u6bb5\u6811\u5408\u5e76","text":"<p>update 2023.10.18 ~~\u7237\u590d\u6d3b\u4e86\uff0c\u56de\u6765\u5199\u603b\u7ed3\u4e86~~</p>"},{"location":"my%20past/OI/%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%90%88%E5%B9%B6/#p4556","title":"\u6a21\u677fP4556 \u96e8\u5929\u7684\u5c3e\u5df4","text":"<p>\u8981\u6c42\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u7684\u51fa\u73b0\u6b21\u6570\u6700\u591a\u7684\u8865\u7ed9\u3002</p> <p>\u53ef\u4ee5\u60f3\u5230\uff0c\u7ed9\u6bcf\u4e2a\u8282\u70b9\u5f00\u4e00\u4e2a\\([1,10^5]\\)\u7684\u6876\u6765\u50a8\u5b58\u6bcf\u79cd\u8865\u7ed9\u7684\u51fa\u73b0\u6b21\u6570\u3002</p> <p>\u7136\u540e\u5c06\u6bcf\u6b21\u64cd\u4f5c\u8f6c\u5316\u4e3a\u5dee\u5206\uff1a1-u\uff0c1-v\u8def\u5f84+1\uff0c1-lca,1-fa[lca]\u8def\u5f84-1.</p> <p>\u6700\u540e\u4ece\u4e0b\u5230\u4e0adfs\uff0c\u5c06\u6570\u7ec4\u52a0\u8d77\u6765\uff0c\u5373\\(cnt[u][i]=\\sum_{v\\in son[u]} cnt[v][i]\\)\uff0c\u5c31\u53ef\u4ee5\u5f97\u5230\u7b54\u6848\u3002</p> <p>\u4f46\u662f\uff0c\\(cnt\\)\u6570\u7ec4\u592a\u5927\uff0c\u6ca1\u6cd5\u5b58\u50a8\u3002</p> <p>\u6545\u6211\u4eec\u6709\u4e86\u7ebf\u6bb5\u6811\u5408\u5e76\u3002</p> <p>\u6bcf\u4e2a\u8282\u70b9\u52a8\u6001\u5f00\u70b9\uff0c\u7ef4\u62a4\u4e00\u4e2a\\([1,10^5]\\)\u7684\u6743\u503c\u7ebf\u6bb5\u6811\u3002</p> <p>\u53ef\u4ee5\u77e5\u9053\uff0c\u6bcf\u6b21\u64cd\u4f5c\u4f1a\u8ba94\u4e2a\u70b9\u5206\u522b\u589e\u52a0\\(O(logn)\\)\u4e2a\u70b9\u3002</p> <p>\u7136\u540e\uff0c\u5bf9\u4e8e\u5408\u5e76\u64cd\u4f5c\uff0c\u6211\u4eec\u5206\u522b\u904d\u5386\u4e24\u4e2a\u7ebf\u6bb5\u6811\u3002</p> <p>\u5982\u679c\u4e24\u4e2a\u7ebf\u6bb5\u6811\u90fd\u62e5\u6709\u5de6\u5b50\u8282\u70b9\uff0c\u5219\u7ee7\u7eed\u904d\u5386\u4e24\u4e2a\u5de6\u513f\u5b50\uff1b\u5426\u5219\uff0c\u5c31\u8ba9\u7b2c\u4e00\u4e2a\u7ebf\u6bb5\u6811\u7684\u5de6\u513f\u5b50\u6307\u5411\u8fd9\u4e2a\u513f\u5b50\uff1b\u5982\u679c\u5230\u8fbe\u53f6\u5b50\u8282\u70b9\uff0c\u5c31\u5c06\u4e24\u4e2a\u53f6\u5b50\u7684\u503c\u76f8\u52a0;\u53f3\u513f\u5b50\u540c\u7406\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b8c\u6210\u5408\u5e76\u4e86\u3002</p> <p>\u53ef\u4ee5\u8bc1\u660e\uff0c\u6bcf\u6b21\u5408\u5e76\u65f6\u7ebf\u6bb5\u68112\u4e2d\u904d\u5386\u5230\u7684\u8282\u70b9\u88ab\u5408\u5e76\u5230\u4e86\u65b0\u7ebf\u6bb5\u6811(\u7ebf\u6bb5\u68111)\u4e2d\uff0c\u5219\u65b0\u7ebf\u6bb5\u6811\u4e2d\u8fd9\u4e9b\u5c5e\u4e8e2\u7684\u70b9\u4e0d\u4f1a\u518d\u88ab\u904d\u5386\u5230\uff1b\u800c\u6ca1\u904d\u5386\u5230\u7684\u70b9\u88ab\u63a5\u5728\u4e86\u7ebf\u6bb5\u68111\u4e0a\uff0c\u7ec4\u6210\u4e86\u4e00\u4e2a\u8239\u65b0\u7684\u3001\u6ca1\u6709\u904d\u5386\u8fc7\u7684\u7ebf\u6bb5\u6811\u3002\u6240\u4ee5\u6bcf\u4e2a\u70b9\u6700\u591a\u88ab\u904d\u5386\u4e00\u6b21\u3002</p> <p>\u800c\u6bcf\u6b21\u5408\u5e76\u4e0d\u4f1a\u589e\u52a0\u65b0\u8282\u70b9\uff0c\u6240\u4ee5\u7a7a\u95f4\u4e0e\u65f6\u95f4\u590d\u6742\u5ea6\u5747\u4e3a\\(O(nlogn)\\)\u3002</p> <p>\u81f3\u4e8e\u6700\u5927\u503c\uff0c\u6211\u4eec\u5bf9\u4e8e\u6bcf\u4e2a\u7ebf\u6bb5\u6811\u8282\u70b9\u7ef4\u62a4\u4e00\u4e2a\u79cd\u7c7b\\(tre[i]\\)\u548c\u51fa\u73b0\u6b21\u6570\\(sum[i]\\)\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#define mid (l+r&gt;&gt;1)\nusing namespace std;\nconst int N=1e5+10,K=30,NN=1e5;\n\nstruct edge{\n    int v,nxt;\n}e[N&lt;&lt;1];\nint cnt,u,v,z,n,m,tot;\nint head[N],fa[N][K],dep[N],sum[N&lt;&lt;6],tre[N&lt;&lt;6],ls[N&lt;&lt;6],rs[N&lt;&lt;6],rt[N],ans[N];\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid pushup(int x){\n    if(sum[ls[x]]&gt;=sum[rs[x]]){\n        sum[x]=sum[ls[x]];\n        tre[x]=tre[ls[x]];\n    }else{\n        sum[x]=sum[rs[x]];\n        tre[x]=tre[rs[x]];\n    }\n}\nvoid change(int &amp;x,int l,int r,int pos,int k){\n    if(!x) x=++tot;\n    if(l==r){\n        sum[x]+=k;\n        tre[x]=pos;\n        return;\n    }\n    if(pos&lt;=mid) change(ls[x],l,mid,pos,k);\n    else change(rs[x],mid+1,r,pos,k);\n    pushup(x);\n}\nint merge(int a,int b,int l,int r){\n    if(!a || !b) return a+b;\n    if(l==r){\n        sum[a]+=sum[b];\n        return a;\n    }\n    ls[a]=merge(ls[a],ls[b],l,mid);\n    rs[a]=merge(rs[a],rs[b],mid+1,r);\n    pushup(a);\n    return a;\n}\n\nvoid dfs(int u,int p){\n    fa[u][0]=p;\n    for(int i=1;i&lt;K;++i){\n        fa[u][i]=fa[fa[u][i-1]][i-1];\n    }\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p) continue;\n        dep[v]=dep[u]+1;\n        dfs(v,u);\n    }\n}\nint getlca(int u,int v){\n    if(u==v) return u;\n    if(dep[u]&lt;dep[v]) swap(u,v);\n    int k=dep[u]-dep[v];\n    for(int i=0;i&lt;K;++i){\n        if(k&amp;(1&lt;&lt;i)) u=fa[u][i];\n    }\n    if(u==v) return u;\n    for(int i=K-1;i&gt;=0;--i){\n        if(fa[u][i]!=fa[v][i]) u=fa[u][i],v=fa[v][i];   \n    }\n    return fa[u][0];\n}\nvoid DFS(int u,int p){\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(v==p) continue;\n        DFS(v,u);\n        rt[u]=merge(rt[u],rt[v],1,NN);\n    }\n    if(sum[rt[u]]) ans[u]=tre[rt[u]];\n}\nint main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;n;++i){\n        scanf(\"%d%d\",&amp;u,&amp;v);\n        add(u,v);\n        add(v,u);\n    }\n    dfs(1,0);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;z);\n        int lca=getlca(u,v);\n        change(rt[u],1,NN,z,1);\n        change(rt[v],1,NN,z,1);\n        change(rt[lca],1,NN,z,-1);\n        change(rt[fa[lca][0]],1,NN,z,-1);\n    }\n    DFS(1,0);\n    for(int i=1;i&lt;=n;++i) printf(\"%d\\n\",ans[i]);\n    return 0;\n} \n/*\n10 10 \n2 1 \n3 2 \n4 3 \n5 3 \n6 3 \n7 4 \n8 5 \n9 8 \n10 3 \n6 2 6 \n3 2 6 \n3 3 2 \n6 6 6 \n10 3 3 \n10 7 1 \n3 7 4 \n7 9 5 \n4 2 4 \n3 3 6\n*/\n</code></pre> <p>P5298</p> <p>\u8bbe\\(f_{i,j}\\)\u4e3a\u7b2ci\u4e2a\u8282\u70b9\u51fa\u73b0j\u7684\u6982\u7387\uff0cl,r\u4e3a\u5de6\u53f3\u513f\u5b50\uff0cm\u4e3ai\u5b50\u6811\u4e2d\u53f6\u5b50\u8282\u70b9\u7684\u4e2a\u6570\u3002\u5219\uff1a</p> <p>\\(f_{i,j}=f_{l,j} \\times (p_i\\times\\sum_{k=1}^{j-1}f_{r,k}+(1-p_i)\\times \\sum_{k=j+1}^{m}f_{r,k})+f_{r,j} \\times (p_i\\times\\sum_{k=1}^{j-1}f_{l,k}+(1-p_i)\\times \\sum_{k=j+1}^{m}f_{l,k})\\)</p> <p>\u8fd9\u4e2a\\(f\\)\u6570\u7ec4\u5c31\u662f\u8981\u7ef4\u62a4\u7684\u6876\u3002</p> <p>\u90a3\u4e48\uff0c\u6211\u4eec\u53ef\u4ee5\u5728\u6bcf\u4e2a\u8282\u70b9\u4e0a\uff0c\u5bf9\u4e8e\u6743\u503c\u7684\u603b\u4e2a\u6570\u5f00\u4e00\u4e2a\u6743\u503c\u7ebf\u6bb5\u6811\uff0c\u7ef4\u62a4\u6bcf\u79cd\u6743\u503c\u7684\u51fa\u73b0\u6982\u7387\u3002</p> <p>\u7531\u4e8e\u6982\u7387\u662f\u5206\u6570\uff0c\u90a3\u4e48\u53ef\u4ee5\u7528\\(ax\\equiv b(\\mod p)\\)\u6765\u6c42\u51fa\\(x=\\frac{b}{a}\\)\u5728\u6a21\u610f\u4e49\u4e0b\u7684\u503c\u3002</p> <p>\u8fd9\u4e2a\u5f0f\u5b50\u53ef\u4ee5\u7528\u6269\u5c55\u6b27\u51e0\u91cc\u5f97(exgcd)\u6c42\uff0c\u4e5f\u53ef\u4ee5\u6839\u636e\u5c0f\u8d39\u9a6c\u5b9a\u7406:\\(a^{p-1}\\equiv 1(\\mod p)\\)\u5f97\u51fa\u7b49\u4ef7\u5173\u7cfb\\(a^{p-2}\\equiv a^{-1}(\\mod p)\\)</p> <p>\u8003\u8651\u5de6\u8fb9\uff0c\u90a3\u4e48\u5bf9\u4e8e\u62ec\u53f7\u91cc\u7684\u90a3\u4e00\u5768\uff0c\u53ef\u4ee5\u5728\u5408\u5e76\u8fc7\u7a0b\u4e2d\u7ef4\u62a4\u3002</p> <p>\u5047\u8bbe\\(xmul\\)\u662f\u90a3\u4e00\u5768\u7684\u503c\uff0c\u90a3\u4e48\u6bcf\u4e00\u641c\u7d22\u5de6\u8282\u70b9,\u6211\u4eec\u5c31\u53ef\u4ee5\u66f4\u65b0\\((1-p_i)\\times \\sum_{k=j+1}^{m}f_{r,k}\\)\u7684\u503c\uff0c\u56e0\u4e3a\u5373\u5c06\u641c\u7d22\u7684\u5de6\u8282\u70b9\u7684\u6743\u503c\u4e00\u5b9a\u5c0f\u4e8e\u5168\u90e8\u53f3\u8282\u70b9\u7684\u6743\u503c\u3002\u641c\u7d22\u53f3\u8282\u70b9\u540c\u7406\u3002</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u5728\u6700\u540e\u5bf9\u7ebf\u6bb5\u6811\u8fdb\u884c\u4e00\u4e2adfs,\u8bb0\u5f55\u6bcf\u4e2a\u53f6\u5b50\u8282\u70b9\u7684\u503c\uff0c\u5373\u53ef\u5f97\u5230\u6700\u7ec8\u7b54\u6848\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;algorithm&gt;\n#include&lt;cstring&gt;\n#define mid (l+r&gt;&gt;1)\nusing namespace std;\nconst int N=3e5+10,P=998244353,PP=796898467;\nint tre[N&lt;&lt;5],multag[N&lt;&lt;5],ls[N&lt;&lt;5],rs[N&lt;&lt;5],rt[N],ch[N][2],val[N],b[N],cnt[N],ans[N];\nint n,fa,tot,id;\nint build(){\n    int x=++id;\n    ls[x]=rs[x]=tre[x]=0,multag[x]=1;\n    return x;\n}\nvoid pushup(int x){\n    tre[x]=(tre[ls[x]]+tre[rs[x]])%P;\n}\nvoid cal(int x,int v){\n    tre[x]=(1ll*tre[x]*v)%P;\n    multag[x]=(1ll*multag[x]*v)%P;\n}\nvoid pushdown(int x){\n    int k=multag[x];\n    if(ls[x]) cal(ls[x],k);\n    if(rs[x]) cal(rs[x],k);\n    multag[x]=1;\n}\nvoid change(int &amp;x,int l,int r,int pos,int k){\n\n    if(!x) x=build();\n    if(l==r){\n        tre[x]+=k;\n        return;\n    }\n    pushdown(x);\n    if(pos&lt;=mid) change(ls[x],l,mid,pos,k);\n    else change(rs[x],mid+1,r,pos,k);\n    pushup(x);\n}\nint merge(int x,int y,int l,int r,int xmul,int ymul,int p){\n    //if(!x &amp;&amp; !y) return 0;\n    if(!x){\n        cal(y,ymul);\n        return y;\n    }\n    if(!y){\n        cal(x,xmul);\n        return x;\n    }\n    pushdown(x),pushdown(y);\n    int lsx=tre[ls[x]],lsy=tre[ls[y]],rsx=tre[rs[x]],rsy=tre[rs[y]];\n    ls[x]=merge(ls[x],ls[y],l,mid,(xmul+(1ll*rsy%P*(1-p+P)%P))%P,(ymul+(1ll*rsx%P*(1-p+P)%P))%P,p);\n    rs[x]=merge(rs[x],rs[y],mid+1,r,(xmul+(1ll*lsy*p%P))%P,(ymul+(1ll*lsx*p%P))%P,p);\n    pushup(x);\n    return x;\n}\n\nvoid dfs(int u){\n    if(!cnt[u]) change(rt[u],1,tot,val[u],1);\n    else if(cnt[u]==1) dfs(ch[u][0]),rt[u]=rt[ch[u][0]];\n    else if(cnt[u]==2) dfs(ch[u][0]),dfs(ch[u][1]),rt[u]=merge(rt[ch[u][0]],rt[ch[u][1]],1,tot,0,0,val[u]); \n}\nvoid work(int x,int l,int r){\n    if(l==r){\n        ans[l]=tre[x];\n        return;\n    }\n    pushdown(x);\n    work(ls[x],l,mid);\n    work(rs[x],mid+1,r);\n}\n\nint main(){\n    id=tot=0;\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%d\",&amp;fa);\n        if(fa) ch[fa][cnt[fa]++]=i;\n    }\n    for(int i=1;i&lt;=n;++i) scanf(\"%d\",&amp;val[i]);\n    for(int i=1;i&lt;=n;++i){\n        if(cnt[i]){\n            val[i]=(1ll*val[i]*PP)%P;\n        }else{\n            b[++tot]=val[i];\n        }\n    }\n    sort(b+1,b+tot+1);\n    for(int i=1;i&lt;=n;++i) if(!cnt[i]) val[i]=lower_bound(b+1,b+tot+1,val[i])-b;\n    dfs(1);\n    work(rt[1],1,tot);\n    int res=0;\n    for(int i=1;i&lt;=tot;++i) res=(res+1ll*ans[i]%P*ans[i]%P*i%P*b[i]%P)%P;\n    printf(\"%d\\n\",res);\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/%E7%BB%93%E6%9E%84%E4%BD%93/","title":"\u7ed3\u6784\u4f53","text":""},{"location":"my%20past/OI/%E7%BB%93%E6%9E%84%E4%BD%93/#11","title":"1.1 \u6784\u9020\u51fd\u6570","text":"<pre><code>struct node{\n    int data;\n    string str;\n    char x;\n    //\u81ea\u5df1\u5199\u7684\u521d\u59cb\u5316\u51fd\u6570\n    void init(int a, string b, char c){\n        this-&gt;data = a;\n        this-&gt;str = b;\n        this-&gt;x = c;\n    }\n    node() :x(), str(), data(){}\n    node(int a, string b, char c) :x(c), str(b), data(a){}\n};\n</code></pre>"},{"location":"my%20past/OI/%E7%BB%93%E6%9E%84%E4%BD%93/#12","title":"1.2 \u91cd\u7f6e\u8fd0\u7b97\u7b26","text":"<p><pre><code>//1.this\u5199\u6cd5\nstruct point\n{\n    int elem;\n    bool operator==(const point b) const\n    {\n        return this-&gt;elem == b.elem;\n    }\n    bool operator!=(const point b) const\n    {\n        return this-&gt;elem != b.elem;\n    }\n    bool operator&lt;=(const point b) const\n    {\n        return this-&gt;elem &lt;= b.elem;\n    }\n    bool operator&lt;(const point b) const\n    {\n        return this-&gt;elem &lt; b.elem;\n    }\n    bool operator&gt;=(const point b) const\n    {\n        return this-&gt;elem &gt;= b.elem;\n    }\n    bool operator&gt;(const point b) const\n    {\n        return this-&gt;elem &gt; b.elem;\n    }\n};\n//2.&amp;\u5199\u6cd5\nstruct node{\n    int dis,pos;\n  bool operator &lt;(const node &amp;x)const{\n     return x.dis&lt;dis; \n  }\n};\n</code></pre> * \u5e94\u7528\uff1adijkstra\u5806\u4f18\u5316 <pre><code>struct node{\n    int dis,pos;\n  bool operator &lt;(const node &amp;x)const{\n     return x.dis&lt;dis; \n  }\n  bool\n    node(int d,int x){\n         dis=d;pos=x;\n   }\n};\n</code></pre></p>"},{"location":"my%20past/OI/%E7%BC%A9%E7%82%B9/","title":"\u7f29\u70b9","text":"<p>\u4e3b\u8981\u4f5c\u7528\uff1a\u5c06\u6709\u5411\u6709\u73af\u56fe\u53d8\u6210\u6709\u5411\u65e0\u73af\u56fe\uff08DAG\uff09</p> <p>\u6574\u4f53\u601d\u8def\u5c31\u662fdfs\uff0c\u518d\u641c\u7d22\u6811\u4e2d\u5224\u65ad\u73af\u3002</p> <p>\u6709\u4e24\u79cd\u6307\u5411\u5df2\u7ecf\u641c\u7d22\u8fc7\u7684\u70b9\u7684\u8fb9\uff0c\u4e00\u79cd\u662f\u8fd4\u7956\u8fb9\uff0c\u5373\u6307\u5411\u81ea\u5df1\u7684\u7956\u5148\u8282\u70b9\uff1b \u4e00\u79cd\u662f\u6a2a\u53c9\u8fb9\uff0c\u5373\u6307\u5411\u81ea\u5df1\u7684\u975e\u7956\u5148\u8282\u70b9\u3002\u53ef\u4ee5\u8bc1\u660e\u53ea\u6709\u8fd4\u7956\u8fb9\u4f1a\u4ea7\u751f\u73af\u3002</p> <p>\u6240\u4ee5\u7528\u6808\u7ef4\u62a4\u5f53\u524d\u7684\u641c\u7d22\u94fe\uff0c\u5f00\u4e24\u4e2a\u6570\u7ec4dfn\u548clow\u7ef4\u62a4\u3002\u53ea\u8981\u627e\u5230\u8fd4\u7956\u4fbf\u5c31\u9000\u6808\u5230\u7956\u5148\uff0c\u5e76\u5c06\u6240\u6709\u70b9\u4f5c\u4e3a\u4e00\u4e2a\u5f3a\u8fde\u901a\u5206\u91cf\u3002\u5426\u5219\u5c31\u65e0\u89c6\uff0c\u5728\u56de\u6eaf\u662f\u5c06\u5355\u4e2a\u70b9\u4f5c\u4e3a\u5f3a\u8fde\u901a\u5206\u91cf\u3002</p> <p></p>"},{"location":"my%20past/OI/%E7%BC%A9%E7%82%B9/#_2","title":"\u6a21\u677f","text":"<pre><code>void tarjan(int u){\n    dfn[u]=low[u]=++tot;//low[u]\u503c\u9ed8\u8ba4\u4e3adfn[u],\u540e\u9762\u518d\u66f4\u65b0\n    stk[++top]=u;//\u8fdb\u6808\u6253\u6807\u8bb0\n    vis[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);//\u8fd9\u4e00\u6b65\u662f\u4e3a\u4e86\u66f4\u65b0\u90a3\u4e9b\u518d\u73af\u4e2d\u7684\u70b9\uff0c\u5982\u4e0a\u56fe\u76846\uff0c7\n        }else{\n            if(vis[v])low[u]=min(low[u],dfn[v]);//\u8fd4\u7956\u8fb9\uff0c\u627e\u5230\u4e86\u73af\uff0c\u90a3\u5c31\u5c06low[u]\u66f4\u65b0\u4e3a\u5f53\u524d\u6839\u8282\u70b9\u3002\n\n        //\u6a2a\u53c9\u8fb9\u59825-&gt;4\u76f4\u63a5\u5ffd\u7565\n        }\n    }\n  //\u6ce8\u610f\u53ea\u6709\u81ea\u5df1\u662f\u6839\u624d\u9000\u6808\uff0c\u5426\u5219\u8981\u4fdd\u7559\u6808\u4e2d\u4fe1\u606f\u3002\n\n    if(dfn[u]==low[u]){//\u5982\u679c\u81ea\u5df1\u53ea\u80fd\u56de\u6eaf\u5230\u81ea\u5df1\uff0c\u8bf4\u660e\u81ea\u5df1\u662f\u5f3a\u8fde\u901a\u5206\u91cf\u4e2d\u7684\u6839\u8282\u70b9\uff0c\u5c31\u9000\u6808\u5230\u81ea\u5df1\uff0c\u5c06\u6240\u6709\u70b9\u6240\u79f0\u4e00\u4e2a\u70b9\u3002\n        ++nod;\n        while(1){\n            ans[stk[top]]=nod;\n            vis[stk[top]]=0;//\u53bb\u9664\u6807\u8bb0\n            if(stk[top--]==u)break;\n        }\n    }\n}\nint main(){\n    memset(dfn,0,sizeof dfn);\n   memset(low,0,sizeof low);\n   memset(vis,0,sizeof vis);\n   for(int i=1;i&lt;=n;++i){\n        if(!dfn[i])tarjan(i);\n   }\n\n}\n</code></pre> <p>P3387 &amp; P3627</p> <p>\u4e24\u9053\u9898\u5dee\u4e0d\u591a\uff0c\u4e00\u4e2a\u662f\u5148\u7f29\u70b9\uff0c\u518d\u6839\u636e\u62d3\u6251\u6392\u5e8f\u7684\u987a\u5e8f\u53d6dp\uff0c\u8fd9\u6837\u4fdd\u8bc1\u65e0\u540e\u6548\u6027\uff0c\u6700\u540e\u8f93\u51fa\u6240\u6709\u70b9\u4e2d\u8d21\u732e\u6700\u5927\u7684\u503c\uff1b</p> <p>\u4e00\u4e2a\u662f\u7f29\u5b8c\u70b9\u540e\uff0c\u4ece\u65b0\u7684\u8d77\u70b9\u53d6\u7528SPFA\u6c42\u6700\u957f\u8def\uff0c\u6700\u540e\u518d\u9152\u5427\u4e2d\u62db\u6700\u957f\u7684\u5c31\u884c\u3002</p> <p>~~\u592a\u7b80\u5355\u4e0d\u653e\u4ee3\u7801\u4e86~~</p> <p>P1262</p> <p>\u5c06\u6240\u6709\u7684\u73af\u7f29\u6210\u4e00\u4e2a\u70b9\uff0c\u5e76\u4e14\u5f97\u5230\u65b0\u7684\u70b9\u7684\u4ee3\u4ef7\u5c31\u662f\u73af\u5185\u6240\u6709\u70b9\u7684\u6700\u5c0f\u4ef7\u94b1\u3002</p> <p>\u90a3\u4e48\u5fc5\u987b\u8d3f\u8d42\u7684\u5c31\u662f\u5165\u5ea6\u4e3a\u96f6\u7684\u70b9\uff0c\u5982\u679c\u65e0\u6cd5\u8d3f\u8d42\u5c31\u65e0\u89e3\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=3010,M=8010,P=20000;\nint n,m,p,cnt,top,tot,nod;\nint a[N],w[N],head[N],dfn[N],low[N],vis[N],stk[N],ans[N],ind[N];\nstruct query{\n    int u,v;\n}q[M];\nstruct edge{\n    int v,nxt;\n}e[M&lt;&lt;1];\nvoid add(int u,int v){\n    e[++cnt].v=v;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n}\nvoid tarjan(int u){\n    dfn[u]=low[u]=++tot;\n    stk[++top]=u;\n    vis[u]=1;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(!dfn[v]){\n            tarjan(v);\n            low[u]=min(low[u],low[v]);\n        }else{\n            if(vis[v])low[u]=min(low[u],dfn[v]);\n        }\n    }\n    if(dfn[u]==low[u]){\n        ++nod;\n        while(1){\n            ans[stk[top]]=nod;\n            vis[stk[top]]=0;\n            if(stk[top--]==u)break;\n        }\n    }\n}\nint main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    memset(w,0x3f,sizeof w);\n    memset(a,0x3f,sizeof a);\n    scanf(\"%d%d\",&amp;n,&amp;p);\n    for(int i=1,tmp,pos;i&lt;=p;++i)scanf(\"%d%d\",&amp;pos,&amp;tmp),a[pos]=tmp;\n    scanf(\"%d\",&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%d%d\",&amp;q[i].u,&amp;q[i].v);\n        add(q[i].u,q[i].v);\n    }\n    memset(vis,0,sizeof vis);\n    for(int i=1;i&lt;=n;++i)if(!dfn[i])tarjan(i);\n\n    for(int i=1;i&lt;=n;++i){\n        w[ans[i]]=min(w[ans[i]],a[i]);\n    }\n\n    for(int i=1;i&lt;=m;++i){\n        int uu=ans[q[i].u],vv=ans[q[i].v];\n        if(uu==vv)continue;\n        ind[vv]++;\n    }\n    memset(vis,0,sizeof vis);\n    int res=0;\n    bool flag=true;\n    for(int i=1;i&lt;=nod;++i){\n        if(!ind[i]){\n            if(w[i]&lt;=P){\n                res+=w[i];  \n            }else{\n                vis[i]=1;\n                flag=false;\n            }\n        }\n    }\n    if(flag){\n        printf(\"YES\\n%d\",res);\n    }else{\n        int minn=N+N;\n        for(int i=1;i&lt;=n;++i){\n            if(vis[ans[i]])minn=min(minn,i);\n        }\n        printf(\"NO\\n%d\",minn);\n    }\n    return 0;\n} \n/*\n7\n6\n5 100\n1 99\n2 98\n3 101\n4 102\n7 200\n7\n5 1\n1 2\n2 6\n1 4\n4 5\n2 3 \n3 1\n*/\n</code></pre>"},{"location":"my%20past/OI/%E7%BC%A9%E7%82%B9/#tarjan","title":"tarjan\u6c42\u5272\u70b9","text":"<p>\u540c\u6837\u662f\u5229\u7528\\(low\\)\u548c\\(dfn\\)\u6570\u7ec4\u3002</p> <p>\u5bf9\u4e8etarjan\u7684\u4e00\u6b21\u641c\u7d22\uff0c\u7531\u4e8e\u4e0d\u4f1a\u5230\\(dfn\\)\u6570\u7ec4\u4e0d\u4e3a0\u7684\u70b9\u7ee7\u7eed\u641c\u7d22\uff0c\u56e0\u6b64\uff0c\u6574\u4e2a\u8fc7\u7a0b\u5f62\u6210\u4e00\u9897\u641c\u7d22\u6811\u3002\u5bf9\u8fd9\u4e2a\u641c\u7d22\u6811\u4e2d\uff0c\u53ef\u80fd\u4e3a\u5272\u70b9\u67092\u79cd\u60c5\u51b5:</p> <ol> <li>\u6839\u8282\u70b9\uff0c\u4e14\u513f\u5b50\u5927\u4e8e\u7b49\u4e8e2</li> <li>\\(dfn[u]\\leq low[v]\\)\u7684\u70b9\u3002</li> </ol> <p>\u56e0\u4e3a\\(v\\)\u53ef\u80fd\u56de\u6eaf\u5230\u7684\u6700\u9760\u524d\u7684\u70b9\u90fd\u5927\u4e8e\\(u\\)\uff0c\u8bf4\u660e\\(v\\)\u4e0d\u80fd\u901a\u8fc7\u9664\u4e86\\(u\\)\u4ee5\u5916\u7684\u70b9\u4e0e\u5269\u4f59\u6bd4\\(dfn[u]\\)\u5c0f\u7684\u70b9\u8054\u901a\uff0c\u6240\u4ee5\\(u\\)\u662f\u5272\u70b9\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=2e4+10,M=1e5+10;\nstruct edge{\n    int v,nxt;\n}e[M&lt;&lt;1];\nint n,m,u,v,tot,cnt;\nint dfn[N],low[N],cut[N],head[N];\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\n\nvoid tarjan(int u,int p){\n    dfn[u]=low[u]=++tot;\n    int son=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(!dfn[v]){\n            tarjan(v,p);\n            low[u]=min(low[u],low[v]);\n            if(low[v]&gt;=dfn[u] &amp;&amp; u!=p) cut[u]=1; \n            if(u==p) ++son; \n        }else low[u]=min(low[u],dfn[v]);\n    }\n    if(son&gt;=2 &amp;&amp; u==p) cut[u]=1;\n}\nint main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%d%d\",&amp;u,&amp;v);\n        add(u,v),add(v,u);\n    }\n    for(int i=1;i&lt;=n;++i){\n        if(!dfn[i]) tarjan(i,i);\n    }\n    int ans=0;\n    for(int i=1;i&lt;=n;++i){\n        if(cut[i]) ++ans;\n    }\n    printf(\"%d\\n\",ans);\n    for(int i=1;i&lt;=n;++i){\n        if(cut[i]) printf(\"%d \",i);\n    }\n    return 0;\n} \n</code></pre> <p>P3469</p> <p>\u7531\u4e8e\u641c\u7d22\u65f6\u4e00\u68f5\u6811\uff0c\u6240\u4ee5\u53ef\u4ee5\u7ef4\u62a4\\(sz\\)\u6570\u7ec4\u3002\u7b54\u6848\u5373\u4e3a\\(\\sum sz[v]*(n-sz[v])\\)\uff0c\\(sz[v]\\)\u53ef\u4ee5\u5728\u641c\u7d22\u4e2d\u5f97\u5230\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstring&gt;\n#define int long long\nusing namespace std;\nconst int N=1e5+10,M=5e5+10;\nstruct edge{\n    int v,nxt;\n}e[M&lt;&lt;1];\nint head[N],dfn[N],low[N],sz[N],ans[N];\nint cnt,n,m,u,v,tot;\nvoid add(int u,int v){\n    e[++cnt].v=v,e[cnt].nxt=head[u],head[u]=cnt;\n}\nvoid tarjan(int u){\n    dfn[u]=low[u]=++tot;\n    int r=n-1;\n    sz[u]=1;ans[u]=r;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(!dfn[v]){\n            tarjan(v),sz[u]+=sz[v],low[u]=min(low[u],low[v]);\n            if(low[v]&gt;=dfn[u]) ans[u]+=sz[v]*(n-sz[v]),r-=sz[v];\n        }else low[u]=min(low[u],dfn[v]);\n    }\n    ans[u]+=r*(n-r);\n}\nsigned main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;u,&amp;v);\n        add(u,v),add(v,u);\n    }\n    tarjan(1);\n    for(int i=1;i&lt;=n;++i){\n        printf(\"%lld\\n\",ans[i]);\n    }\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/","title":"\u7f51\u7edc\u6d41","text":""},{"location":"my%20past/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/#dinic","title":"Dinic","text":"<pre><code>bool bfs() {\n    memset(h,-1,sizeof h);\n    int op=0,cl=1;\n    h[s]=0;\n    q[1]=s;\n    while(op&lt;cl) {\n        op=(op+1)%M;\n        int u=q[op];\n        for(int i=head[u]; i!=-1; i=e[i].nxt) {\n            int v=e[i].v,w=e[i].w;\n            if(w&gt;0 &amp;&amp; h[v]==-1) {\n                cl=(cl+1)%M;\n                q[cl]=v;\n                h[v]=h[u]+1;\n                if(v==t)return true;\n            }\n        }\n    }\n    return h[t]!=-1;\n}\nint dfs(int u,int flow) {\n    if(u==t)return flow;\n    int sum=0;\n    for(int &amp;i=now[u]; i!=-1; i=e[i].nxt) {\n        int v=e[i].v,w=e[i].w;\n        if(w&gt;0 &amp;&amp; h[v]==h[u]+1) {\n            int s1=dfs(v,min(flow,w));\n            sum+=s1;\n            flow-=s1;\n            e[i].w-=s1;\n            e[i^1].w+=s1;\n            if(flow==0)break;\n        }\n    }\n    return sum;\n}\nint Dinic() {\n    int ans=0;\n    while(bfs()) {\n        memcpy(now,head,sizeof head);\n        ans+=dfs(s,INF);\n    }\n    return ans;\n}\n</code></pre> <p>P1251 \u7ebf\u6027\u89c4\u5212</p> <p>P2053 \u8bbe\u7f6en * m\u4e2a\u70b9\u6765\u8ba1\u7b97\u91cd\u53e0\u7684\u7b49\u5f85\u65f6\u95f4</p> <p>P2050 \u4e3aP2053\u7684\u52a8\u6001\u5f00\u70b9\u7248\u672c</p> <p>P2764 \u6700\u5c0f\u5272</p> <p>P2825 \u5206\u5272\u8fde\u901a\u5757</p>"},{"location":"my%20past/OI/%E7%BD%91%E7%BB%9C%E6%B5%81/#dijkstrajohnson","title":"\u8d39\u7528\u6d41dijkstra\u4e0ejohnson","text":"<ul> <li>johnson\u7684\u539f\u7406\u662f\uff1a\u7ed9\u6bcf\u4e2a\u70b9\u52a0\u4e0a\u4e00\u4e2a\u52bfh[u]\uff0c\u4f7f\u5f97\u65b0\u56fe\u4e2d\u7684\u8fb9\u6743\u975e\u8d1f\u3002</li> </ul> <p>\u8bc1\u660e\uff1a\u7531\u4e09\u89d2\u5f62\u4e0d\u7b49\u5f0f,dis[u]+w&gt;=dis[v] --&gt; w+h[u]-h[v]&gt;=0</p> <ul> <li>\u5982\u4f55\u7ef4\u62a4\u52bf\u51fd\u6570h[]\u3002</li> </ul> <p>\u521d\u59cb\u60c5\u51b5\u4e0b,\u5982\u679c\u6240\u6709\u7684\u6743\u503c\u90fd\u4e3a\u6b63,\u90a3\u4e48\u53ef\u4ee5\u7b80\u5355\u5730\u5c06\u6240\u6709h[i]\u8bbe\u7f6e\u4e3a0\uff1b\u5982\u679c\u6709\u8d1f\u6743\u503c,\u90a3\u4e48\u6211\u4eec\u505a\u4e00\u904dspfa,\u8ba9h[]\u7b49\u4e8e\u8ddd\u79bb\u51fd\u6570\u3002</p> <p>\u8ba9 \\(d'[i]\\) \u8868\u793a\\(G'\\)\u4e2d\\(S\\)\u5230\u70b9\\(i\\)\u7684\u8ddd\u79bb,\u5f53\u67d0\u6b21\u589e\u5e7f\u7ed3\u675f\u540e,\\(G'\\)\u4e2d\u4f1a\u65b0\u52a0\u5165\u67d0\u4e9b\u8fb9\\((j, i)\\),\u800c\u8fd9\u4e9b\\((j, i)\\)\u5fc5\u5b9a\u6ee1\u8db3\\(d'[i] + w'[i][j] = d'[j]\\) (\u5426\u5219 \\((i, j)\\) \u5c31\u4e0d\u4f1a\u5728\u589e\u5e7f\u8def\u4e2d)\u3002\u5bf9\u4e0a\u5f0f\u8fdb\u884c\u4e00\u4e9b\u4ee3\u6570\u53d8\u6362\uff1a</p> \\[ d'[i] + w'[i][j] = d'[j] \\\\d'[i] + w[i][j] + h[i]-h[j] = d'[j] \\\\(d'[j] + h[j])-(d'[i] + h[i])-w[i][j] = 0 \\\\(d'[j] + h[j])-(d'[i] + h[i]) + w[j][i] = 0 \\] <p>(\u56e0\u4e3a\u662f\u8d39\u7528\u6d41,\u6240\u4ee5\u6709w[i][j] = -w[j][i])</p> <p>\u56e0\u6b64\u8ba9\u6240\u6709h[i] += d'[i]\u540e,\u65b0\u52a0\u5165\u7684\u8fb9(j, i)\u4e5f\u4f1a\u6ee1\u8db3\u52bf\u51fd\u6570\u7684\u6027\u8d28\u3002</p> <p>\u540c\u65f6\u6211\u4eec\u6709\uff1a</p> \\[ d'[i] + w'[i][j] - d'[j] &gt;= 0\\\\ d'[i] + h[i] - h[j] + w[i][j] - d'[j] &gt;= 0\\\\ (d'[i] + h[i]) - (d'[j] + h[j]) + w[i][j] &gt;= 0\\\\ \\] <p>P4542</p> <p>\u8fd9\u9053\u9898\u56f0\u96be\u7684\u5730\u65b9\u5728\u4e8e\u6a21\u578b\u7684\u8f6c\u5316\uff0c\u5373\u5982\u4f55\u770b\u51fa\"\u6309\u987a\u5e8f\u6467\u6bc1\u6839\u636e\u5730\"\u7684\u9690\u85cf\u6761\u4ef6\u3002</p> <p>\u6211\u4eec\u8bbe\\(d[i][j]\\)\u8868\u793a\u4ece\\(i\\)\u5230\\(j\\)\u4e0d\u7ecf\u8fc7\u4efb\u4f55\u7f16\u53f7\u5927\u4e8e\\(i,j\\)\u7684\u70b9\u7684\u6700\u77ed\u8def\u5f84\u3002\u8fd9\u4fdd\u8bc1\u4e86\u6211\u4eec\u4e00\u5b9a\u53ef\u4ee5\u6309\u7167\u7ed9\u5b9a\u7684\u987a\u5e8f\u8fdb\u884c\u66f4\u65b0\u3002</p> <p>\u6240\u4ee5\u7528\\(Floyd\\)\u9884\u5904\u7406\u51fa\\(d[i][j]\\)\uff0c\u7136\u540e\u7528\u8d39\u7528\u6d41\u6c42\u89e3\u3002</p> <p>\u81f3\u4e8e\u5efa\u56fe\uff0c\u56e0\u4e3a\u9898\u76ee\u4fdd\u8bc1\u4e00\u5b9a\u6709\u89e3\uff0c\u6240\u4ee5\u6574\u5f20\u56fe\u4e00\u5b9a\u8054\u901a\uff0c\u4e0d\u7528\u8003\u8651\u6709\u7684\u70b9\u4e0d\u88ab\u7ecf\u8fc7\uff1b\u53c8\u56e0\u4e3a\u8dd1\u7684\u662f\u6700\u5927\u6d41\uff0c\u6240\u4ee5\u6240\u6709\u70b9\u4e00\u5b9a\u90fd\u4f1a\u88ab\u7ecf\u8fc7\uff0c\u6211\u4eec\u53ea\u9700\u8981\u9650\u5236\u4e00\u4e0b\u6d41\u91cf\u4e0d\u8d85\u8fc7\\(K\\)\u5373\u53ef\u3002</p> <p>\u8fd9\u6837\uff0c\u8bbe\u6e90\u6c47\u70b9\u4e3a\\(s,t\\)\uff0c\u90a3\u4e48\u5c06\\(1,2,...,n\\)\u7684\u70b9\u4e0e\\(s\\)\u8fde\\(w=1\\)\u7684\u8fb9\uff0c\u8868\u793a\u4e92\u4e0d\u76f8\u4ea4\u4e14\u53ea\u80fd\u6d41\u5411\u4e00\u4e2a\u70b9\uff1b\u5c06\\(0\\to n\\)\u8fde\\(w=K\\)\u7684\u8fb9\uff0c\u8868\u793a\u6700\u591a\u6709\\(K\\)\u6761\u8def\u5f84\uff0c\u6700\u591a\u6d41\u5411\\(K\\)\u4e2a\u70b9\u3002</p> <p>\u4e4b\u540e\uff0c\u5c06\\(0,1,...,n\\)\u7684\u70b9\u62c6\u70b9\uff0c\u4e92\u76f8\u8fde\\(w=1\\)\u7684\u8fb9\uff0c\u8868\u793a\u53ea\u6d41\u5411\u4e00\u4e2a\u6ee1\u8db3\u987a\u5e8f\u7684\u70b9\u3002</p> <p>\u6700\u540e\uff0c\u5c06\\(0',1',...,n'\\)\u5411\\(t\\)\u8fde\\(w=1\\)\u7684\u8fb9\uff0c\u6ca1\u6709\u5177\u4f53\u610f\u4e49\uff0c\u5c31\u662f\u5f3a\u884c\u8ba9\u4ed6\u4eec\u6709\u4e00\u4e2a\u6c47\u70b9\u3002</p> <p>\u8fd9\u6837\u8dd1\u51fa\u6765\u5c31\u662f\u6700\u4f18\u89e3\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;queue&gt;\nusing namespace std;\nconst int N=440,M=4e5+10,INF=0x3f3f3f3f;\nstruct edge{\n    int v,w,f,nxt;\n}e[M];\nint head[N],pre[N],lst[N],dis[N],vis[N];\nint d[N][N];\nint n,m,K,cnt,s,t,D,maxflow,mincost,u,v,w;\nvoid add(int u,int v,int w,int f){e[++cnt].v=v,e[cnt].w=w,e[cnt].f=f,e[cnt].nxt=head[u],head[u]=cnt;}\nvoid init(){\n    for(int i=0;i&lt;=n;++i){\n        d[i][i]=0;\n        for(int j=0;j&lt;=n;++j) if(i!=j) d[i][j]=INF;\n    }\n}\nvoid floyd(){\n    for(int k=0;k&lt;=n;++k)\n        for(int i=0;i&lt;=n;++i)\n            for(int j=0;j&lt;=n;++j)\n                if(k&lt;=max(i,j)) d[i][j]=min(d[i][j],d[i][k]+d[k][j]);   \n}\nvoid build(){\n    s=n*2+10,t=n*2+13,D=n+3;\n    for(int i=0;i&lt;=n;++i){\n        if(i==0)add(s,i,K,0),add(i,s,0,0);\n        else add(s,i,1,0),add(i,s,0,0);\n        add(i+D,t,1,0),add(t,i+D,0,0);\n        for(int j=i+1;j&lt;=n;++j)add(i,j+D,1,d[i][j]),add(j+D,i,0,-d[i][j]);\n    }\n}\nbool SPFA(){\n    queue&lt;int&gt; q;\n    memset(vis,0,sizeof vis);\n    memset(dis,0x3f,sizeof dis);\n    memset(pre,-1,sizeof pre);\n    dis[s]=0,vis[s]=1;\n    q.push(s);\n    while(!q.empty()){\n        int u=q.front();q.pop();\n        vis[u]=0;\n        for(int i=head[u];~i;i=e[i].nxt){\n            int v=e[i].v,w=e[i].w,f=e[i].f;\n            if(w&gt;0 &amp;&amp; dis[v]&gt;dis[u]+f){\n                dis[v]=dis[u]+f,pre[v]=u,lst[v]=i;\n                if(!vis[v]) vis[v]=1,q.push(v);\n            }\n        }\n    }\n    return pre[t]!=-1;\n}\nvoid MCMF(){\n    maxflow=0,mincost=0;\n    while(SPFA()){\n        int minn=INF;\n        for(int i=t;i!=s;i=pre[i]) minn=min(minn,e[lst[i]].w);\n        for(int i=t;i!=s;i=pre[i]) e[lst[i]].w-=minn,e[lst[i]^1].w+=minn;\n        maxflow+=minn,mincost+=minn*dis[t];\n    }\n}\nint main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n    scanf(\"%d%d%d\",&amp;n,&amp;m,&amp;K);\n    init();\n    for(int i=1;i&lt;=m;++i)scanf(\"%d%d%d\",&amp;u,&amp;v,&amp;w),d[u][v]=d[v][u]=min(d[u][v],w);\n    floyd();\n    build();\n    MCMF();\n    printf(\"%d\",mincost);\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/%E8%83%8C%E5%8C%85/","title":"\u80cc\u5305\u603b\u7ed3","text":"<p>P3859</p> <p>TJOI\u7684\u6c34\u9898\uff08\u9ec4\u9898\u96be\u5ea6\u7684\u7d2b\u9898\uff09</p> <p>\u5b9a\u4e49f[j]\u8868\u793a\u7528\u4e86j\u65f6\u95f4\u65f6\u83b7\u5f97\u5b9d\u77f3\u7684\u6700\u5927\u4ef7\u503c\u3002~~\u662f\u7684\u53ea\u7528\u4e00\u7ef4\u6eda\u52a8\u5c31\u884c~~</p> <p>\u56e0\u6b64\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> <pre><code>    f[j]=max(max(f[j],f[j-1]),f[j-t]+v);\n</code></pre> <p>\u53ef\u4ee5\u63d0\u524d\u628a\u5b9d\u77f3\u6309\u9650\u5236\u65f6\u95f4\u6392\u4e2a\u5e8f\uff0c\u4e5f\u53ef\u4ee5\u4e0d\u6392</p> <p>P1049</p> <p>\u80cc\u5305\u7684\u7b80\u5355\u53d8\u5f62\u3002</p> <p>\u8bbef[i] (bool\u7c7b\u578b)\u4e3a\u80fd\u5426\u5c06i\u7684\u7a7a\u95f4\u88c5\u6ee1\u3002\u5219\u8f6c\u79fb\u65b9\u7a0b: <pre><code>    f[0]=1;\n    for(int i=1;i&lt;=n;++i){\n        for(int j=v;j&gt;=a[i];--j){\n            if(f[j-a[i]])f[j]=1;    \n        }\n    }\n</code></pre></p> <p>P1064</p> <p>\u4e00\u9053\u597d\u9898</p> <p>\u56e0\u4e3a\u6bcf\u4e2a\u7269\u54c1\u7684\u72b6\u6001\u603b\u5171\u5c313\u79cd\uff0c\u5373\u81ea\u5df1\uff0c\u5de6\u513f\u5b50\u548c\u53f3\u513f\u5b50\uff0c\u6240\u4ee5\u5c31\u8bbe\u6240\u6709\u7269\u54c1\u90fd\u6709\u513f\u5b50\u3002</p> <p>\u8bbef[i]\u8868\u793a\u4ef7\u683c\u4e3ai\u65f6\u4ef7\u683c\u4e0e\u6743\u91cd\u7684\u4e58\u79ef\u6700\u5927\u503c\u3002\u5219\u8f6c\u79fb\u65b9\u7a0b\uff1a <pre><code>f[0]=0;\n    ans=0;\n    for(int i=1;i&lt;=m;++i){\n        if(!v[i][0])continue;\n        for(int j=n;j&gt;=v[i][0];--j){\n            if(v[i][1] &amp;&amp; v[i][2] &amp;&amp; j&gt;=v[i][0]+v[i][1]+v[i][2])f[j]=max(f[j],f[j-v[i][0]-v[i][1]-v[i][2]]+v[i][0]*w[i][0]+v[i][1]*w[i][1]+v[i][2]*w[i][2]);\n            if(v[i][1] &amp;&amp; j&gt;=v[i][0]+v[i][1])f[j]=max(f[j],f[j-v[i][0]-v[i][1]]+v[i][0]*w[i][0]+v[i][1]*w[i][1]);\n            if(v[i][2] &amp;&amp; j&gt;=v[i][0]+v[i][2])f[j]=max(f[j],f[j-v[i][0]-v[i][2]]+v[i][0]*w[i][0]+v[i][2]*w[i][2]);\n            if(j&gt;=v[i][0])f[j]=max(f[j],f[j-v[i][0]]+v[i][0]*w[i][0]);\n            ans=max(f[j],ans);\n        }\n    }\n</code></pre> \u6ce8\u610f\u9644\u4ef6\u4e0d\u80fd\u5c06\u4ed6\u7684\u4e3b\u4ef6\u680f\u586b\u8fdb\u53bb(v[i][0],w[i][0])\u3002 <pre><code>//\u8bfb\u5165\nfor(int i=1;i&lt;=m;++i){\n        scanf(\"%d%d%d\",&amp;v1,&amp;w1,&amp;p1);\n        if(p1==0)v[i][0]=v1,w[i][0]=w1;\n        else{\n            if(v[p1][1])v[p1][2]=v1,w[p1][2]=w1;\n            else v[p1][1]=v1,w[p1][1]=w1;\n        }\n    }\n</code></pre></p> <p>P1651</p> <p>\u8bbef[i][j]\u8868\u793a\u524di\u4e2a\u7269\u54c1\u642d\u51fa\u7684\u9ad8\u5ea6\u76f8\u5deej\u7684\u4e24\u4e2a\u5854\u4e2d\u6700\u9ad8\u7684\u5854\u7684\u9ad8\u5ea6\u3002</p> <p>\u8fd9\u6837\u65e2\u80fd\u5c06\u72b6\u6001\u8868\u793a\u5168\uff0c\u53c8\u80fd\u907f\u514d\u7528\u4e24\u7ef4\u7684\u9ad8\u5ea6\u5bfc\u81f4MLE\u3002\u4e8b\u5b9e\u4e0ai\u90a3\u4e00\u7ef4\u53ef\u4ee5\u6eda\u5b58\u4f18\u5316\u6389\u3002</p> <p>\u6ce8\u610f\u56e0\u4e3a\u8f6c\u79fb\u4e2d\u4f1a\u51fa\u73b0\u8d1f\u6570\uff0c\u6240\u4ee5\u8981\u5c06\u7b2c\u4e8c\u7ef4\u5f00\u4e24\u500d\uff0c\u5c06\u4e2d\u95f4\u70b9500000\u8bbe\u4e3a\u96f6\u70b9\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=1e6+10,M=53,P=1e6;\nint f[2][N];\nint n;\nint a[M];\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n    int ans=-0x7fffffff;\n    memset(f,-0x3f,sizeof f);\n    f[0][500000]=0;\n    for(int i=1;i&lt;=n;++i){\n        for(int j=0;j&lt;=P;++j){\n            f[i%2][j]=max(f[i%2][j],f[(i%2)^1][j]);\n            if(j-a[i]&gt;=0)f[i%2][j]=max(f[i%2][j],f[(i%2)^1][j-a[i]]+a[i]);\n            if(j+a[i]&lt;=P)f[i%2][j]=max(f[i%2][j],f[(i%2)^1][j+a[i]]);\n            if(j==500000)ans=max(ans,f[i%2][j]);\n        }\n    }\n    if(ans&gt;0)printf(\"%d\",ans);\n    else printf(\"-1\");\n    return 0;\n}\n/*\n20\n188242 313 1991 4207 2483 1763 224 16 582 22943 111653 23787 16820 12415 1270 3032 2293 5221 396 42\n*/\n</code></pre> <p>P4823</p> <p>\u9996\u5148\u6709\u4e2a\u8d2a\u5fc3\u7684\u6027\u8d28\uff1a</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5c0f\u77ee\u4eba\uff0c\u4e00\u5b9a\u662f\u9003\u751f\u80fd\u529b\u5f31\uff0c\u5373\\(a+b\\)\u8f83\u5c0f\u7684\u4eba\u5148\u9003\u6bd4\u80fd\u529b\u5f3a\u7684\u4eba\u5148\u9003\u7684\u4e0d\u4f1a\u66f4\u5dee\u3002</p> <p>\u56e0\u4e3a\u80fd\u529b\u5f31\u7684\u4eba\u5982\u679c\u4e0d\u5148\u9003\uff0c\u4ee5\u540e\u5c31\u53ef\u80fd\u9003\u4e0d\u51fa\u53bb\u4e86\u3002</p> <p>\u4e0d\u4f1a\u51fa\u73b0\u80fd\u529b\u5f3a\u7684\u5148\u9003\u540e\u5f31\u7684\u80fd\u9003\uff0c\u800c\u5f31\u7684\u5148\u9003\u5f3a\u7684\u5c31\u9003\u4e0d\u4e86\u7684\u60c5\u51b5\u3002</p> <p>\u53ea\u8981\u5f31\u7684\u9003\u4e86\u5f3a\u7684\u9003\u4e0d\u4e86\uff0c\u90a3\u5f3a\u7684\u9003\u4e86\u5f31\u7684\u4e5f\u8dd1\u4e0d\u4e86\u3002\u56e0\u4e3a\u540e\u4e00\u4e2a\u9003\u7684\u811a\u5e95\u4e0b\u9ad8\u5ea6\u662f\u4e00\u5b9a\u7684\u3002</p> <p>\u6709\u4e86\u8fd9\u4e2a\u6027\u8d28\u540e\u5c31\u53ef\u4ee5\u7528\u80cc\u5305\u89e3\u51b3\u6bcf\u4e2a\u77ee\u4eba\u662f\u5426\u8981\u9003\u51fa\u53bb\u3002\u56e0\u4e3a\u53ef\u80fd\u5b83\\(a\\)\u7279\u522b\u5927\uff0c\u4e0d\u9003\u5bf9\u4eba\u68af\u7684\u8d21\u732e\u66f4\u5927\u3002</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=2200;\nstruct node{\n    int a,b;\n}q[N];\nbool cmp(node a,node b){\n    return a.a+a.b&lt;b.a+b.b;\n}\nint n,h;\nint dp[N];\nint main(){\n    memset(dp,-0x3f,sizeof dp);\n    dp[0]=0;\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d%d\",&amp;q[i].a,&amp;q[i].b),dp[0]+=q[i].a;\n    scanf(\"%d\",&amp;h);\n    sort(q+1,q+n+1,cmp);\n    for(int i=1;i&lt;=n;++i){\n        for(int j=i;j&gt;=1;--j){\n            if(dp[j-1]+q[i].b&gt;=h)dp[j]=max(dp[j],dp[j-1]-q[i].a);\n        }\n    }\n    for(int i=n;i&gt;=0;--i){\n        if(dp[i]&gt;=0){\n            printf(\"%d\",i);\n            return 0;   \n        }\n    }\n\n    return 0;\n}\n</code></pre> * \u7ed3\u8bba\uff1a\u5f53\u80cc\u5305\u7684\u8f6c\u79fb\u6536\u5230\u987a\u5e8f\u5f71\u54cd\uff0c\u53c8\u4e0d\u80fd\u786e\u5b9a\u7269\u54c1\u62ff\u53d6\u7684\u5177\u4f53\u987a\u5e8f\uff0c\u53ef\u4ee5\u5bfb\u627e\u8d2a\u5fc3\u7684\u6027\u8d28,\u6392\u5e8f\u540e\u505a\u80cc\u5305\u3002</p> <p>P3961</p> <p>\u53ef\u4ee5\u7528\u659c\u7387\u5b58\u50a8\u6240\u6709\u70b9\u7684\u4fe1\u606f\uff0c\u6ce8\u610f\u5904\u7406\\(x=0\\)\u5373\u659c\u7387\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\u3002</p> <p>\u4e4b\u540e\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u7ec4\u91d1\u5b50\uff0c\u53ef\u4ee5\u5c06\u7b2c\\(i\\)\u4e2a\u7684\u65f6\u95f4\u4ef7\u503c\u548c\u524d\\(i-1\\)\u4e2a\u5e76\u518d\u4e00\u8d77\uff0c\u8868\u793a\u8fde\u7eed\u53d6\\(i\\)\u4e2a\u91d1\u5b50\u3002</p> <p>\u5728\u505a\u80cc\u5305\u65f6\uff0c\u540c\u4e00\u7ec4\u53ea\u80fd\u9009\u4e00\u4e2a\uff0c\u6240\u4ee5\u6ce8\u610f\u987a\u5e8f\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=320,M=5e4+10,K=200;\nint f[M],top[N+N][N],nxt[N],head[N+N][N],l[N],r[N];\nint n,T,cnt,tot;\nstruct query{\n    int x,y,t,v;\n    double k;\n}q[N];\nstruct item{\n    int t,v;\n}c[N]; \nbool cmp(query a,query b){\n    if(a.k==b.k)return a.y&lt;b.y;\n    else return a.k&lt;b.k;\n} \nvoid print1(){\n    for(int i=1;i&lt;=tot;++i){\n        for(int k=l[i];k&lt;=r[i];++k){\n            cout&lt;&lt;c[k].t&lt;&lt;\" \"&lt;&lt;c[k].v&lt;&lt;endl;        \n        }\n    }\n}\n\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;T);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%lld%lld%lld%lld\",&amp;q[i].x,&amp;q[i].y,&amp;q[i].t,&amp;q[i].v);\n        if(q[i].x!=0)q[i].k=q[i].y*1.0/(q[i].x*1.0);\n        else q[i].k=N;\n    }\n    sort(q+1,q+n+1,cmp);\n    tot=0;\n    for(int i=1;i&lt;=n;++i){\n        int x=q[i].x,y=q[i].y;\n        if(q[i].k!=q[i-1].k || i==1){\n            r[tot]=i-1;\n            ++tot;\n            l[tot]=i;\n        }\n        c[i].t+=q[i].t;\n        c[i].v+=q[i].v;\n        if(q[i].k==q[i-1].k &amp;&amp; i!=1){\n            c[i].t+=c[i-1].t;\n            c[i].v+=c[i-1].v;\n        }\n    }\n    r[tot]=n;\n    //print1();\n    //memset(f,-0x3f,sizeof f);\n    f[0]=0;\n    for(int i=1;i&lt;=tot;++i){\n        for(int j=T;j&gt;=c[l[i]].t;--j){\n            for(int k=l[i];k&lt;=r[i];++k){\n                if(j&gt;=c[k].t)f[j]=max(f[j],f[j-c[k].t]+c[k].v);\n            }\n        }\n    }\n    int maxn=0;\n    for(int i=0;i&lt;=T;++i){\n        maxn=max(maxn,f[i]);\n    }\n    printf(\"%lld\",maxn);\n    return 0;\n}\n/*\n4 17\n0 10 2 3\n-2 3 1 1\n-4 6 2 2\n-6 8 15 9\n\n3 10\n1 1 13 1\n2 2 2 2\n1 3 4 7\n*/\n</code></pre> <p>P1156</p> <p>\u8fd9\u9898\u552f\u4e00\u7684\u5751\u70b9\u5c31\u662f\u540c\u4e00\u65f6\u95f4\u4f1a\u653e\u591a\u4e2a\u5783\u573e\u3002</p> <p>\u8fd9\u65f6\u8981\u7528\u94fe\u8868/vector\u5b58\u50a8\u4e00\u4e0b\uff0c\u5e76\u4e14\u540c\u4e00\u65f6\u523b\u7684\u5783\u573e\u662f\u6709\u5148\u540e\u987a\u5e8f\u7684\uff0c\u5373\u9ad8\u5ea6\u53ef\u4ee5\u7d2f\u52a0\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=4400,T=1000,K=220;\nint f[N][K];\nint D,G,tot;\nint cnt[N],tim[N];\nstruct node {\n    int h,f;\n} c[N][K];\nint main() {\n    //freopen(\"P1156_2.in\",\"r\",stdin);\n    scanf(\"%d%d\",&amp;D,&amp;G);\n    int sum=10;\n    for(int i=1,tmp; i&lt;=G; ++i) {\n        scanf(\"%d\",&amp;tmp);\n        ++cnt[tmp];\n        scanf(\"%d%d\",&amp;c[tmp][cnt[tmp]].f,&amp;c[tmp][cnt[tmp]].h);\n        sum+=c[tmp][cnt[tmp]].f;\n    }\n    memset(f,-1,sizeof f);\n    f[0][0]=10;\n    for(int i=1; i&lt;=sum; ++i) {\n        for(int j=0; j&lt;=cnt[i]; ++j) {\n            tim[++tot]=i;\n            for(int h=D; h&gt;=0; --h) {\n                int t1=tim[tot]-tim[tot-1];\n                if(c[i][j].h) {\n                    if(h&gt;=c[i][j].h &amp;&amp; f[tot-1][h-c[i][j].h]-t1&gt;=0)f[tot][h]=max(f[tot][h],f[tot-1][h-c[i][j].h]-t1);\n                    if(f[tot-1][h]-t1&gt;=0)f[tot][h]=max(f[tot][h],f[tot-1][h]-t1+c[i][j].f);\n                }\n                if(f[tot-1][h]-t1&gt;=0)f[tot][h]=max(f[tot][h],f[tot-1][h]-t1);\n            }\n        }\n\n    }\n    int maxn=-1;\n    for(int i=0; i&lt;=tot; ++i) {\n        for(int h=0; h&lt;=D; ++h) {\n            //cout&lt;&lt;f[i][h]&lt;&lt;\" \";\n            if(f[i][h]&gt;=0)maxn=max(maxn,tim[i]);\n        }\n        //cout&lt;&lt;endl;\n        if(f[i][D]&gt;=0) {\n            printf(\"%d\\n\",tim[i]);\n            return 0;\n        }\n    }\n    printf(\"%d\\n\",maxn);\n    /*for(int i=0;i&lt;=tot;++i){\n        cout&lt;&lt;tim[i]&lt;&lt;\" \";\n    }*/\n    return 0;\n}\n/*\n100 4\n5 4 9\n9 3 2\n12 6 10\n13 1 1\n*/\n</code></pre> <p>P5662</p> <p>\u4e00\u4e2a\u5f88\u91cd\u8981\u7684\u60f3\u6cd5\uff1a\u6bcf\u5929\u5356\u7684\u4e1c\u897f\u5f53\u5929\u8fd8\u80fd\u4e70\u56de\u6765\u3002\u8fd9\u8ba9\u6211\u4eec\u80fd\u591f\u7b80\u5316\u72b6\u6001\u3002</p> <p>\u6b64\u65f6\u5982\u679c\u6211\u4eec\u5411\u6301\u6709\u67d0\u7269\u54c1\\(n\\)\u5929\uff0c\u6211\u4eec\u5c31\u7b2c\\(1\\)\u5929\u4e70\uff0c\u7b2c\\(2\\)\u5929\u5356\uff0c\u518d\u7b2c\\(2\\)\u5929\u4e70\uff0c\u7b2c\\(3\\)\u5929\u5356\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u4e0d\u9700\u8981\u8bb0\u5f55\u6bcf\u5929\u7269\u54c1\u7684\u4e2a\u6570\uff0c\u53ea\u9700\u8981\u8bb0\u5f55\u8f6c\u5929\u7684\u94b1\u6570\u5373\u53ef\u3002</p> <p>\u8bbe\\(f[k]\\)\u8868\u793a\u7b2c\\(i\\)\u5929\uff0c\u7b2c\\(j\\)\u4e2a\u7269\u54c1\u65f6\u8fd8\u5269\\(k\\)\u5143\uff0c\u660e\u5929\u80fd\u83b7\u5f97\u7684\u6700\u5927\u7684\u94b1\u6570\u3002</p> <p>\u90a3\u4e48\u6709:</p> \\[ f[k-c[i][j]]=max(f[k-c[i][j]],f[k]+c[i+1][j]-c[i][j]) \\] <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=110,M=10010,T=110;\nint n,m,t,ans;\nint c[T][N];\nint f[M];\nsigned main(){\n    scanf(\"%lld%lld%lld\",&amp;t,&amp;n,&amp;m);\n    for(int i=1;i&lt;=t;++i){\n        for(int j=1;j&lt;=n;++j){\n            scanf(\"%lld\",&amp;c[i][j]);\n        }\n    } \n    f[m]=0;\n    ans=m;\n    for(int i=1;i&lt;=t;++i){\n        memset(f,-1,sizeof f);\n        f[ans]=ans;\n        for(int j=1;j&lt;=n;++j){\n            for(int k=ans;k&gt;=c[i][j];--k){\n                if(f[k]==-1)continue;\n                f[k-c[i][j]]=max(f[k-c[i][j]],f[k]+c[i+1][j]-c[i][j]);\n            }\n        }\n        for(int i=0;i&lt;=ans;++i)ans=max(ans,f[i]);\n    }\n    printf(\"%lld\",ans);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/","title":"\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14","text":""},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_2","title":"\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570","text":""},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_3","title":"\u5b9a\u4e49","text":"<p>1) \u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\\(\\mu(n)\\)\u7684\u5b9a\u4e49\u57df\u662f\\(N\\) 2) \\(\\mu(1)=1\\) 3) \u5f53\\(n\\)\u5b58\u5728\u5e73\u65b9\u56e0\u5b50\u65f6,\\(\\mu(n)=0\\) 4) \u5f53\\(n\\)\u662f\u7d20\u6570\u6216\u5947\u6570\u4e2a\u4e0d\u540c\u7d20\u6570\u4e4b\u79ef\u65f6,\\(\\mu(n)=-1\\) 5) \u5f53\\(n\\)\u662f\u5076\u6570\u4e2a\u4e0d\u540c\u7d20\u6570\u4e4b\u79ef\u65f6,\\(\\mu(n)=1\\)</p>"},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#mun","title":"\u7ebf\u6027\u7b5b\u6c42\\(\\mu(n)\\)","text":"<pre><code>void prime(){\n    mu[1]=1;\n    for(int i=2;i&lt;=n;++i){\n        if(!vis[i]) p[++m]=i,mu[i]=-1;//\u53ea\u6709\u4e00\u4e2a\u7d20\u56e0\u5b50\uff0c\u5219mu[n]=-1\n        for(int j=1;j&lt;=m &amp;&amp; p[j]*i&lt;=n;++j){\n            vis[p[j]*i]=1;\n            if(i%p[j]==0)break;//\u5982\u679cp[j]|i,\u8bf4\u660e\u4e00\u5b9a\u5b58\u5728\u5e73\u65b9\u56e0\u5b50\uff0c\u5219\u8df3\u8fc7\u4e0d\u66f4\u65b0mu[p[j]*i]\uff0c\u8fd9\u5c06\u610f\u5473\u7740mu[p[j]*i]\u6c38\u8fdc\u4e3a0\n            mu[p[j]*i]=-mu[i];//\u5982\u679cmu[i]=0,\u5219mu[p[j]*i]\u540c\u6837\u4e3a0\uff1b\u5982\u679cmu[i]!=0,\u5219mu[p[j]*i]\u52a0\u5165\u4e00\u4e2a\u65b0\u7684\u7d20\u56e0\u5b50p[j]\uff0c\u5e94\u5f53\u4e58-1\n        }\n    }   \n}\n</code></pre>"},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_4","title":"\u6027\u8d28","text":"<p>1) \u5bf9\u4e8e\u4efb\u610f\u6b63\u6574\u6570\\(n\\),\\(\\sum_{d|n}\\mu(d)=[n=1]\\)</p> <p>2) \u5bf9\u4e8e\u4efb\u610f\u6b63\u6574\u6570\\(n\\),\\(\\sum_{d|n}\\frac{\\mu(d)}{d}=\\frac{\\phi(n)}{n}\\)</p>"},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_5","title":"\u8bc1\u660e","text":""},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#1","title":"\u6027\u8d281.","text":"<ol> <li> <p>\u5f53\\(n=1\\)\u65f6\uff0c\u539f\u5f0f\\(=\\mu(1)=1\\),\u6210\u7acb</p> </li> <li> <p>\u5f53\\(n\\not =1\\)\u65f6\uff0c\u5c06\\(n\\)\u5206\u89e3\u6210\\(p_1^{a_1}p_2^{a_2}...p_k^{a_k}\\)</p> </li> </ol> <p>\u53ea\u6709\u6240\u6709\u8d28\u56e0\u5b50\u7684\u4e2a\u6570\u4e3a\\(1\\)\u65f6\\(\\mu(d)\\)\u4e0d\u4e3a\\(0\\),\u6240\u4ee5\u5047\u8bbe\u7531\\(x\\)\u4e2a\u4e0d\u540c\u8d28\u56e0\u5b50\u7684\\(d\\)\u6709\\(C_{k}^{x}\\)\u4e2a\uff0c\u5219</p> \\[\\sum_{d|n}\\mu(d)=C_k^0-C_k^1+C_k^2-...=\\sum_{i=0}^k(-1)^iC_k^i\\\\ \u53c8\\because \u4e8c\u9879\u5f0f\u5c55\u5f00\u516c\u5f0f\u4e3a(X+Y)^n=\\sum_{i=0}^nC_n^iX^iY^{n-i}\\\\ \\therefore \u5e26\u5165X=-1,Y=1\\\\ \\sum_{i=0}^k(-1)^iC_k^i=[1+(-1)]^k=0 \\]"},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#2","title":"\u6027\u8d282","text":"<p>$$ \u5373\u8bc1n\\sum_{d|n}\\frac{\\mu(d)}d=\\phi(n)\\ \u4ee4F(n)=n,f(n)=\\phi(n),\u5219\\ f(n)=n\\sum_{d|n}\\frac{\\mu(d)}d=\\sum_{d|n}\\frac{n\\mu(d)}d=\\sum_{d|n}\\mu(d)\\frac{n}d=\\sum_{d|n}\\mu(d)F(\\frac nd)\\</p> <p>\u540c\u65f6\uff0c\u4e0a\u5f0f\u6210\u7acb\u7684\u6761\u4ef6\u662fF(n)=\\sum_{d|n}f(d),\u5373\\ n=\\sum_{d|n}\\phi(d)\\ \u8fd9\u4e2a\u5f0f\u5b50\u5728\u6b27\u62c9\u51fd\u6570\u7684\u7b14\u8bb0\u4e2d\u4ee5\u8bc1\u660e\u3002\\</p> <p>\u6545\u539f\u547d\u9898\u5f97\u8bc1\u3002 $$</p>"},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_6","title":"\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14","text":""},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_7","title":"\u5b9a\u7406","text":"<p>$$\u8bbef(n)\u548cF(n)\u662f\u5b9a\u4e49\u5728\u6b63\u6574\u6570\u96c6\u5408\u4e0a\u7684\u4e24\u4e2a\u51fd\u6570\\</p> <p>F(n)=\\sum_{d|n}f(d)=\\sum_{d|n}f(\\frac nd)\\</p> <p>\u5219f(n)=\\sum_{d|n}\\mu(d)F(\\frac nd)=\\sum_{d|n}\\mu(\\frac nd)F(d)\\</p> <p>\u6216\uff1a\\</p> <p>F(n)=\\sum_{n|d}f(d)\\</p> <p>\u5219f(n)=\\sum_{n|d}\\mu(\\frac dn)F(d)\\ $$</p>"},{"location":"my%20past/OI/%E8%8E%AB%E6%AF%94%E4%B9%8C%E6%96%AF%E5%8F%8D%E6%BC%94/#_8","title":"\u5957\u8def","text":"<p>\u5957\u8def1:\u4f18\u5148\u679a\u4e3e\\(\\gcd k\\)</p> <p>\u5957\u8def2:\\(\\gcd(i,j)=k\u7b49\u4ef7\u4e8e \\gcd(\\frac ik,\\frac jk)=1\\)</p> <p>\u5957\u8def3:\u83ab\u6bd4\u4e4c\u65af\u51fd\u6570\u7684\u6027\u8d28\\(\\sum_{d|n}\\mu(d)=[n=1]\\)</p> <p>\u5957\u8def4:\u4f18\u5148\u679a\u4e3e\\(d\\)</p> <p>\u5957\u8def5:\u8bbe\\(dk=T\\)</p> <p>P2257</p> <p>\u5e9f\u8bdd\u4e0d\u8bf4\uff0c\u76f4\u63a5\u5f00\u59cb\u63a8\u5bfc\u3002</p> <p>$$ \u6c42\\sum_{i=1}^n\\sum_{j=1}^m [gcd(i,j)\\in prime]\\</p> <p>=\\sum_{k=1}^n\\sum_{i=1}^n\\sum_{j=1}^m [gcd(i,j)=k] (k\\in prime)\\  = \\sum_{k=1}^n\\sum_{i=1}^{\\lfloor \\frac nk \\rfloor}\\sum_{j=1}^{\\lfloor \\frac mk\\rfloor } [gcd(i,j)=1] (k\\in prime)\\  \\because \\sum_{d|n}\\mu(d)=[n=1]  \\  \\therefore \\sum_{d|\\gcd(i,j)}\\mu(d)=[\\gcd(i,j)=1]\\  \\therefore =\\sum_{k=1}^n\\sum_{i=1}^{\\lfloor \\frac nk \\rfloor}\\sum_{j=1}^{\\lfloor \\frac mk\\rfloor } \\sum_{d|\\gcd(i,j)}\\mu(d)(k\\in prime)</p> <p>\\  \\because d|\\gcd(i,j),\\therefore i,j\u662fd\u7684\u500d\u6570\\  \u53c8\\because d_{max}=\\lfloor \\frac nk\\rfloor\\  \\therefore = \\sum_{k=1}^n\\sum_{d=1}^{\\lfloor \\frac nk\\rfloor}\\mu(d) \\lfloor \\frac n{kd}\\rfloor \\lfloor \\frac m{kd}\\rfloor (k\\in prime)\uff08\u6ce8_1\uff09  \\ \u8bbeT=kd,\u5219T_{max}=k\\lfloor \\frac nk\\rfloor=n\\ \\therefore \u539f\u5f0f=\\sum_{T=1}^n\\lfloor \\frac nT\\rfloor \\lfloor \\frac mT\\rfloor \\sum_{k|T,k\\in prime}\\mu(\\frac Tk)(\u6ce8_2) $$ \u8fd9\u6837\u540e\u9762\u53ef\u4ee5\u5728\u7ebf\u6027\u7b5b\u65f6\u505a\\(O(n)\\)\u9884\u5904\u7406+\u524d\u7f00\u548c\uff0c\u524d\u9762\u53ef\u4ee5\u505a\\(O(T\\sqrt n)\\)\u6574\u9664\u5206\u5757.</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=1e5+10,M=1e7+10;\ntypedef long long ll;\nint p[M],mu[M],vis[M],sum[M],f[M];\nint m,n,T;\nvoid prime(){\n    mu[1]=1;\n    for(int i=2;i&lt;M;++i){\n        if(!vis[i]) p[++m]=i,mu[i]=-1;\n        for(int j=1;j&lt;=m &amp;&amp; p[j]*i&lt;M;++j){\n            vis[p[j]*i]=1;\n            if(i%p[j]==0){mu[p[j]*i]=0;break;}\n            mu[p[j]*i]=-mu[i];\n        }\n    }   \n    for(int j=1;j&lt;=m;++j){\n        for(int i=1;i*p[j]&lt;M;++i){\n            f[i*p[j]]+=mu[i];\n        }\n    } \n    for(int i=1;i&lt;M;++i)sum[i]=sum[i-1]+f[i];   \n}\nvoid solve(){\n    ll ans=0;\n    for(int l=1,r=0;l&lt;=n;l=r+1){\n        r=min(n/(n/l),m/(m/l));\n        ans+=(ll)(sum[r]-sum[l-1])*(ll)(n/l)*(ll)(m/l);\n    }\n    printf(\"%lld\\n\",ans);\n}\nint main(){\n    prime();\n    scanf(\"%d\",&amp;T);\n    while(T--){\n        scanf(\"%d%d\",&amp;n,&amp;m);if(n&gt;m)swap(n,m);\n        solve();\n    }\n    return 0;\n} \n</code></pre> <ul> <li> <p>\u6ce8_1: \u8fd9\u91cc\u7684\u53d8\u6362\u65f6\u56e0\u4e3a\u6bcf\u4e00\u4e2a\\(d\\)\u90fd\u7531\u8bb8\u591a\u4e2a\\(i\uff0cj\\)\u679a\u4e3e\u800c\u6765\uff0c\u6240\u4ee5\u679a\u4e3e\\(d\\)\u65f6\u76f4\u63a5\u4e58\u4e0a\u80fd\u8f6c\u79fb\u8fc7\u6765\u7684\\(i,j\\)\u7684\u6700\u5927\u4e2a\u6570\u5373\u53ef\uff0c\u800c\\(d\\)\u6700\u5927\u80fd\u53d6\u5230\\(n\\) (\\(\\gcd(n,m)=n\\)\u65f6)</p> </li> <li> <p>\u6ce8_2: \u8fd9\u91cc\u7684\u53d8\u6362\u76f8\u5f53\u4e8e\\(1\\)\u7684\u9006\u64cd\u4f5c,\\(1\\)\u65f6\u7531\u5927\u53d8\u5c0f\uff0c\u800c\\(2\\)\u65f6\u7531\u5c0f\u53d8\u5927\u3002\u4e00\u4e2a\\(T\\)\u80fd\u8f6c\u79fb\u5230\u7684\u6240\u6709\\(d\\)\u4e3a\\(d=\\frac Tk (k|T,k\\in prime)\\),\u6240\u4ee5\u5bf9\u8fd9\u4e9b\\(d\\)\u6709\u8d21\u732e\\(\\mu(\\frac Tk)\\)\uff0c\u8981\u52a0\u5728\u4e00\u8d77\u3002</p> </li> </ul> <p>~~\u5168long long\u8ba1\u7b97\u771f\u7684\u6162\uff0c\u6bd4int\u8f6clong long \u6162\u4e00\u500d~~</p> <p>P3455</p> <p>\u6a21\u677f\u9898.</p> <p>\u8fd9\u91cc\u7ed9\u51fa\u4e00\u4e2a\u4e0eP2577\u4e0d\u540c\u7684\u63a8\u5f0f\u5b50\u7684\u65b9\u6cd5\uff0c\u5927\u540c\u5c0f\u5f02</p> <p>$$f(k)=\\sum_{i=1}^a\\sum_{j=1}^b[gcd(i,j)=k]\\ F(n)=\\sum_{n|k}f(k)=\\lfloor\\frac an\\rfloor\\lfloor \\frac bn\\rfloor\\ f(n)=\\sum_{n|k}\\mu(\\lfloor \\frac kn\\rfloor)F(k) $$ \u4e4b\u540e\u9000\u51fa\u6765\u7684\u5f0f\u5b50\u4e0e\u7528\\(\\sum_{d|n}\\mu(d)=[n=1]\\)\u63a8\u51fa\u6765\u7684\u4e00\u6837\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define ll long long \nusing namespace std;\nconst int N=1e5+10,M=1e6+10;\nint a,b,d,n,m,T;\nint p[M],mu[M],vis[M],sum[M];\nvoid prime(){\n    mu[1]=1;\n    for(int i=2;i&lt;M;++i){\n        if(!vis[i]) p[++m]=i,mu[i]=-1;\n        for(int j=1;j&lt;=m &amp;&amp; i*p[j]&lt;M;++j){\n            vis[i*p[j]]=1;\n            if(i%p[j]==0) break;\n            mu[i*p[j]]=-mu[i];\n        }\n    }\n    for(int i=1;i&lt;M;++i)sum[i]=sum[i-1]+mu[i];\n}\nvoid solve(){\n    ll ans=0;\n    n=a/d,m=b/d;\n    if(n&gt;m)swap(n,m);\n    for(int l=1,r=0;l&lt;=n;l=r+1){\n        r=min(n/(n/l),m/(m/l));\n        ans+=(ll)(sum[r]-sum[l-1])*(ll)(n/l)*(ll)(m/l);\n    }\n    printf(\"%lld\\n\",ans);\n}\nint main(){\n    prime();\n    scanf(\"%d\",&amp;T);\n    for(int i=1;i&lt;=T;++i){\n        scanf(\"%d%d%d\",&amp;a,&amp;b,&amp;d);\n        solve();    \n    }\n    return 0;\n}\n</code></pre> <p>P3327</p> <p>$$ \u5df2\u77e5d(i* j)=\\sum_{x|i}\\sum_{y|j}[\\gcd(x,y)=1] \uff08\u6ce8_1\uff09\\</p> <p>\u5219\u539f\u5f0f= \\sum_{i=1}^n\\sum_{j=1}^m\\sum_{x|i}\\sum_{y|j}[\\gcd(x,y)=1]\\</p> <p>= \\sum_{i=1}^n\\sum_{j=1}^m\\sum_{x|i}\\sum_{y|j}\\sum_{d|\\gcd(x,y)}\\mu(d)\\</p> <p>\u5c06\u679a\u4e3e\u9879i,j\u6539\u4e3a\u679a\u4e3ex,y</p> <p>\\ =\\sum_{x=1}^n \\sum_{y=1}^m \\lfloor\\frac nx\\rfloor\\lfloor\\frac my\\rfloor \\sum_{d|\\gcd(x,y)}\\mu(d)\\ \u7ee7\u7eed\u679a\u4e3ed \\ =\\sum_{x=1}^n \\sum_{y=1}^m \\lfloor\\frac nx\\rfloor\\lfloor\\frac my\\rfloor \\sum_{d=1}^n\\mu(d)[d|\\gcd(x,y)]\\</p> <p>\u56e0\u4e3a\\mu(d)\u4e0ex,y\u65e0\u5173\uff0c\u53ef\u4ee5\u63d0\u5230\u524d\u9762\u53bb\\</p> <p>=\\sum_{d=1}^n\\mu(d)\\sum_{x=1}^n\\sum_{y=1}^m \\lfloor\\frac nx\\rfloor\\lfloor\\frac my\\rfloor [d|\\gcd(x,y)]\\ \u5c06\u679a\u4e3e\u9879x,y \u6539\u4e3adx,dy,\u5219[d|\\gcd(x,y)]\u6052\u6ee1\u8db3\uff0c\u53ef\u4ee5\u53bb\u6389\\ = \\sum_{d=1}^n\\mu(d)\\sum_{x=1}^{\\lfloor\\frac nd\\rfloor}\\sum_{y=1}^{\\lfloor\\frac md\\rfloor} \\lfloor\\frac n{dx}\\rfloor\\lfloor\\frac m{dy}\\rfloor\\</p> <p>= \\sum_{d=1}^n\\mu(d)\\sum_{x=1}^{\\lfloor\\frac nd\\rfloor}\\lfloor\\frac n{dx}\\rfloor\\sum_{y=1}^{\\lfloor\\frac md\\rfloor} \\lfloor\\frac m{dy}\\rfloor $$</p> <p>\u6b64\u65f6\u540e\u9762\u4e24\u9879\u53ef\u4ee5\\(O(n\\sqrt n)\\)\u6574\u9664\u5206\u5757\u9884\u5904\u7406\u51fa\\(f\\)\u6570\u7ec4\uff0c\u524d\u9762\u4e5f\u53ef\u4ee5\u7528\u6574\u9664\u5206\u5757\\(O(T\\sqrt n)\\)\u505a\u3002</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define ll long long\nusing namespace std;\nconst int N=7e4+10;\nint p[N],vis[N],mu[N],sum[N];\nint T,n,m,cnt;\nll f[N];\nvoid prime() {\n    mu[1]=1;\n    cnt=0;\n    for(int i=2; i&lt;N; ++i) {\n        if(!vis[i])p[++cnt]=i,mu[i]=-1;\n        for(int j=1; j&lt;=cnt &amp;&amp; i*p[j]&lt;N; ++j) {\n            vis[i*p[j]]=1;\n            if(i%p[j]==0)break;\n            mu[i*p[j]]=-mu[i];\n        }\n    }\n    for(int i=1; i&lt;N; ++i) {\n        ll ans=0;\n        for(int l=1,r=0; l&lt;=i; l=r+1) {\n            r=(i/(i/l));\n            ans+=(ll)(r-l+1)*(ll)(i/l);\n        }\n        f[i]=ans;\n    }\n    for(int i=1; i&lt;N; ++i)sum[i]=sum[i-1]+mu[i];\n}\nvoid solve() {\n    ll ans=0;\n    for(int l=1,r=0; l&lt;=n; l=r+1) {\n        r=min(n/(n/l),m/(m/l));\n        ans+=(ll)(sum[r]-sum[l-1])*(ll)(f[m/l])*(ll)(f[n/l]);\n    }\n    printf(\"%lld\\n\",ans);\n}\nint main() {\n    prime();\n    scanf(\"%d\",&amp;T);\n    for(int i=1; i&lt;=T; ++i) {\n        scanf(\"%d%d\",&amp;n,&amp;m);if(n&gt;m) swap(n,m);\n        solve();\n    }\n    return 0;\n}\n</code></pre> * \u6ce8_1:\u53ef\u4ee5\u5f53\u6210\u7ed3\u8bba\u7528\uff0c\u5177\u4f53\u8bc1\u660e\u53ef\u4ee5\u770b\u83ab\u6bd4\u4e4c\u65af\u53cd\u6f14-\u8ba9\u6211\u4eec\u4ece\u57fa\u7840\u5f00\u59cb-</p> <p>P1829</p> \\[ \u6c42\\sum_{i=1}^n\\sum_{j=1}^m \\frac{i* j}{\\gcd(i,j)}\\\\ = \\sum_{d=1}^n\\sum_{i=1}^n\\sum_{j=1}^m \\frac{i* j}{d}[\\gcd(i,j)=d]\\\\ = \\sum_{d=1}^n\\sum_{i=1}^{\\lfloor\\frac nd\\rfloor}\\sum_{j=1}^{\\lfloor\\frac md\\rfloor} i* j* d[\\gcd(i,j)=1]\uff08\u6ce8_1\uff09\\\\ = \\sum_{d=1}^n\\sum_{i=1}^{\\lfloor\\frac nd\\rfloor}\\sum_{j=1}^{\\lfloor\\frac md\\rfloor} i* j* d\\sum_{k|\\gcd(i,j)}\\mu(k)\\\\ =  \\sum_{d=1}^nd\\sum_{k=1}^{\\lfloor\\frac nd\\rfloor}\\mu(k)* k^2\\sum_{i=1}^{\\lfloor\\frac n{dk}\\rfloor}i\\sum_{j=1}^{\\lfloor\\frac n{dk}\\rfloor}j(\u6ce8_2) \\] <p>\u6b64\u65f6\u53ef\u4ee5\u4e24\u6b21\u5206\u5757\u6765\u505a\uff0c\u4e00\u6b21\u5728\\(\\lfloor\\frac n{dk}\\rfloor\\)\u65f6\uff0c\u4e00\u6b21\u5728\\(\\lfloor\\frac nd\\rfloor\\)\u65f6\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(\\sqrt n * \\sqrt n)=O(n)\\)</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long\nusing namespace std;\nconst int N=1e7+10,P=20101009,inv=10050505;\nint n,m,cnt;\nint vis[N],mu[N],p[N],sum[N];\nvoid prime() {\n    mu[1]=1;cnt=0;\n    for(int i=2; i&lt;N; ++i) {\n        if(!vis[i])p[++cnt]=i,mu[i]=-1;\n        for(int j=1; j&lt;=cnt &amp;&amp; i*p[j]&lt;N; ++j) {\n            vis[i*p[j]]=1;\n            if(i%p[j]==0)break;\n            mu[i*p[j]]=-mu[i];\n        }\n    }\n    for(int i=1; i&lt;N; ++i)sum[i]=(sum[i-1]+i*i%P*mu[i])%P;\n}\nint _solve(int _n,int _m) {\n    int tmp=0;\n    for(int _l=1,_r=0; _l&lt;=_n; _l=_r+1) { //k\n        _r=min(_n/(_n/_l),_m/(_m/_l));\n        tmp=(tmp+ (sum[_r]-sum[_l-1])%P* (1+(_n/_l))%P*inv%P*(_n/_l)%P* (1+(_m/_l))%P*inv%P*(_m/_l)%P)%P;\n    }\n    return tmp;\n}\nint _solve1(int _n,int _m) {\n    int tmp=0;\n    for(int _l=1; _l&lt;=_n; ++_l) { //k\n        tmp=(tmp+mu[_l]*_l%P*_l%P*(1+_n/_l)%P*(_n/_l)%P*inv%P*(1+_m/_l)%P*(_m/_l)%P*inv%P)%P;\n    }\n    return tmp;\n}\nvoid solve1(){\n    int ans=0;\n    for(int l=1; l&lt;=n; ++l) { //d\n        int _n=n/l,_m=m/l;\n        int tmp=_solve(_n,_m);\n        ans=(ans+ l*tmp%P)%P;\n    }\n    ans=(ans%P+P)%P;\n    printf(\"%lld\",ans);\n}\nvoid solve() {\n    int ans=0;\n    for(int l=1,r=0; l&lt;=n; l=r+1) { //d\n        r=min(n/(n/l),m/(m/l));\n        int _n=n/l,_m=m/l;\n        int tmp=_solve(_n,_m);\n        ans=(ans+ ((l+r)*inv%P*(r-l+1))%P*tmp)%P;\n    }\n    ans=(ans%P+P)%P;\n    printf(\"%lld\",ans);\n}\nsigned main() {\n    prime();\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    if(n&gt;m)swap(n,m);\n    solve();\n    return 0;\n}\n</code></pre> <p>~~\u5341\u5e74OI\u4e00\u573a\u7a7a\uff0c\u4e0d\u5f00long long \u89c1\u7956\u5b97\uff1b\u53d6\u6a21\u64cd\u4f5c\u4e5f\u4e0d\u8981\u541d\u556c\u65f6\u95f4\u590d\u6742\u5ea6\uff0c\u5c3d\u53ef\u80fd\u5730\u591a\u819c\u4e00\u819c\uff0c\u9632\u6b62\u6ea2\u51fa\u4ece\u4f60\u6211\u505a\u8d77~~</p> <ul> <li> <p>\u6ce8_1: \u8fd9\u91cc\u4ece\u9664\u4ee5\\(d\\)\u53d8\u6210\u4e58\\(d\\),\u5373\u5728\u539f\u59cb\u57fa\u7840\u4e0a\u4e58\u4e86\\(d^2\\)\uff0c\u662f\u56e0\u4e3a\\(i,j\\)\u5730\u8303\u56f4\u90fd\u7f29\u5c0f\u4e86\\(d\\)\uff0c\u800c\u4e0d\u80fd\u5ffd\u7565\u540e\u9762\u5730\\(i* j\\) </p> </li> <li> <p>\u6ce8_2: \u4e58\\(k^2\\)\u5730\u539f\u56e0\u540c \u6ce8_1</p> </li> </ul> <p>P3911</p> <p>$$ \u8bbec_i\u8868\u793ai\u51fa\u73b0\u7684\u4e2a\u6570\uff0c\u5219\u539f\u9898\u6c42\\</p> <p>\\sum_{i=1}^N\\sum_{j=1}^N\\frac{i j}{\\gcd(i,j)} c_i c_j,N\u8868\u793a\\max_{i=1}^nA_i\\ 1.\\ = \\sum_{d=1}^N\\sum_{i=1}^N\\sum_{j=1}^N\\frac{i j}{d} c_i * c_j [\\gcd(i,j)=d]\\ = \\sum_{d=1}^N \\sum_{i=1}^{\\lfloor \\frac Nd\\rfloor} \\sum_{j=1}^{\\lfloor\\frac Nd \\rfloor}i j d c_{d i} * c_{d j} \\gcd(i,j)=1\\ =\\sum_{d=1}^N \\sum_{i=1}^{\\lfloor \\frac Nd\\rfloor} \\sum_{j=1}^{\\lfloor\\frac Nd \\rfloor}i j d* c_{d i} * c_{d j} \\sum_{k|\\gcd(i,j)}\\mu(k)\\</p> <p>\\</p> <p>=\\sum_{d=1}^Nd\\sum_{k=1}^{\\lfloor\\frac Nd \\rfloor}\\mu(k) k^2(\\sum_{i=1}^{\\lfloor\\frac N {dk}\\rfloor}i c_{kdi})(\\sum_{j=1}^{\\lfloor\\frac N {dk}\\rfloor}j c_{kdj})\\ 2.\\ = \\sum_{d=1}^N\\sum_{i=1}^N\\sum_{j=1}^N\\frac{i j}{d} c_i * c_j [\\gcd(i,j)=d]\\ = \\sum_{d=1}^N \\sum_{i=1}^{\\lfloor \\frac Nd\\rfloor} \\sum_{j=1}^{\\lfloor\\frac Nd \\rfloor}i j d c_{d i} * c_{d j} [\\gcd(i,j)=1]\\ =\\sum_{d=1}^N \\sum_{i=1}^{\\lfloor \\frac Nd\\rfloor} \\sum_{j=1}^{\\lfloor\\frac Nd \\rfloor}i j d c_{d i} * c_{d j} \\sum_{k|\\gcd(i,j)}\\mu(k)\\ =\\sum_{d=1}^N d\\sum_{k=1}^{\\lfloor \\frac Nd\\rfloor}\\mu(k)k^2\\sum_{i=1}^{\\lfloor \\frac N{kd}\\rfloor} \\sum_{j=1}^{\\lfloor\\frac N{kd} \\rfloor}i j * c_{d ki} * c_{d kj}  \\ \u8bbeT=dk,\u5219\\ = \\sum_{T=1}^N T(\\sum_{i=1}^{\\lfloor \\frac NT \\rfloor} i c_{iT})^2 \\sum_{k|T}\\mu(k)k</p> <p>$$</p> <ul> <li>\u6ce8_1: \u56e0\u4e3a\\(i,j\\)\u7684\u5927\u5c0f\u51cf\u5c0f\uff0c\u800c\\(c\\)\u7684\u4e0b\u6807\u4e0d\u80fd\u53d8\uff0c\u6240\u4ee5\u4e00\u5b9a\u8981\u4e58\\(d\\)</li> </ul>"},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/","title":"\u83ab\u961f","text":"<p>~~\u4f17\u6240\u5468\u77e5\uff0c\u83ab\u961f\u7b49\u4e8e\u5206\u5757+\u66b4\u529b~~</p>"},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/#_2","title":"\u7528\u9014","text":"<p>\u79bb\u7ebf\u5904\u7406\u533a\u95f4\u8be2\u95ee\u95ee\u9898\uff0c\u5c24\u5176\u662f\u4e00\u4e9b\"\u4e0d\u6ee1\u8db3\u533a\u95f4\u53ef\u52a0\u6027\u6216\u53ef\u4e58\u6027\"\u7684\u95ee\u9898</p>"},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/#_3","title":"\u539f\u7406","text":"<p>1.\u79bb\u7ebf\u7b97\u6cd5\uff0c\u5c06\u6240\u6709\u533a\u95f4\u8bfb\u4e0b\u6765</p> <p>2.\u7ed9\u6240\u6709\u533a\u95f4\u5206\u5757\uff0c\u5206\u6210\\(\\sqrt{n}\\)\u5757</p> <p>3.\u5c06\u6240\u6709\u533a\u95f4\u7684l\u6309\u7167\u5757\u7684\u987a\u5e8f\u6392\u5e8f</p> <p>4.\u518d\u5c06\u540c\u4e00\u5757\u7684\u6240\u6709\u533a\u95f4\u6309\u7167r\u7684\u987a\u5e8f\u6392\u5e8f</p> <p>5.\u7ef4\u62a4\u5de6\u53f3\u4e24\u4e2a\u6307\u9488\uff0c\u6bcf\u5f97\u5230\u4e00\u4e2a\u533a\u95f4\u7684\u5de6\u53f3\u8fb9\u754c\uff0c\u5c31\u66b4\u529b\u8df3\u8f6c\uff0c\u4fee\u6539\u7b54\u6848\u5373\u53ef</p>"},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/#_4","title":"\u590d\u6742\u5ea6\u5206\u6790","text":"<p>\u603b\uff1a\\(\\Theta(n\\sqrt{n})\\)</p> <p>1.l:\u56e0\u4e3a\u533a\u95f4\u6309\u7167\u5757\u5c06l\u6392\u4e86\u5e8f\uff0c\u6240\u4ee5l\u6bcf\u6b21\u6700\u591a\u79fb\u52a8\\(\\sqrt{n}\\)\u6b21\uff0c\u4e00\u5171n\u4e2a\u8be2\u95ee\uff0c\u603b\u7684\u4e0d\u8d85\u8fc7\\(n \\sqrt{n}\\)\u6b21</p> <p>2.r:\u5bf9\u4e8e\u6bcf\u4e2a\u5757\u4e2d\u7684\u533a\u95f4\uff0cr\u5df2\u7ecf\u6392\u597d\u4e86\u5e8f\uff0c\u6700\u574f\u65f6\u4e00\u4e2a\u5757\u8981\u79fb\u52a8\u5230\u5e8f\u5217\u6700\u53f3\u7aef\uff0c\u5373\u4e00\u5171n\u6b21\uff0c\u4e00\u5171\\(\\sqrt{n}\\)\u4e2a\u5757\uff0c\u6240\u4ee5\u4e0d\u8d85\u8fc7\\(n \\sqrt{n}\\)\u6b21</p> <p>3.\u5757\u4e4b\u95f4\u7684\u8df3\u8f6c\uff1a\u4e00\u5171\\(\\sqrt n\\)\u4e2a\u5757\uff0cl\u6700\u591a\u4ece\u5757\u5c3e\u5230\u5757\u5934\uff0c\\(\\sqrt n\\)\u6b21\uff1br\u6700\u591a\u4ece\u5e8f\u5217\u5c3e\u5230\u5e8f\u5217\u5934\uff0cn\u6b21\uff0c\u6240\u4ee5\u4e0d\u8d85\u8fc7\\(n\\sqrt n\\)\u6b21\u3002</p>"},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/#_5","title":"\u6a21\u677f","text":"<p>P2709 <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=1e5+10;\nint n,m,k,c;\nint vis[N],ans[N],a[N];\nstruct node{\n    int l,r,k,id;\n}q[N];\nbool cmp(node a,node b){\n    if(a.k!=b.k)return a.k&lt;b.k;\n    else return a.r&lt;b.r;\n}\nint read1(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch&gt;'9' ||ch&lt;'0'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid write1(int x){\n    if(x&lt;0)putchar('-'),x=-x;\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n    return;\n}\nsigned main(){\n    //freopen(\"P2709_1.in\",\"r\",stdin);\n    //freopen(\"1.out\",\"w\",stdout);\n    n=read1(),m=read1(),k=read1();\n    for(int i=1;i&lt;=n;++i){\n        a[i]=read1();\n    }\n    int len=sqrt(n);\n    for(int i=1;i&lt;=m;++i){\n        q[i].l=read1(),q[i].r=read1();\n        q[i].k=(q[i].l-1)/len+1;q[i].id=i;\n    }\n    sort(q+1,q+m+1,cmp);\n    int l=1,r=0; \n    memset(vis,0,sizeof vis);\n    for(int i=1;i&lt;=m;++i){\n        int x=q[i].l,y=q[i].r;\n        while(l&gt;x)--l,c+=2*vis[a[l]]+1,vis[a[l]]++;\n        while(r&lt;y)++r,c+=2*vis[a[r]]+1,vis[a[r]]++;\n        while(l&lt;x)c-=2*vis[a[l]]-1,vis[a[l]]--,++l;\n        while(r&gt;y)c-=2*vis[a[r]]-1,vis[a[r]]--,--r;\n        ans[q[i].id]=c;\n    }\n    for(int i=1;i&lt;=m;++i){\n        write1(ans[i]);\n        putchar('\\n');\n    }\n    return 0;\n}\n</code></pre> ~~\u5199\u7684\u65f6\u5019\u6ce8\u610f\uff1a\u5206\u5757\u662f\u6839\u636el\u7684\u503c\u57df(\u6570\u91cf)\u5206\u7684\uff0c\u800c\u4e0d\u662f\u533a\u95f4\u7684\u6570\u91cf\u3002\u4e0d\u7136\u5c31\u9519\u4e86~~</p> <p></p> <p>\u4e00\u822c\u5904\u7406\u4e0d\u8d85\u8fc7\\(1* 10^5\\) \u7684\u6570\u636e</p>"},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/#_6","title":"\u5e26\u4fee\u6539\u83ab\u961f","text":""},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/#_7","title":"\u539f\u7406","text":"<p>\u5c31\u662f\u5c06\u539f\u6765\u7684\u8be2\u95ee(l,r)\u52a0\u4e86\u4e00\u7ef4\u65f6\u95f4\u8f74(l,r,t)\uff0c\u5c06l,r\u90fd\u5206\u5757</p> <p></p> <p>\u5982\u56fe\uff0c\u5c06l\u8f74\u5206\u6210n\u5757\uff0c\u6bcf\u5757\u957f\\(\\frac{N}{n}\\);\u5c06r\u8f74\u5206\u6210k\u5757\uff0c\u6bcf\u5757\u957f\\(\\frac{N}{k}\\)</p>"},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/#_8","title":"\u590d\u6742\u5ea6","text":"<p>1.\u8bfb\u5165\uff1a\\(\\Theta(n+m)\\)</p> <p>2.\u6392\u5e8f\uff1a\\(\\Theta(nlogn)\\)</p> <p>3.l:\u6bcf\u6b21\u6700\u591a\u79fb\u52a8\\(\\frac{N}{n}\\)\uff0c\u4e00\u5171m\u4e2a\u8be2\u95ee\uff0c\u6240\u4ee5\u5171\\(\\Theta(\\frac{N}{n}* m)\\)</p> <p>\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u79fb\u52a8\u5171n\u6b21\uff0c\u4e00\u6b21\\(\\frac{2* N}{n}\\)\uff0c\u5171\\(\\Theta(N)\\)</p> <p>4.r:\u6bcf\u6b21\u6700\u591a\u79fb\u52a8\\(\\frac{N}{k}\\)\uff0c\u4e00\u5171m\u4e2a\u8be2\u95ee\uff0c\u6240\u4ee5\u5171\\(\\Theta(\\frac{N}{k}* m)\\)</p> <p>\u5757\u4e0e\u5757\u4e4b\u95f4\u7684\u79fb\u52a8\u5171k\u6b21\uff0c\u4e00\u6b21\\(\\frac{2* N}{k}\\)\uff0c\u5171\\(\\Theta(N)\\)</p> <p>5.t:\u4e00\u5171n * k\u4e2a\u5757\uff0c\u6bcf\u4e2a\u5757\u6700\u574f\u53bb\u60c5\u51b5\u4e3a\u63a8\u5230\u5e8f\u5217\u6700\u540e\u4e00\u4f4d\uff0c\u6240\u4ee5\u590d\u6742\u5ea6\\(\\Theta(N* n* k)\\)</p> <p>\u5757\u4e0e\u5757\u4e4b\u95f4\u4e00\u5171n* k\u6b21\uff0c\u4e00\u6b21\u6700\u591aN\uff0c\u590d\u6742\u5ea6\\(\\Theta(N* n* k)\\)</p> <p>\u6240\u4ee5\u590d\u6742\u5ea6\u6700\u5c0f\u65f6n=k\uff0c\u4e3a\\(max(\\Theta(N^{2-k}),\\Theta(N^{1+2k}))\\)</p> <p>\u6b64\u65f62-k=1+2k,\u5373k=\\(\\frac13\\)</p> <p>\u6240\u4ee5\u603b\u590d\u6742\u5ea6\u4e3a\\(\\Theta(N^{\\frac53})\\)</p> <p>P1903 \u6a21\u677f</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cmath&gt;\n#include&lt;algorithm&gt;\n#include&lt;cstdio&gt;\n#define int long long \nusing namespace std;\nconst double F=0.666666666667;\nconst int N=2e6+10;\nint a[N],vis[N],res[N];\nint n,m;\nchar ch;\nstruct qe1{int l,r,id,k1,k2,t;}q1[N];\nstruct qe2{int x,y,id;}q2[N];\nbool cmp(qe1 a,qe1 b){\n    if(a.k1!=b.k1)return a.k1&lt;b.k1;\n    else if(a.k2!=b.k2)return a.k2&lt;b.k2;\n    else return a.t&lt;b.t;\n}\nint read1()\nvoid write1(int x) \nsigned main(){\n    n=read1(),m=read1();\n    for(int i=1;i&lt;=n;++i)a[i]=read1();\n    int len=pow(n,F),c1=0,c2=0;\n    for(int i=1;i&lt;=m;++i){\n        cin&gt;&gt;ch;\n        if(ch=='Q')++c1,q1[c1].l=read1(),q1[c1].r=read1(),q1[c1].id=i,q1[c1].k1=(q1[c1].l-1)/len+1,q1[c1].k2=(q1[c1].r-1)/len+1,q1[c1].t=c2;\n        else ++c2,q2[c2].x=read1(),q2[c2].y=read1(),q2[c2].id=i;\n    }\n    sort(q1+1,q1+c1+1,cmp);\n    int l=1,r=0,t=0,ans=0;\n    for(int i=1;i&lt;=c1;++i){\n        int x=q1[i].l,y=q1[i].r,z=q1[i].t;\n        while(t&lt;z){\n            ++t;\n            if(q2[t].x&lt;=r &amp;&amp; q2[t].x&gt;=l)ans-=vis[a[q2[t].x]]==1?1:0,vis[a[q2[t].x]]--,ans+=vis[q2[t].y]==0?1:0,vis[q2[t].y]++;\n            swap(a[q2[t].x],q2[t].y);\n        }\n        while(t&gt;z){\n            if(q2[t].x&lt;=r &amp;&amp; q2[t].x&gt;=l)ans-=vis[a[q2[t].x]]==1?1:0,vis[a[q2[t].x]]--,ans+=vis[q2[t].y]==0?1:0,vis[q2[t].y]++;\n            swap(a[q2[t].x],q2[t].y);\n            t--;\n        }\n        while(l&gt;x)--l,ans+=vis[a[l]]==0?1:0,vis[a[l]]++;\n        while(r&lt;y)++r,ans+=vis[a[r]]==0?1:0,vis[a[r]]++;\n        while(l&lt;x)ans-=vis[a[l]]==1?1:0,vis[a[l]]--,++l;\n        while(r&gt;y)ans-=vis[a[r]]==1?1:0,vis[a[r]]--,--r;\n        res[q1[i].id]=ans;\n    }\n    for(int i=1;i&lt;=m;++i)if(res[i])write1(res[i]),putchar('\\n');\n    return 0;\n} \n</code></pre> <p>P5906</p> <p>\u8fd9\u9053\u9898\u662f\u5f88\u597d\u7684\u5206\u5757\u4e0e\u83ab\u961f\u7684\u7ed3\u5408\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u6570(\u5df2\u79bb\u6563\u5316),\u4ed6\u5728\u533a\u95f4\u4e2d\u7684\u6700\u5927\u503c\u5c31\u662f\u53f3\u7aef\u70b9\u5230\u5de6\u7aef\u70b9\u5927\u7684\u8ddd\u79bb\uff0c\u6240\u4ee5\u8003\u8651\u7528\u83ab\u961f\u7ef4\u62a4\u5de6\u53f3\u7aef\u70b9\u3002\u56e0\u4e3a\u6700\u5de6\u7aef\u70b9\u88ab\u5220\u9664\u540e\u8fd8\u9700\u8981\u77e5\u9053\u6b21\u5de6\u7aef\u70b9\uff0c\u6240\u4ee5\u63d0\u524d\u9884\u5904\u7406\u51fa\u6bcf\u4e2a\u6570\u7684\u524d\u9a71\u540e\u7ee7\uff0c\u5373\u7528\u94fe\u8868\u8fde\u63a5\u4e00\u4e0b\uff0c\u65b9\u4fbf\u8df3\u8f6c\u3002</p> <p>\u800c\u6700\u5927\u503c\u6bd4\u8f83\u96be\u7ef4\u62a4\uff0c\u56e0\u4e3a\u4e00\u5171\u4f1a\u6709\\(m\\sqrt n\\)\u6b21\u4fee\u6539\uff0c\\(m\\)\u6b21\u67e5\u8be2,\u6240\u4ee5\u7ebf\u6bb5\u6811\u7b49\u7ef4\u62a4\u533a\u95f4\u7684\u5de5\u5177\u4f1a\u88ab\u5361\u6210\\(m \\sqrt n \\log n\\),\u800c\u89c2\u5bdf\u5230\u67e5\u8be2\u6b21\u6570\u8f83\u5c0f\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u503c\u57df\u5206\u5757\u6765\u7ef4\u62a4\u6700\u5927\u503c\u3002\u56e0\u4e3a\u5206\u5757\u7684\u4fee\u6539\\(O(1)\\),\u67e5\u8be2\\(O(\\sqrt n)\\)\uff0c\u6240\u4ee5\u53ef\u4ee5\u5747\u644a\u5230\\(m\\sqrt n\\).</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=2e5+10;\nint n,m,len,MAX,num;\nint a[N],b[N],vis[N],K[N],L[N],R[N],pre[N],nxt[N],ans[N],s[N],S[N];\nstruct query{\n    int l,r,k,id;\n}q[N];\nstruct block{\n    int l,r;    \n}k[N];\nbool cmp(query a,query b){\n    if(a.k==b.k)return a.r&lt;b.r;\n    else return a.k&lt;b.k;    \n}\nbool cmp1(int a,int b){\n    return a&lt;b;\n}\nvoid init(){\n    len=sqrt(n);\n    sort(b+1,b+n+1,cmp1);\n    int tot=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i&lt;=n;++i){\n        a[i]=lower_bound(b+1,b+tot+1,a[i])-b;\n    }\n    for(int i=1;i&lt;=n;++i){\n        if(vis[a[i]])pre[i]=vis[a[i]],nxt[vis[a[i]]]=i;\n        vis[a[i]]=i;\n    }\n    for(int i=1;i&lt;=n;++i){\n        K[i]=(i-1)/len+1;\n    }\n    num=K[n];\n    for(int i=1;i&lt;=num;++i){\n        k[i].l=(i-1)*len+1;\n        k[i].r=i*len;\n    }\n}\nvoid change(int x,int k){\n    S[K[x]]+=k;\n    s[x]+=k; \n}\nint query(){\n    for(int i=num;i&gt;=1;--i){\n        if(S[i]&gt;0){\n            for(int j=k[i].r;j&gt;=k[i].l;--j){\n                if(s[j]&gt;0)return j;\n            }\n        }\n    }\n    return 0;\n} \nvoid addl(int i){\n    if(!R[a[i]]){\n        R[a[i]]=L[a[i]]=i;\n        return; \n    }\n    change(R[a[i]]-L[a[i]],-1);\n    L[a[i]]=i;\n    change(R[a[i]]-L[a[i]],1);\n}\nvoid addr(int i){\n    if(!L[a[i]]){\n        R[a[i]]=L[a[i]]=i;\n        return; \n    }\n    change(R[a[i]]-L[a[i]],-1);\n    R[a[i]]=i;\n    change(R[a[i]]-L[a[i]],1);\n}\nvoid dell(int i){\n    if(R[a[i]]==L[a[i]]){\n        R[a[i]]=L[a[i]]=0;\n        return; \n    }\n    change(R[a[i]]-L[a[i]],-1);\n    L[a[i]]=nxt[i];\n    change(R[a[i]]-L[a[i]],1);\n}\nvoid delr(int i){\n    if(R[a[i]]==L[a[i]]){\n        R[a[i]]=L[a[i]]=0;\n        return; \n    }\n    change(R[a[i]]-L[a[i]],-1);\n    R[a[i]]=pre[i];\n    change(R[a[i]]-L[a[i]],1);\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]),b[i]=a[i];\n    init();\n    scanf(\"%lld\",&amp;m);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;q[i].l,&amp;q[i].r);  \n        q[i].k=(q[i].l-1)/len+1;\n        q[i].id=i;\n    }\n    sort(q+1,q+m+1,cmp);\n    int l=1,r=0;\n    memset(L,0,sizeof L);\n    memset(R,0,sizeof R);\n    for(int i=1;i&lt;=m;++i){\n        int x=q[i].l,y=q[i].r;\n        while(l&gt;x)addl(--l);\n        while(r&lt;y)addr(++r);\n        while(l&lt;x)dell(l++);\n        while(r&gt;y)delr(r--);\n        ans[q[i].id]=query();\n    }\n    for(int i=1;i&lt;=m;++i)printf(\"%lld\\n\",ans[i]);\n    return 0;\n} \n</code></pre> <p>\u4ec0\u4e48\uff0c\u4f60\u8bf4\u4e0d\u591f\"\u4f18\u96c5\",\u4e0d\u591f\u5feb? \u6ca1\u4e8b\uff0c\u8fd9\u9898\u8fd8\u662f\u4e2a\u56de\u6eda\u83ab\u961f\u7684\u6a21\u677f\u9898...</p>"},{"location":"my%20past/OI/%E8%8E%AB%E9%98%9F/#_9","title":"\u56de\u6eda\u83ab\u961f","text":"<p>\u5bf9\u4e8e\u6dfb\u52a0\u65b9\u4fbf\u800c\u5220\u9664\u4e0d\u65b9\u4fbf\u7684\u64cd\u4f5c\uff0c\u5982\u7ef4\u62a4\u6700\u5927\u503c\uff0c\u5220\u9664\u540e\u8981\u627e\u5230\u6b21\u5927\u503c\uff0c\u8f83\u4e3a\u9ebb\u70e6\u3002\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u7528\u56de\u6eda\u83ab\u961f\u5c3d\u53ef\u80fd\u7684\u51cf\u5c11\u5220\u9664\u64cd\u4f5c\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5c06\u5de6\u53f3\u6307\u9488\u653e\u5728\u4e00\u4e2a\u5757\u7684\u6700\u53f3\u7aef\u3002</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5982\u679c\u5b83\u5de6\u53f3\u7aef\u70b9\u90fd\u5728\u4e00\u4e2a\u5757\u5185\uff0c\u867d\u7136\u4e0d\u80fd\u907f\u514d\u5220\u9664\uff0c\u4f46\u662f\u66b4\u529b\u65f6\u95f4\u662f\\(\\sqrt n\\),\u53ef\u4ee5\u63a5\u53d7\u3002</p> <p>\u63a5\u4e0b\u6765\uff0c\u6bcf\u9047\u5230\u4e00\u4e2a\u65b0\u7684\u5757\uff0c\u6b64\u65f6\u5757\u5185\u7684\u8be2\u95ee\u6ee1\u8db3\u5de6\u7aef\u70b9\u90fd\u5728\u5757\u5185\uff0c\u53f3\u7aef\u70b9\u90fd\u4e0d\u5728\u5757\u5185\uff0c\u8fd9\u65f6\u6211\u4eec\u53ef\u4ee5\u5c06\u53f3\u7aef\u70b9\u4e0d\u65ad\u5411\u53f3\u79fb\u52a8\uff0c\u66f4\u65b0\u7b54\u6848\uff0c\u5de6\u7aef\u70b9\u4e0d\u65ad\u79fb\u52a8\u8fc7\u53bb\u518d~~\u9000~~\u6eda\u56de\u6765\uff0c\u5c06\u6cbf\u8def\u4ea7\u751f\u7684\u8d21\u732e\u5168\u90e8\u5220\u9664\uff0c\u5e76\u4e14\u53ea\u8ba1\u5165\u53d8\u91cf\\(\\_tmp\\)\u4e2d\uff0c\u4e0d\u8ba1\u5165\u539f\u6709\u7b54\u6848\u3002\u8fd9\u6837\u5c31\u53ef\u4ee5\u5b9e\u73b0\"\u56de\u6eda\"\u7684\u8fc7\u7a0b\uff0c\u5168\u7a0b\u6ca1\u6709\u5220\u9664\u64cd\u4f5c\u3002</p> <p>\u6700\u540e\u53ea\u9700\u8981\u6bd4\u8f83\\(\\_tmp\\)\u4e0e\\(tmp\\)\u7684\u6700\u5927\u503c\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;cmath&gt;\n#define int long long \nusing namespace std;\nconst int N=3e5+10;\nint n,m,len,tot,num;\nint a[N],b[N],L[N],R[N],blk[N],st[N],ed[N],ed1[N],ans[N];\nstruct query{\n    int l,r,k,id;\n}q[N];\nbool Cmp(query a,query b){\n    if(a.k==b.k)return a.r&lt;b.r;\n    else return a.k&lt;b.k;\n}\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nvoid Discrete(){\n    sort(b+1,b+n+1,cmp);\n    tot=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i&lt;=n;++i)a[i]=lower_bound(b+1,b+tot+1,a[i])-b;\n}\n\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]),b[i]=a[i];\n    Discrete();\n    scanf(\"%lld\",&amp;m);\n    len=sqrt(n);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;q[i].l,&amp;q[i].r);\n        q[i].k=(q[i].l-1)/len+1;    \n        q[i].id=i;\n    }\n    sort(q+1,q+m+1,Cmp);\n\n    for(int i=1;i&lt;=n;++i){\n        blk[i]=(i-1)/len+1;\n    }\n    num=blk[n];\n    for(int i=1;i&lt;=num;++i){\n        L[i]=(i-1)*len+1;\n        R[i]=(i==num)?n:i*len;//\u5bb9\u6613\u5199\u9519\n    }\n\n    int block=0,tmp=0,l=1,r=0;\n    for(int i=1;i&lt;=m;++i){\n        int x=q[i].l,y=q[i].r,now=blk[x];\n        if(blk[x]==blk[y]){//\u66b4\u529b\n            tmp=0;\n            for(int j=x;j&lt;=y;++j)st[a[j]]=0;\n            for(int j=x;j&lt;=y;++j){\n                if(!st[a[j]])st[a[j]]=j;\n                tmp=max(tmp,j-st[a[j]]);\n            }\n            for(int j=x;j&lt;=y;++j)st[a[j]]=0;\n            ans[q[i].id]=tmp;\n            continue;\n        }\n        if(now!=block){\n            tmp=0;\n            for(int j=l;j&lt;=r;++j)st[a[j]]=ed[a[j]]=0;\n            l=R[now];\n            r=l-1;//\u6ce8\u610f\uff0c\u83ab\u961f\u5957\u8def\uff0cr=l-1\n            block=now;//\u6362\u5757\u65f6\u5c06\u6240\u6709\u503c\u521d\u59cb\u5316\u4e3a0\uff0c\u5de6\u53f3\u7aef\u70b9\u632a\u5230\u5757\u53f3\u7aef\u70b9\u3002\n        }\n        while(r&lt;y){\n            ++r;\n            if(!st[a[r]])st[a[r]]=r;\n            ed[a[r]]=r;//\u4e0d\u65ad\u66f4\u65b0ed\uff0c\u4fdd\u8bc1\u66f4\u65b0\u5de6\u7aef\u70b9\u65f6\u53ef\u4ee5\u7528\u4e0a\u3002\n            tmp=max(tmp,r-st[a[r]]);\n        }\n        int p=l,tmp1=0;\n        while(p&gt;x){//add\n            --p; \n            if(!ed1[a[p]])ed1[a[p]]=p;\n            tmp1=max(tmp1,max(ed1[a[p]],ed[a[p]])-p);//\u5728ed1\u548ced\u4e2d\u53d6\u6700\u5927\u503c\u3002\n        }\n        while(p&lt;l){//del\n            ed1[a[p]]=0;\n            p++;\n        }\n        ans[q[i].id]=max(tmp,tmp1);\n    }\n    for(int i=1;i&lt;=m;++i){\n        printf(\"%lld\\n\",ans[i]);\n    }\n\n    return 0;\n} \n/*\n8\n1 6 2 2 3 3 1 6\n6\n1 3\n1 4\n2 5\n2 8\n5 6\n1 7\n*/\n</code></pre> <p>AT1219</p> <p>\u89e3\u6cd5\u4e00\uff1a\u56e0\u4e3a\u6bcf\u4e2a\u6570\u51fa\u73b0\u7684\u6b21\u6570\u4f1a\u5f71\u54cd\u503c\u57df\u5206\u5757\uff0c\u6240\u4ee5\u5bf9\u4e8e\u51fa\u73b0\\(t\\)\u6b21\u7684\u6570\\(x\\)\uff0c\u5c06\\(x,2x,3x,...tx\\)\u5168\u90e8\u8bb0\u5f55\u5230\u79bb\u6563\u5316\u6570\u7ec4\u91cc\uff0c\u518d\u5806\u79bb\u6563\u5316\u6570\u7ec4\u503c\u57df\u5206\u5757\u5373\u53ef\u3002</p> <p>\u56e0\u4e3a\\(\\sum t_i=n\\),\u6240\u4ee5\u590d\u6742\u5ea6\u6b63\u786e\uff0c\u4e3a\\(m\\sqrt n\\)</p> <p>\u540c\u65f6\u8fd8\u53ef\u4ee5\u56de\u6eda\u83ab\u961f\u505a\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=1e5+10;\nint n,m,len,num;\nint a[N],b[N],blk[N],L[N],R[N],cnt[N],tot[N],ans[N];\nstruct query{\n    int l,r,k,id;\n}q[N];\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nbool Cmp(query a,query b){\n    if(a.k==b.k)return a.r&lt;b.r;\n    else return a.k&lt;b.k;\n}\nvoid Discrete(){\n    sort(b+1,b+n+1,cmp);\n    int tott=unique(b+1,b+n+1)-b-1;\n    for(int i=1;i&lt;=n;++i)a[i]=lower_bound(b+1,b+tott+1,a[i])-b;\n}\nvoid init(){\n    for(int i=1;i&lt;=n;++i){\n        blk[i]=(i-1)/len+1;\n    }\n    num=blk[n];\n    for(int i=1;i&lt;=num;++i){\n        L[i]=(i-1)*len+1;\n        R[i]=(i==num)?n:i*len;\n    }\n}\nsigned main(){\n    scanf(\"%lld%lld\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a[i]),b[i]=a[i];\n    Discrete();\n    len=sqrt(n);\n    for(int i=1;i&lt;=m;++i){\n        scanf(\"%lld%lld\",&amp;q[i].l,&amp;q[i].r);\n        q[i].k=(q[i].l-1)/len+1;\n        q[i].id=i;\n    }\n    sort(q+1,q+m+1,Cmp);\n    init();\n    int l=1,r=0,tmp=0,block=0;\n    for(int i=1;i&lt;=m;++i){\n        int x=q[i].l,y=q[i].r,now=blk[x];\n        if(blk[x]==blk[y]){\n            tmp=0;\n            for(int j=x;j&lt;=y;++j)cnt[a[j]]=0;\n            for(int j=x;j&lt;=y;++j){\n                cnt[a[j]]++;\n                tmp=max(tmp,cnt[a[j]]*b[a[j]]);\n            }\n            for(int j=x;j&lt;=y;++j)cnt[a[j]]=0;\n            ans[q[i].id]=tmp;\n            continue;\n        }\n        if(block!=now){\n            tmp=0;\n            for(int j=l;j&lt;=r;++j)cnt[a[j]]=0;\n            l=R[now];\n            r=l-1;\n            block=now;\n        }\n        while(r&lt;y){\n            ++r;\n            cnt[a[r]]++;\n            tmp=max(tmp,cnt[a[r]]*b[a[r]]);\n        }\n        int p=l,_tmp=0;\n        while(p&gt;x){\n            --p;\n            tot[a[p]]++;\n            _tmp=max(_tmp,(tot[a[p]]+cnt[a[p]])*b[a[p]]);\n        }\n        while(p&lt;l){\n            tot[a[p]]=0;\n            p++;\n        }\n        ans[q[i].id]=max(tmp,_tmp);\n    }\n    for(int i=1;i&lt;=m;++i){\n        printf(\"%lld\\n\",ans[i]);\n    }\n    return 0;\n}\n</code></pre> <p>P8078</p> <p>~~\u8003\u573a\u4e0a\u53ea\u62ff\u4e8635pts\u5dee\u4e94\u5206\u5c31\u6709\u94dc\u724c\u7684\u849f\u84bb~~</p> <p>\u5bf9\u4e8e\u6240\u6709\u6570\u4ece\u5c0f\u5230\u5927\u7684\u987a\u5e8f\u6392\u5e8f\u540e\uff0c\u53ef\u4ee5\u7528\u94fe\u8868\u628a\u4ed6\u4eec\u8fde\u63a5\u8d77\u6765\uff0c\u94fe\u8868\u8fb9\u4e0a\u8bb0\u5f55\u4e00\u4e0b\u6743\u503c\u3002\u53d1\u73b0\u94fe\u8868\u5220\u9664+\u6062\u590d\u8fdc\u6bd4\u6dfb\u52a0\u7b80\u5355\u5f97\u591a\uff0c\u6240\u4ee5\u53ef\u4ee5\u7528\u4e0d\u6dfb\u52a0\u83ab\u961f\u3002</p> <p>\u4e0e\u4e0d\u5220\u9664\u83ab\u961f\u7c7b\u4f3c\uff0c\u90fd\u662f\u5904\u7406\u5b8c\u5de6\u7aef\u70b9\u56de\u6eda\u3002\u53ea\u662f\u8fd9\u4e2a\u521d\u59cb\u662f\\(l=1,r=n\\),\u4ece\u4e24\u7aef\u5411\u4e2d\u95f4\u66f4\u6539\\(l,r\\).</p> <p>~~\u6700\u540e\u8f93\u7ed9\u4e86\u5de8\u5927\u7684\u5e38\u6570\u62ff\u4e8695pts~~</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;cmath&gt;\n#include&lt;algorithm&gt;\n#define rg register\nusing namespace std;\ntypedef long long ll;\nconst int N=5e5+10,INF=0x3f3f3f3f;\ninline int read1(){\n    int x=0;char ch=getchar();\n    while(ch&lt;'0' || ch&gt;'9') ch=getchar();\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0') x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\ninline void write1(ll x){\n    if(x&gt;9) write1(x/10);\n    putchar(x%10+'0');\n}\nstruct node{\n    int l,r,k,id;\n}q[N];\n\nstruct link{\n    int v,p;\n}pre[N],nxt[N];\nint n,m,K,L;\nll tmp,_tmp;\nint a[N],blk[N],lb[N],rb[N],s[N];\nll ans[N];\nbool cmp(node a,node b){\n    if(a.k==b.k) return a.r&gt;b.r;\n    return a.k&lt;b.k;\n}\nvoid init(){\n    _tmp=0;\n    for(rg int i=2;i&lt;=n;++i){\n        int x=s[i]-s[i-1];\n        _tmp+=(ll)abs(x);\n        nxt[i-1].v=i,nxt[i-1].p=x;  \n        pre[i].v=i-1,pre[i].p=-x;   \n    }\n    pre[1].v=pre[1].p=-INF;\n    nxt[n].v=nxt[n].p=-INF;\n\n}\ninline void del(int i){\n    int _x=pre[a[i]].v,_y=nxt[a[i]].v,l1=pre[a[i]].p,l2=nxt[a[i]].p,l3=-l1+l2;\n\n    if(_x==-INF &amp;&amp; _y!=-INF){//pre\n        pre[_y].v=pre[_y].p=-INF;\n        _tmp-=(ll)abs(l2);\n    }\n    if(_x!=-INF &amp;&amp; _y==-INF){//nxt\n        nxt[_x].v=nxt[_x].p=-INF;\n        _tmp-=(ll)abs(l1);  \n    }\n    if(_x!=-INF &amp;&amp; _y!=-INF){//pre nxt\n        nxt[_x].v=_y;nxt[_x].p=l3;\n        pre[_y].v=_x;pre[_y].p=-l3;\n        _tmp=_tmp-(ll)(abs(l1)+abs(l2)-abs(l3));\n    } \n\n}\ninline void cov(int i){\n    int _x=pre[a[i]].v,_y=nxt[a[i]].v,l1=pre[a[i]].p,l2=nxt[a[i]].p,l3=-l1+l2;\n    if(_x==-INF &amp;&amp; _y!=-INF){//pre\n        pre[_y].v=a[i],pre[_y].p=-l2;\n        _tmp+=(ll)abs(l2);\n    }\n    if(_x!=-INF &amp;&amp; _y==-INF){//nxt\n        nxt[_x].v=a[i];nxt[_x].p=-l1;\n        _tmp+=(ll)abs(l1);  \n    }\n    if(_x!=-INF &amp;&amp; _y!=-INF){//pre nxt\n        nxt[_x].v=a[i];nxt[_x].p=-l1;\n        pre[_y].v=a[i];pre[_y].p=-l2;\n        _tmp=_tmp+(ll)(abs(l1)+abs(l2)-abs(l3));\n    } \n}\nint main(){\n    n=read1(),m=read1();L=sqrt(n);\n    for(rg int i=1;i&lt;=n;++i) a[i]=read1(),s[a[i]]=i,blk[i]=(i-1)/L+1;\n    for(rg int i=1;i&lt;=m;++i) q[i].l=read1(),q[i].r=read1(),q[i].k=(q[i].l-1)/L+1,q[i].id=i;\n    K=blk[n];\n    for(rg int i=1;i&lt;=K;++i) lb[i]=(i-1)*L+1,rb[i]=min(i*L,n); \n    sort(q+1,q+m+1,cmp);\n    int l=1,r=n,now=0;\n    init();\n    for(rg int i=1;i&lt;=m;++i){\n        int x=q[i].l,y=q[i].r;\n        if(blk[x]!=now){\n            now=blk[x];\n            while(r&lt;n) cov(++r);\n            while(l&lt;lb[now]) del(l++);\n        }\n        while(r&gt;y) del(r--);\n        int p=l;\n        while(p&lt;x) del(p++);\n        ans[q[i].id]=_tmp;\n        while(p&gt;l) cov(--p);\n    }\n    for(rg int i=1;i&lt;=m;++i) write1(ans[i]),putchar('\\n');\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/%E8%99%9A%E6%A0%91/","title":"\u865a\u6811","text":"<p>\u6a21\u677f <pre><code>void insert(int u) {\n    int lca=getlca(u,stk[top]);\n    while(top&gt;1 &amp;&amp; id[stk[top-1]]&gt;=id[lca]) add(stk[top],stk[top-1],1),add(stk[top-1],stk[top],1),--top;//dep[stk[top-1]]&gt;=dep[lca]\u4e5f\u884c\n    if(lca!=stk[top]) add(stk[top],lca,1),add(lca,stk[top],1),stk[top]=lca;\n    stk[++top]=u;\n}\nvoid build() {\n    cnt[1]=-1;\n    sort(a+1,a+m+1,cmp);\n    stk[top=1]=a[1];\n    for(int i=2; i&lt;=m; ++i) insert(a[i]);\n    while(top&gt;1) add(stk[top],stk[top-1],1),add(stk[top-1],stk[top],1),--top;\n    rt=stk[1];\n}\n</code></pre> P6572</p> <p>\u6811\u4e0a\u5dee\u5206+\u865a\u6811</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u8be2\u95ee\uff0c\u5efa\u51fa\u865a\u6811\u540e\uff0c\u9996\u5148\u8981\u627e\u51fa\u6df1\u5ea6\u6700\u5927\u7684\u516c\u5171\u6839\uff0c\u9632\u6b62\u5c06\u4e0d\u7528\u7684\u7b54\u6848\u8bb0\u57281\uff08\u6574\u68f5\u6811\u7684\u6839\uff09\u4e0a\uff0c\u5bfc\u81f4\u51fa\u9519</p> <p>hack \u6570\u636e\u4fbf\u662f\u7b2c\u4e00\u4e2a\u6837\u4f8b</p> <pre><code>6 3 2\n1 3\n2 3\n3 4\n6 4\n4 5\n4 1 3 2 5\n2 6 3\n2 3 2\n</code></pre> <p>\u65b9\u6cd5\uff1a <pre><code>void getroot(int u,int p){\n    if(vis[u])siz[u]=1;\n    else siz[u]=0;\n    for(int i=head[u];~i;i=e[i].nxt){\n        int v=e[i].v;\n        if(i&gt;cnt)continue;\n        if(v==p)continue;\n        getroot(v,u);\n        siz[u]+=siz[v];\n    }\n    if(root==1 &amp;&amp; siz[u]&gt;=s)root=u;//\u8fd9\u4e00\u6b65\u7684\u89e3\u91ca\uff1a\u5982\u679c\u4e00\u4e2a\u70b9\u6db5\u76d6\u6240\u6709\u5173\u952e\u70b9\u4e14\u4e0d\u662f\u6839\uff0c\u5219\u5b83\u4e00\u5b9a\u662f\u6700\u5c0f\u7684\u6839\uff08\u56e0\u4e3a\u66f4\u65b0\u7b54\u6848\u662f\u5728\u56de\u6eaf\u65f6\uff0c\u6240\u4ee5\u6309\u7167\u4ece\u4e0b\u5f80\u4e0a\u7684\u987a\u5e8f\uff09\n    return;\n}\n</code></pre> \u4e4b\u540e\u6bcf\u6b21\u6df1\u641c\u5230\u4e00\u4e2a\u70b9\uff0c\u5c31\u5411\u5dee\u5206\u6570\u7ec4\u8bb0\u5f55\u4e00\u4e0b\uff0c\u5b50\u8282\u70b9\u4e0e\u5f53\u524d\u70b9\u4e4b\u95f4\u6240\u6709\u7684\u8fb9+1\uff0c\u505a\u5b8c\u4e00\u7ec4\u8be2\u95ee\u6e05\u96f6\uff0c\u6700\u540e\u5dee\u5206\u6570\u7ec4\u52a0\u8d77\u6765\u5c31\u662f\u7b54\u6848</p> <p>P3233</p> <p>~~\u5173\u4e8e\u865a\u6811\u6a21\u677f\u5199\u5047\u4e86\u8c03\u4e86\u4e00\u4e0a\u5348\u8fd9\u4ef6\u4e8b~~</p> <p>\u8fd9\u9053\u9898\u53ca\u5176~~\u6076\u5fc3~~\u590d\u6742,\u9700\u8981\\(6\\)\u6b21\\(dfs\\)\u3002</p> <ol> <li>\u9884\u5904\u7406\\(lca,dep,size\\)</li> </ol> <p>\u500d\u589e\u5904\u7406\\(fa\\)\uff0c\u56e0\u4e3a\u540e\u9762\u9664\u4e86\u6c42\\(lca\\)\u8fd8\u4f1a\u7528\u5230\u3002</p> <ol> <li>\u6c42\u51fa\u865a\u6811\u4e2d\u6bcf\u4e2a\u865a\u6811\u8282\u70b9\u5b50\u6811\u4e2d\u8ddd\u79bb\u6b64\u8282\u70b9\u6700\u8fd1\u7684\"\u5173\u952e\u8282\u70b9\"</li> </ol> <p>\u6240\u6709\u5173\u952e\u8282\u70b9\u90fd\u5728\u865a\u6811\u4e0a\uff0c\u6240\u4ee5\u7b2c\u4e00\u904d\u4ece\u4e0b\u800c\u4e0a\\(dfs\\)\uff0c\u53ef\u4ee5\u6c42\u51fa\u6bcf\u4e2a\u8282\u70b9\u5728\u5b83\u5b50\u6811\u4e2d\u8ddd\u79bb\u5b83\u6700\u8fd1\u7684\u5173\u952e\u8282\u70b9(\u53ef\u4ee5\u662f\u81ea\u5df1)\u3002</p> <ol> <li>\u6c42\u51fa\u865a\u6811\u4e2d\u8ddd\u79bb\u6bcf\u4e2a\u865a\u6811\u8282\u70b9\u6700\u8fd1\u7684\"\u5173\u952e\u8282\u70b9\"</li> </ol> <p>\u7b2c\u4e8c\u904d\u4ece\u4e0a\u800c\u4e0b\u6c42\u51fa\u5b50\u6811\u5916\u8d21\u732e\u3002</p> <p>\u6ce8\u610f\uff0c\u6211\u4eec\u7ef4\u62a4\u7684\u662f\u4e00\u4e2a\u4e8c\u5143\u7ec4\\(g[u]\\)\uff0c\u7b2c\u4e00\u5173\u952e\u5b57\u4e3a\u8ddd\u79bb\uff0c\u7b2c\u4e8c\u5173\u952e\u5b57\u4e3a\u7f16\u53f7\u3002</p> <ol> <li>\u6c42\u51fa\u865a\u6811\u4e0a\u6bcf\u4e2a\u8282\u70b9\u8ddd\u79bb\u6700\u8fd1\u7684\u70b9\u7f16\u53f7\uff0c\u4ee5\u53ca\u8282\u70b9\u4e0a\u7684\u8d21\u732e\u3002</li> </ol> <p>\u6700\u8fd1\u8282\u70b9\u5c31\u662f\\(num[u]=g[u].second\\),\u800c\u8282\u70b9\u4e0a\u7684\u8d21\u732e\u662f\u6307\uff1a\u5bf9\u4e8e\u865a\u6811\u8282\u70b9\\(u\\)\uff0c\u5176\u6240\u6709\u6ca1\u6709\u5173\u952e\u70b9\u7684\u5b50\u6811\uff0c\u90fd\u5c06\u5f52\\(num[u]\\)\u7ba1\u7406\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u904d\u5386\u865a\u6811\u65f6\uff0c\u53ef\u4ee5\u7528\\(u\\)\u6240\u5728\u7684\u5b50\u6811\u603b\u7ed3\u70b9\u6570\u51cf\u53bb\u6709\u5173\u952e\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u3002</p> <p>\u6709\u5173\u952e\u70b9\u7684\u5b50\u6811\u5927\u5c0f\u9700\u8981\u5728\u539f\u6811\u4e0a\u500d\u589e\u6c42\u51fa\u5bf9\u4e8e\\(v\\)\u6240\u5728\u5b50\u6811\u7684\u6839\\(up[v]\\)\uff0c\u8fd9\u65f6\\(up[v]\\)\u5728\\(u\\)\u4e0b\u9762\uff0c\u51cf\u6389\\(sz[up[v]]\\)\u5373\u53ef\u3002</p> <ol> <li>\u6c42\u51fa\u865a\u6811\u4e0a\u6bcf\u6761\u8fb9\u7684\u8d21\u732e </li> </ol> <p>\u5bf9\u4e8e\u6bcf\u6761\u8fb9\u4e24\u7aef\u70b9\\(u,v\\)\uff0c\u6709\u4e24\u79cd\u60c5\u51b5\uff1a</p> <p>\u4e00\u662f\\(num[u]=num[v]\\),\u8fd9\u79cd\u60c5\u51b5\u8fd9\u6761\u8fb9\u4e0a\u6240\u6709\u8282\u70b9\u90fd\u5f52\\(num[u]\\)\u7ba1\u5373\u53ef\u3002</p> <p>\u4e8c\u662f\\(num[u]\\not =num[v]\\),\u8fd9\u79cd\u60c5\u51b5\u5148\u6c42\u51fa\u4e2d\u95f4\u70b9\u7684\u6df1\u5ea6\uff0c\u518d\u4ece\\(v\\)\u500d\u589e\u627e\u51fa\u4e2d\u95f4\u70b9\u6807\u53f7\u5373\u53ef\u3002</p> <p>\u5177\u4f53\u5730\uff0c\u4ece\\(num[u]\\)\u5230\\(num[v]\\)\u7684\u94fe\u957f\u5ea6\\(L\\)=\\(dep[num[v]]-dep[u]+g[u].first\\).</p> <p>\u90a3\u4e48\u4e2d\u95f4\u70b9\u7684\u6df1\u5ea6=\\(\\frac{dep[num[v]]-L} 2\\).</p> <ol> <li>\u6e05\u7a7a\u865a\u6811\u53ca\u70b9\u6807\u8bb0</li> </ol> <p>\u9700\u8981\u6e05\u7a7a\\(vis[i],ans[i],up[i],num[i]\\).</p> <p>\u81f3\u6b64\uff0c\u8fd9\u9053\u9898\u624d\u7b97\u505a\u5b8c\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#include&lt;utility&gt;\nusing namespace std;\ntypedef pair&lt;int,int&gt; PI;\nconst int N=3e5+10,K=20,INF=0x3f3f3f3f;\nint fa[N][K],dep[N],head[2][N],vis[N],a[N],b[N],sz[N],stk[N],ans[N],id[N],num[N],up[N];\nint n,q,u,v,cnt[2],tmp,m,top,tot,rt;\nPI g[N];\nstruct edge {\n    int v,nxt;\n} e[2][N&lt;&lt;1];\nvoid add(int u,int v,int i) {\n    e[i][++cnt[i]].v=v,e[i][cnt[i]].nxt=head[i][u],head[i][u]=cnt[i];\n}\nbool cmp(int a,int b) {\n    return id[a]&lt;id[b];\n}\nint read1(){\n    int x=0;char ch=getchar();\n    while(ch&lt;'0' || ch&gt;'9') ch=getchar();\n    while(ch&gt;='0' &amp;&amp; ch&lt;='9') x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0',ch=getchar();\n    return x;\n}\nvoid write1(int x){\n    if(x&gt;9) write1(x/10);\n    putchar(x%10+'0');  \n}\nvoid dfs0(int u,int p) {\n    id[u]=++tot;fa[u][0]=p;sz[u]=1;\n    for(int i=1; i&lt;K; ++i) fa[u][i]=fa[fa[u][i-1]][i-1];\n    for(int i=head[0][u]; ~i; i=e[0][i].nxt) {\n        int v=e[0][i].v;\n        if(v==p) continue;\n        dep[v]=dep[u]+1;\n        dfs0(v,u);\n        sz[u]+=sz[v];\n    }\n}\nvoid dfs1(int u,int p) {\n    if(vis[u]) g[u]=make_pair(0,u);\n    else g[u]=make_pair(INF,0);\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        dfs1(v,u);\n        g[u]=min(g[u],make_pair(g[v].first+dep[v]-dep[u],g[v].second));\n    }\n}\nvoid dfs2(int u,int p,int d,int x) {\n    PI tmp=make_pair(d,x);\n    if(tmp&lt;g[u]) g[u]=tmp;\n    else d=g[u].first,x=g[u].second;\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        dfs2(v,u,d+dep[v]-dep[u],x);\n    }\n}\nvoid dfs3(int u,int p) {\n    num[u]=g[u].second;\n    ans[num[u]]+=sz[u];\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        int k=v;\n        for(int j=K-1;j&gt;=0;--j) if(fa[k][j] &amp;&amp; dep[fa[k][j]]&gt;dep[u]) k=fa[k][j];\n        ans[num[u]]-=sz[up[v]=k];\n        dfs3(v,u);\n    }\n}\nvoid dfs4(int u,int p){\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        if(num[v]==num[u]) ans[num[u]]+=(sz[up[v]]-sz[v]);\n        else{\n            int dis=dep[num[v]]+dep[u]-g[u].first;\n            dis=dis&amp;1?dis+1&gt;&gt;1:(num[v]&lt;num[u]?dis&gt;&gt;1:(dis&gt;&gt;1)+1);\n            int k=v;\n            for(int j=K-1;j&gt;=0;--j) if(fa[k][j] &amp;&amp; dep[fa[k][j]]&gt;=dis) k=fa[k][j];\n            ans[num[u]]+=sz[up[v]]-sz[k];\n            ans[num[v]]+=sz[k]-sz[v];\n        }\n        dfs4(v,u);\n    }\n}\nvoid dfs5(int u,int p){//clear\n    up[u]=num[u]=0;\n    for(int i=head[1][u]; ~i; i=e[1][i].nxt) {\n        int v=e[1][i].v;\n        if(v==p) continue;\n        dfs5(v,u);\n    }\n    head[1][u]=-1;\n}\nint getlca(int u,int v) {\n    if(dep[u]&lt;dep[v]) swap(u,v);\n    int k=dep[u]-dep[v];\n    for(int i=K-1; i&gt;=0; --i) if(k&amp;(1&lt;&lt;i)) u=fa[u][i];\n    if(v==u) return u;\n    for(int i=K-1; i&gt;=0; --i) if(fa[u][i]!=fa[v][i]) u=fa[u][i],v=fa[v][i];\n    return fa[u][0];\n}\nvoid insert(int u) {\n    int lca=getlca(u,stk[top]);\n    while(top&gt;1 &amp;&amp; id[stk[top-1]]&gt;=id[lca]) add(stk[top],stk[top-1],1),add(stk[top-1],stk[top],1),--top;\n    if(lca!=stk[top]) add(stk[top],lca,1),add(lca,stk[top],1),stk[top]=lca;\n    stk[++top]=u;\n}\nvoid build() {\n    cnt[1]=-1;\n    sort(a+1,a+m+1,cmp);\n    stk[top=1]=a[1];\n    for(int i=2; i&lt;=m; ++i) insert(a[i]);\n    while(top&gt;1) add(stk[top],stk[top-1],1),add(stk[top-1],stk[top],1),--top;\n    rt=stk[1];\n}\nint main() {\n    memset(head,-1,sizeof head);\n    cnt[0]=-1;\n    scanf(\"%d\",&amp;n);\n    for(int i=1; i&lt;n; ++i) scanf(\"%d%d\",&amp;u,&amp;v),add(u,v,0),add(v,u,0);\n    dfs0(1,0);\n    scanf(\"%d\",&amp;q);\n    for(int i=1; i&lt;=q; ++i) {\n        scanf(\"%d\",&amp;m);\n        for(int j=1; j&lt;=m; ++j) scanf(\"%d\",&amp;a[j]),b[j]=a[j],vis[b[j]]=1;\n        build();\n        dfs1(rt,0);\n        dfs2(rt,0,g[rt].first,g[rt].second);\n        dfs3(rt,0);\n        dfs4(rt,0);\n        ans[num[rt]]+=sz[1]-sz[rt];\n        for(int j=1; j&lt;=m; ++j) printf(\"%d \",ans[b[j]]),ans[b[j]]=vis[b[j]]=0;printf(\"\\n\");\n        dfs5(rt,0);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E8%AE%B0%E5%BF%86%E5%8C%96%E6%90%9C%E7%B4%A2/","title":"\u8bb0\u5fc6\u5316\u641c\u7d22","text":"<p>UVA437</p> <p>\u4e5f\u662f\u4e00\u9053\u5f88\u597d\u7684\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u9898\u3002</p> <p>~~\u521a\u770b\u5230\u8fd9\u9898\u65f6\u6211\u662f\u61f5\u903c\u7684~~</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u5757\uff0c\u90fd\u80fd\u591f\u4ea7\u751f\u4e09\u79cd\u72b6\u6001\uff0c\u5e76\u4e14\u56e0\u4e3a\u9898\u76ee\u8bf4\u8981\u4e25\u683c\u5c0f\u4e8e\uff0c\u6240\u4ee5\u8fd9\u4e09\u79cd\u72b6\u6001\u6700\u591a\u53ea\u80fd\u653e\u4e00\u4e2a\uff0c\u56e0\u6b64\u6240\u6709\u5757\u7684\u6240\u6709\u72b6\u6001\u52a0\u4e00\u5757\u5c31\u53ea\u6709\\(3n\\)\u79cd\u3002</p> <p>\u8fd9\u5927\u5927\u7b80\u5316\u4e86\u9898\u76ee\u7684\u96be\u5ea6\u3002</p> <p>\u7531\u9898\u76ee\u6211\u4eec\u77e5\u9053\uff0c\u4e0d\u4f1a\u51fa\u73b0\u4e24\u4e2a\u67f1\u5b50\u67b6\u6865\u7684\u60c5\u51b5\uff0c\u6bcf\u4e2a\u5757\u4e0a\u53ea\u80fd\u653e\u4e00\u4e2a\u5757\u3002</p> <p>\u4e0b\u9762\u5f00\u59cb\u505a\u9898\u3002</p> <p>1) \u53e3\u80e1\u7bc7</p> <p>\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u8bbe\\(f[x][y]\\)\u8868\u793a\u4e0b\u9762\u6709\u957f\u8fb9\u4e3a\\(x\\)\uff0c\u77ed\u8fb9\u4e3a\\(y\\)\u7684\u65b9\u5757\u65f6\uff0c\u80fd\u653e\u7684\u6700\u5927\u9ad8\u5ea6\u3002</p> <p>\\(x,y\\)\u53ef\u80fd\u5f88\u5927? \u6ca1\u5173\u7cfb\uff0c\u56e0\u4e3a\u53ea\u6709\\(3n\\)\u4e2a\u6240\u4ee5\u76f4\u63a5\u79bb\u6563\u5316\u3002</p> <p>\u653e\u65b9\u5757\u7684\u987a\u5e8f\u5c31\u662f\u6309\u7167\\(x\\)\u548c\\(y\\)\u4e3a\u7b2c\u4e00\u3001\u7b2c\u4e8c\u5173\u952e\u5b57\u6392\u5e8f\uff0c\u8fd9\u6837\u526a\u679d\u7a0d\u5fae\u63d0\u5347\u901f\u5ea6\u3002 <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=310;\nint f[N][N],g[N];\nint cnt,n;\nstruct node {\n    int x,y,h;\n} q[N];\nbool Cmp(node a,node b){\n    if(a.x==b.x)return a.y&gt;b.y;\n    else return a.x&gt;b.x;\n}\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nvoid init() {//Discrete \n    memset(f,0,sizeof f);\n    int a,b,c;\n    for(int i=1; i&lt;=n; ++i) {\n        scanf(\"%lld%lld%lld\",&amp;a,&amp;b,&amp;c);\n        g[3*i-2]=a,g[3*i-1]=b,g[3*i]=c;\n        if(a&gt;b)swap(a,b);\n        if(a&gt;c)swap(a,c);\n        if(b&gt;c)swap(b,c);\n        q[3*i-2].x=c,q[3*i-2].y=b,q[3*i-2].h=a;\n        q[3*i-1].x=c,q[3*i-1].y=a,q[3*i-1].h=b;\n        q[3*i].x=b,q[3*i].y=a,q[3*i].h=c;\n    }\n\n    sort(g+1,g+3*n+1,cmp);\n    int tot=unique(g+1,g+3*n+1)-g-1;\n\n    for(int i=1;i&lt;=3*n;++i){\n        q[i].x=lower_bound(g+1,g+tot+1,q[i].x)-g;\n        q[i].y=lower_bound(g+1,g+tot+1,q[i].y)-g;\n    }\n    sort(q+1,q+3*n+1,Cmp);\n}\nint dp(int x,int y,int p){\n    if(x&lt;y || x&lt;=0 || y&lt;=0)return 0;\n    if(f[x][y])return f[x][y];\n    for(int i=p;i&lt;=3*n;++i){\n        if(q[i].x&lt;x &amp;&amp; q[i].y&lt;y || q[i].y&lt;x &amp;&amp; q[i].x&lt;y)f[x][y]=max(f[x][y],dp(q[i].x,q[i].y,i)+q[i].h);\n    }\n    return f[x][y];\n}\nsigned main() {\n    while(1) {\n        ++cnt;\n        scanf(\"%lld\",&amp;n);\n        if(!n)return 0;\n        init();\n        int ans=0;\n        for(int i=1;i&lt;=3*n;++i){\n            ans=max(ans,dp(q[i].x,q[i].y,i)+q[i].h);\n        }\n        printf(\"Case %lld: maximum height = %lld\\n\",cnt,ans);\n    }\n    return 0;\n}\n</code></pre></p> <p>2) \u6b63\u89e3\u7bc7</p> <p>\u4e8b\u5b9e\u4e0a\uff0c\u72b6\u6001\u5c31\u53ea\u6709\\(O(n)\\)\u79cd\uff0c\u8bbe\\(f[x]\\)\u8868\u793a\u4e0b\u9762\u662f\\(x\\)\u65f6\u7684\u6700\u5927\u503c\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\u8fd8\u662f\\(O(n^2)\\)\uff0c\u7a7a\u95f4\u53ef\u53d8\u4e3a\\(O(n)\\)</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=95;\nint f[N],g[N];\nint cnt,n;\nstruct node {\n    int x,y,h;\n} q[N];\nbool Cmp(node a,node b){\n    if(a.x==b.x)return a.y&gt;b.y;\n    else return a.x&gt;b.x;\n}\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nvoid init() {//Discrete \n    memset(f,0,sizeof f);\n    int a,b,c;\n    for(int i=1; i&lt;=n; ++i) {\n        scanf(\"%lld%lld%lld\",&amp;a,&amp;b,&amp;c);\n        g[3*i-2]=a,g[3*i-1]=b,g[3*i]=c;\n        if(a&gt;b)swap(a,b);\n        if(a&gt;c)swap(a,c);\n        if(b&gt;c)swap(b,c);\n        q[3*i-2].x=c,q[3*i-2].y=b,q[3*i-2].h=a;\n        q[3*i-1].x=c,q[3*i-1].y=a,q[3*i-1].h=b;\n        q[3*i].x=b,q[3*i].y=a,q[3*i].h=c;\n    }\n    sort(g+1,g+3*n+1,cmp);\n    int tot=unique(g+1,g+3*n+1)-g-1;\n    for(int i=1;i&lt;=3*n;++i){\n        q[i].x=lower_bound(g+1,g+tot+1,q[i].x)-g;\n        q[i].y=lower_bound(g+1,g+tot+1,q[i].y)-g;\n    }\n    sort(q+1,q+3*n+1,Cmp);\n}\nint dp(int p){\n    int x=q[p].x,y=q[p].y;\n    if(x&lt;y || x&lt;=0 || y&lt;=0)return 0;\n    if(f[p])return f[p];\n    for(int i=p;i&lt;=3*n;++i){\n        if(q[i].x&lt;x &amp;&amp; q[i].y&lt;y)f[p]=max(f[p],dp(i)+q[i].h);\n    }\n    return f[p];\n}\nsigned main() {\n    while(1) {\n        ++cnt;\n        scanf(\"%lld\",&amp;n);\n        if(!n)return 0;\n        init();\n        int ans=0;\n        for(int i=1;i&lt;=3*n;++i){\n            ans=max(ans,dp(i)+q[i].h);\n        }\n        printf(\"Case %lld: maximum height = %lld\\n\",cnt,ans);\n    }\n    return 0;\n}\n</code></pre> <ul> <li>\u7ed3\u8bba\uff1a\u8bb0\u5fc6\u5316\u641c\u7d22\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u57fa\u672c\u4e0e\u7a7a\u95f4\u590d\u6742\u5ea6\u4e00\u81f4\uff0c\u53ea\u8981\u72b6\u6001\u8bbe\u8ba1\u6ca1\u95ee\u9898\uff0c\u65f6\u95f4\u4e0a\u5c31\u8fc7\u5f97\u53bb\u3002</li> </ul> <p>P2476</p> <p>\u9996\u5148\u8bf4\u660e\\(f[i][j]\\)\u8868\u793a\u524d\\(i\\)\u4e2a\u6728\u5757\u5df2\u7ecf\u6d82\u5b8c\uff0c\u6700\u524d\u9762\u7684\u6728\u5757\u989c\u8272\u4e3a\\(j\\)\u7684\u72b6\u6001\u8bbe\u8ba1\u662f\u9519\u8bef\u7684\uff0c\u56e0\u4e3a\u540c\u4e00\u79cd\u72b6\u6001\u53ef\u80fd\u8868\u793a\u591a\u4e2a\u5206\u652f\uff0c\u4f46\u6709\u7684\u5206\u652f\u53ef\u80fd\u5b58\u5728\u66f4\u591a\u7684\u89e3\u4e0d\u80fd\u88ab\u641c\u5230\uff0c\u4f8b\u5982\u524d\u4e00\u79cd\u5206\u652f\u4e2d\\(c[k]==0\\),\u4f46\u540e\u4e00\u79cd\u5206\u652f\\(c[k]&gt;0\\)\uff0c\u53ef\u4ee5\u7ee7\u7eed\u641c\u7d22\uff0c\u4f46\u662f\u7531\u4e8e\u8bb0\u5fc6\u5316\u5bfc\u81f4\u76f4\u63a5\u9000\u51fa\uff0c\u4f7f\u5f97\u7b54\u6848\u53d8\u5c0f\u3002</p> <p>\u89c2\u5bdf\u5230\\(c_i\\)\u5f88\u5c0f\uff0c\u6240\u4ee5\u76f4\u63a5\u8bbe\\(f[a][b][c][d][e][last]\\)\u8868\u793a\u6709\u591a\u5c11\u4e2a\u5269\\(1,2,3,4,5\\)\u4e2a\u7684\u989c\u8272\u4e14\u4e0a\u4e00\u6b21\u67d3\u8272\u662f\u5269\\(last\\)\u4e2a\u7684\u989c\u8272\u65f6\u7684\u8d21\u732e\u3002</p> <p>\u6bcf\u6b21\u9009\u62e9\u4e00\u79cd\u989c\u8272\uff0c\u90a3\u4e48\u8fd9\u79cd\u989c\u8272\u5269\u4f59\u6570\\(-1\\)\uff0c\u6bd4\u4ed6\u5c0f\\(1\\)\u7684\u989c\u8272\u6570\\(+1\\),\u5982\u679c\\(last\\)\u6bd4\u4ed6\u5927\\(1\\)\uff0c\u8bf4\u660e\u8fd9\u4e00\u8f6e\u6709\u4e00\u4e2a\u989c\u8272\u4e0d\u80fd\u7528\uff0c\u6240\u4ee5\u8fd9\u4e00\u8f6e\u603b\u5171\u80fd\u53d6\u7684\u989c\u8272\u6570\\(-1\\).</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=16,M=6,P=1e9+7;\nint k,n,ans;\nint v[N],vis[M];\nint f[N][N][N][N][N][M];\nint dfs(int a,int b,int c,int d,int e,int last){\n    if(f[a][b][c][d][e][last])return f[a][b][c][d][e][last];\n    if(a+b+c+d+e==0)return f[a][b][c][d][e][last]=1;\n\n    int res=0;\n    if(a)res=(res+(a-(last==2))*dfs(a-1,b,c,d,e,1)%P)%P;\n    if(b)res=(res+(b-(last==3))*dfs(a+1,b-1,c,d,e,2)%P)%P;\n    if(c)res=(res+(c-(last==4))*dfs(a,b+1,c-1,d,e,3)%P)%P;\n    if(d)res=(res+(d-(last==5))*dfs(a,b,c+1,d-1,e,4)%P)%P;\n    if(e)res=(res+e*dfs(a,b,c,d+1,e-1,5)%P)%P;\n\n    return f[a][b][c][d][e][last]=res;\n}\n\nsigned main(){\n    scanf(\"%lld\",&amp;k);\n    for(int i=1;i&lt;=k;++i)scanf(\"%lld\",&amp;v[i]),n+=v[i],++vis[v[i]];\n    printf(\"%lld\",dfs(vis[1],vis[2],vis[3],vis[4],vis[5],0)%P);\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E8%B4%AA%E5%BF%83/","title":"\u8d2a\u5fc3","text":""},{"location":"my%20past/OI/%E8%B4%AA%E5%BF%83/#_2","title":"\u4e3a\u4ec0\u4e48\u9009\u62e9\u8d2a\u5fc3?","text":"<p>~~\u9664\u4e86\u6570\u636e\u7ed3\u6784\u548cdp\u5269\u4e0b\u7684\u90fd\u662f\u8d2a\u5fc3\u6a21\u62df\u66b4\u529b~~</p> <p>1) \u72b6\u6001\u4e0d\u597d\u8bbe\u8ba1\uff0c\u5982P1016\uff0c\u6bcf\u4e2a\u52a0\u6cb9\u7ad9\u7684\u52a0\u6cb9\u91cf\u8981\u7cbe\u786e\u5230\u5c0f\u6570\u540e\u4e24\u4f4d\uff0c\u57fa\u672c\u65e0\u6cd5\u679a\u4e3e\uff0c\u5e76\u4e14\u539f\u9898\u5177\u6709\u8d2a\u5fc3\u9009\u62e9\u6027\uff0c\u5373\u5c40\u90e8\u6700\u4f18\u89e3\u80fd\u63a8\u51fa\u5168\u5c40\u6700\u4f18\u89e3\uff0c\u8fd9\u6837\u5c31\u7528\u8d2a\u5fc3\u3002</p> <p>2) \u679a\u4e3e\u91cf\u8fc7\u5927\uff0c\u5982CF939E,\u5982\u679cdp\u5c31\u662f\\(O(n^2)\\),\u4f46\u53d1\u73b0\u6027\u8d28\u540e\u5c3a\u53d6\u6cd5\u5c31\u662f\\(O(n)\\);\u518d\u5982CF47E\u4e5f\u662f\u5c3a\u53d6\u6cd5\uff0c\u5982\u679c\u66b4\u529b\u5c31\u662f\\(O(n^2)\\)</p> <p>\u6709\u4e9b\u679a\u4e3e\u91cf\u8fc7\u5927\u7684\u95ee\u9898\u8fd8\u53ef\u4ee5\u7528\u6570\u636e\u7ed3\u6784\u7ef4\u62a4\u3002</p> <p>P1080</p> <p>$$\u5047\u8bbe\u5df2\u7ecf\u6392\u4e86\u51e0\u4e2a\u4eba\uff08\u5305\u62ec\u56fd\u738b\uff09\uff0c\u8bbe\u4ed6\u4eec\u5de6\u624b\u4e0a\u7684\u6570\u7684\u4e58\u79ef\u4e3aS.\\</p> <p>\u73b0\u5728\u8981\u7ed92\u4e2a\u4eba\u6392\u5e8f\uff0c\u8bb0\u7b2c\u4e00\u4e2a\u4eba\u5de6\u624b\u4e0a\u7684\u6570\u4e3aa_{1}\uff0c\u53f3\u624b\u4e0a\u7684\u6570\u4e3ab_{1}\uff1b\u7b2c\u4e8c\u4e2a\u4eba\u5de6\u624b\u4e0a\u7684\u6570\u4e3aa_{2}\uff0c\u53f3\u624b\u4e0a\u7684\u6570\u4e3ab_{2}\u3002\\ \u5982\u679c\u7b2c\u4e00\u4e2a\u4eba\u6392\u5728\u524d\u9762\u4f18\u4e8e\u7b2c\u4e8c\u4e2a\u4eba\u6392\u5728\u524d\u9762\uff0c\u90a3\u4e48\\ max(S/b_1,S\u2217a_1/b_2)&lt;max(S/b_2,S\u2217a_2/b_1)\\</p> <p>\u663e\u7136\u6709S/b_2\\leq S* a_1/b_2\\</p> <p>\u5047\u8bbe\u6709S a_1/b_2\\geq S a_2/b_1,\u5219max(S/b_1,S\u2217a_1/b_2)\\geq max(S/b_2,S\u2217a_2/b_1),\u77db\u76fe\u3002\\</p> <p>\u6240\u4ee5S a_1/b_2&lt;S a_2/b_1,\u6574\u7406\u5f97a_1 b_1&lt;a_2 b_2\\</p> <p>\u6240\u4ee5\u53ea\u9700\u8981\u6309\u7167a* b\u6392\u5e8f\u5373\u53ef\u3002  $$</p> <ul> <li>\u7ed3\u8bba\uff1a\u5bf9\u4e8e\u8d2a\u5fc3\u9009\u62e9\u6027\u7684\u8bc1\u660e\uff0c\u53ef\u4ee5\u5047\u8bbe\u4e00\u4e2a\u4e2d\u95f4\u72b6\u6001\uff0c\u5373\u5df2\u7ecf\u505a\u5b8c\\(i-1\\)\u4e2a\u4eba,\u8003\u8651\u7b2c\\(i\\)\u4e2a\u4f4d\u7f6e\u53ef\u4ee5\u653e\u7684\u4eba\uff0c\u4e3a\u4e86\u8bc1\u660e\u65b9\u4fbf\u53ef\u4ee5\u53ea\u8003\u86512\u4e2a\u6216\u5c11\u91cf\u7684\u4eba,\u50cfP3951\u4e00\u6837\u3002</li> </ul> <p>CF939E</p> <p>\u8d2a\u5fc3\u5c3a\u53d6\u6cd5\u3002</p> <p>\u6709\u4e24\u6761\u91cd\u8981\u6027\u8d28\u3002</p> <p>1) \u5bf9\u4e8e\u4e00\u4e2a\u52a0\u5165\u7684\u65b0\u6570\u4e00\u5b9a\u8981\u9009\u3002</p> <p>$$ \u539f\u5f0f ans=Max-\\frac{sum}{n}\\</p> <p>\u8003\u8651\u7528\u65b0\u7684\u6700\u5927\u66ff\u6362\u6389\u539f\u6765\u7684\u6700\u5927\uff0c\u8bbe\u65b0\u7684\u6700\u5927\u6bd4\u539f\u6765\u6700\u5927\u5927 \\Delta(x)\\ ans=\\frac{(Max+\\Delta(x))\\times n-(sum+\\Delta(x))}{n}\\</p> <p>\u56e0\u4e3a n\\geq 1\uff0cans\u4e00\u5b9a\u53d8\u5927\uff08\u4f18\u79c0\uff09 $$ 2) \u5bf9\u4e8e\u96c6\u5408 s \u5269\u4e0b\u7684\u6570\uff0c\u4e00\u5b9a\u662f\u9009\u524d\u9762\u51e0\u4e2a\u5c0f\u7684\u6570\uff0c\u5e76\u4e14\u9009\u7684\u6570\u7684\u4e2a\u6570\u662f\u5355\u8c03\u4e0d\u51cf\u7684\u3002</p> <p>\u53ef\u4ee5\u610f\u4f1a\u4e00\u4e0b\u8bc1\u660e\uff0c\u4e00\u5b9a\u662f\u9009\u6bd4\u5f53\u524d\u96c6\u5408\u5e73\u5747\u6570\u5c0f\u7684\u6570\u52a0\u8fdb\u6765\uff0c\u4f7f\u5e73\u5747\u6570\u66f4\u5c0f\uff0c\u7b54\u6848\u624d\u4f1a\u53d8\u5f97\u66f4\u5927\u3002 $$ \u539f\u5f0f ans=Max-\\frac{sum}{n}\\</p> <p>\u8003\u8651\u65b0\u52a0\u4e00\u4e2a\u6570 \\Delta(x)\\ \u65b0\u7684\u5f0f\u5b50 ans=Max-\\frac{sum+\\Delta(x)}{n+1}\\</p> <p>\u82e5\u65b0\u5f0f\u51cf\u53bb\u539f\u5f0f&gt;0\uff0c\u5219\u65b0\u5f0f\u66f4\u4f18\u79c0\\ \u65b0\u5f0f\u51cf\u539f\u5f0f\u5f97\\ -\\frac{sum+\\Delta(x)}{n+1}+\\frac{sum}{n}\\</p> <p>\u7b49\u4e8e\\ \\frac{sum-n\\times \\Delta(x)}{n\\times(n+1)}&gt;0\\</p> <p>\u5f97\u51fa\u66f4\u4f18\u79c0\u6761\u4ef6\u4e3a\uff1asum-n\\times \\Delta(x)&gt;0\uff0c\u5373 \\Delta(x) &lt;\\frac{sum}{n}\\ $$</p> <p>\u8bc1\u6bd5\uff0c\u53ef\u4ee5\u7528\u5c3a\u53d6\u6cd5\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define db double\n#define int long long \nusing namespace std;\nconst int N=5e5+10;\nint n,cnt,tot;\nint vis[N],q[N];\ndb res[N],a[N],sum[N];\nint read1(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }   \n    while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid work(){\n    int l=1,r=0;\n    db ans=-1.0;\n    for(int i=1;i&lt;=cnt;++i)sum[i]=sum[i-1]+a[i];\n    for(int i=1;i&lt;=cnt;++i){\n        if(!vis[i])continue;\n        ans=-1.0;\n        while(l&lt;=i){\n            db tmp=(double)(a[i]-(double)(sum[l]+a[i])/(l+1));\n            if(tmp&gt;ans)ans=tmp,++l;\n            else{\n                --l;\n                break;  \n            }\n        }\n        if(l==i+1)--l;\n        res[i]=ans;\n    }\n    for(int i=1;i&lt;=tot;++i)printf(\"%.10lf\\n\",res[q[i]]);\n\n}\nsigned main(){\n    cnt=0,tot=0;\n    n=read1();\n    for(int i=1,op;i&lt;=n;++i){\n        op=read1();\n        if(op==1){\n            a[++cnt]=(double)read1();\n        }else{\n            vis[cnt]=1;\n            q[++tot]=cnt;\n        }\n    }\n    work();\n    return 0;   \n}\n</code></pre> <p>P1645</p> <p>\u8d2a\u5fc3\u7684\u5c06\u5e8f\u5217\u6309\u7167\u53f3\u7aef\u70b9\u6392\u5e8f\uff0c\u90a3\u4e48\u6bcf\u4e2a\u533a\u95f4\u5185\u5e94\u8be5\u9009\u7684\u70b9\u5e94\u8be5\u5206\u5e03\u5728\u5b83\u7684\u6700\u53f3\u8fb9\uff0c\u8fd9\u6837\u80fd\u591f\u4fdd\u8bc1\u6709\u7684\u70b9\u6700\u5c11\uff0c\u662f\u6700\u4f18\u89e3\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=2e3+10;\nint n,ans;\nint vis[N];\nstruct query{\n    int l,r,m;\n}q[N];\n\nint w[N][N];\nbool cmp(query a,query b){\n    return a.r&lt;b.r;\n}\nsigned main(){\n    memset(vis,0,sizeof vis);\n    memset(w,0,sizeof w);\n    scanf(\"%lld\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%lld%lld%lld\",&amp;q[i].l,&amp;q[i].r,&amp;q[i].m);\n    }\n    sort(q+1,q+n+1,cmp);\n    for(int i=1;i&lt;=n;++i){\n        for(int j=q[i].l;j&lt;=q[i].r;++j){\n            w[j][++w[j][0]]=i;\n        }   \n    }\n    int ans=0;\n    for(int i=1;i&lt;=n;++i){\n        int l=q[i].l,r=q[i].r,m=q[i].m;\n        if(!q[i].m)continue;\n        for(int j=r;j&gt;=l;--j){\n            if(!q[i].m)break;\n            if(vis[j])continue;\n            vis[j]=1;\n            ans++;\n            //q[i].m--;\n            for(int k=1;k&lt;=w[j][0];++k){\n                if(q[w[j][k]].m)q[w[j][k]].m--;\n            }\n        }\n    }\n    printf(\"%lld\",ans);\n    return 0;\n} \n\n/*\n\n2\n1 1000 1000\n1 999 999\n*/\n</code></pre> <p>P1191</p> <p>\u5c06\u6bcf\u4e00\u5217\u524dn-1\u884c\u5f80\u4e0a\u80fd\u6570\u5230\u7684\u6700\u591a\u7684\u70b9\u6570\u8bb0\u5f55\u4e0b\u6765\uff0c\u90a3\u4e48\u6bcf\u4e2a\u7b2cn\u884c\u7684\u70b9\u7684\u8d21\u732e\u5c31\u662f\u4ece\u5de6\u5f80\u53f3\u626b\u5e76\u53d6\u6700\u5c0f\u503c\u3002</p> <p>\u4e00\u4e2a\u6570\u626b\u63cf\\(O(n)\\),\u5171\\(n^2\\)\u4e2a\u6570\uff0c\u6240\u4ee5\u603b\u590d\u6742\u5ea6\\(O(n^3)\\)</p> <p>P1016</p> <p>1.\u53ea\u8981\u5b58\u5728\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u4e0e\u4e0b\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u6216\u7ec8\u70b9\u95f4\u7684\u8ddd\u79bb\u5927\u4e8e\\(c* d_2\\),\u90a3\u4e48\u65e0\u89e3.</p> <p>2.\u5bf9\u4e8e\u6bcf\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u6709\u4e24\u79cd\u53ef\u80fd\uff1a</p> <p>1\uff09\u4ed6\u80fd\u5230\u8fbe\u7684\u6240\u6709\u70b9\u4e2d\u6709\u4ef7\u683c\u6bd4\u4ed6\u5c0f\u7684\u52a0\u6cb9\u7ad9\uff0c\u90a3\u5c31\u52a0\u6cb9\u5230\u521a\u597d\u80fd\u5230\u8fbe\u90a3\u4e2a\u52a0\u6cb9\u7ad9\uff0c\u6b64\u65f6\u6cb9\u91cf\u4f1a\u53d8\u4e3a\u96f6\uff1b</p> <p>2\uff09\u4ed6\u80fd\u5230\u8fbe\u7684\u70b9\u91cc\u6ca1\u6709\u4ef7\u683c\u5c0f\u4e8e\u5b83\u7684\u52a0\u6cb9\u7ad9\uff0c\u90a3\u5c31\u5728\u8fd9\u91cc\u5145\u6ee1\u6cb9\uff0c\u518d\u5230\u540e\u9762\u90a3\u4e9b\u52a0\u6cb9\u7ad9\u4e2d\u4ef7\u683c\u76f8\u5bf9\u6700\u5c0f\u7684\u52a0\u6cb9\u7ad9\uff0c\u6cb9\u91cf\u4ece$c \\(\u51cf\u5c11\\)(\\Delta d)/d_2 $\u3002</p> <p>\u8bc1\u660e\uff1a</p> <p>1.1\uff09\u4e2d\u4f1a\u4e0d\u4f1a\u5269\u4f59\u7684\u6cb9\u91cf\u5df2\u7ecf\u80fd\u6ee1\u8db3\u80fd\u591f\u5230\u8fbe\u4e0b\u4e00\u52a0\u6cb9\u7ad9\uff1f</p> <p>\u4e0d\u4f1a\uff0c\u56e0\u4e3a\u5b83\u7531\u4e0a\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u8f6c\u79fb\u8fc7\u6765\uff0c\u800c\u4e0a\u4e00\u4e2a\u52a0\u6cb9\u7ad9\u6700\u8fdc\u80fd\u5230\u7684\u8ddd\u79bb\u5230\u4e0d\u4e86\u76ee\u6807\u52a0\u6cb9\u7ad9\uff0c\u56e0\u6b64\u4e00\u5b9a\u4f1a\u518d\u52a0\u6cb9\uff0c\u4e0d\u4f1a\u7531\u4e0d\u52a0\u6cb9\u5c31\u8d70\u4e86\u7684\u60c5\u51b5\u3002</p> <p>2.2\uff09\u4e2d\u4e3a\u4ec0\u4e48\u8981\u9009\u4ef7\u683c\u76f8\u5bf9\u6700\u5c11\u7684\u52a0\u6cb9\u7ad9\uff0c\u5e76\u4e14\u8981\u5145\u6ee1\u6cb9\uff1f</p> <p>\u56e0\u4e3a\u5982\u679c\u518d\u540e\u9762\u7684\u52a0\u6cb9\u7ad9\u80fd\u591f\u5230\u8fbe\u6bd4\u5b83\u5c0f\u7684\u52a0\u6cb9\u7ad9\uff0c\u90a3\u4e48\u4ed6\u4f1a\u9700\u8981\u52a0\u6cb9\u6765\u5230\u8fbe\u90a3\u4e00\u52a0\u6cb9\u7ad9\uff0c\u8fd9\u662f\u5c31\u53ef\u4ee5\u7528\u4e4b\u524d\u4ef7\u683c\u4f4e\u7684\u6cb9\uff0c\u8fbe\u5230\u6700\u4f18\uff1b\u5c31\u7b97\u6ca1\u6709\uff0c\u4e3a\u4e86\u5230\u8fbe\u7ec8\u70b9\u4e5f\u8981\u52a0\u6cb9\uff0c\u6240\u4ee5\u9009\u62e9\u76f8\u5bf9\u6700\u5c0f\u7684\u8865\u5145\u6cb9\u91cf\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=210,INF=1050;\ndouble d1,c,p0,d2;\nint n;\nstruct node{\n    double d,p;\n}q[N];\nbool cmp(node a,node b){\n    return a.d&lt;b.d;\n}\nint main(){\n    scanf(\"%lf%lf%lf%lf%d\",&amp;d1,&amp;c,&amp;d2,&amp;p0,&amp;n);  \n    q[0].d=0,q[0].p=p0;\n    for(int i=1;i&lt;=n;++i){\n        scanf(\"%lf%lf\",&amp;q[i].d,&amp;q[i].p);\n    }\n    sort(q+1,q+n+1,cmp);\n    q[n+1].d=d1,q[n+1].p=0;\n    for(int i=1;i&lt;=n+1;++i){\n        if(q[i].d-q[i-1].d&gt;c*d2){\n            printf(\"No Solution\");\n            return 0;\n        }\n    }\n    int pos=0;double cc=0;double ans=0;\n    while(pos&lt;n+1){\n        int tmp=0,loc=n+1,col=n+1;\n        double minn=INF;\n        for(int i=pos+1;i&lt;=n+1;++i){\n            if(c&lt;(q[i].d-q[pos].d)/d2){\n                loc=i-1;\n                break;\n            }\n        }\n        for(int i=pos+1;i&lt;=loc;++i){\n            if(minn&gt;q[i].p){\n                minn=q[i].p;\n                col=i;\n            }\n            if(q[i].p&lt;=q[pos].p){\n                tmp=i;\n                break;\n            }\n        }\n        if(tmp)ans+=(((q[tmp].d-q[pos].d)/d2)-cc)*q[pos].p,cc=0,pos=tmp;// delta must bigger than cc\n        else ans+=(c-cc)*q[pos].p,cc=c-(q[col].d-q[pos].d)/d2,pos=col;\n    }\n    printf(\"%.2lf\",ans);\n    return 0;\n}\n</code></pre> <p>P1658</p> <p>\u5047\u8bbe\u5f53\u524d\u624b\u4e2d\u7684\u786c\u5e01\u80fd\u591f\u7ec4\u62101,2,...,sum\u8fd9\u4e9b\u9762\u503c\uff0c\u6b64\u65f6sum&lt;x.</p> <p>\u90a3\u4e48\u8003\u8651\u6dfb\u52a0\u4e00\u79cd\u786c\u5e01\uff0c\u4f7f\u5f97sum\u53d8\u5927\u3002</p> <p>\u5f53\u5f53\u524d\u786c\u5e01\u7684\u503c\u4e3aa\u65f6\uff0c\u80fd\u7ec4\u6210\u7684\u6700\u5927\u9762\u503c\u7531sum\u53d8\u6210sum+a.</p> <p>\u4f46\u662f\uff0c\u5982\u679ca&gt;sum+1,\u90a3\u4e48sum+1,sum+2,...,a-1\u8fd9\u4e9b\u6570\u5c31\u4e0d\u80fd\u7ec4\u6210\uff0c\u90a3\u4e48\u9762\u503c\u5c31\u4e0d\u8fde\u7eed\u4e86.</p> <p>\u6240\u4ee5\u6211\u4eec\u8981\u53d6a&lt;=sum+1\u4e14a\u6700\u5927\u3002</p> <p>\u65e0\u89e3\u7684\u60c5\u51b5\u5c31\u662f\u6ca1\u67091\u3002</p> <p>\u6ce8\u610f\u53d6a\u65f6\u8981\u7528upper_bound-1,\u4e0d\u80fd\u7528lower_bound-1. \u8003\u8651: <pre><code>5 7 \u6b64\u65f6\u90fd\u6c42\u51fa\u4e865\uff0c\u6b63\u786e\uff1b\n\n5 6 7 \u6b64\u65f6upper_bound\u6c42\u51fa6\uff0c\u6b63\u786e;lower_bound\u6c42\u51fa5\uff0c\u9519\u8bef.\n</code></pre></p> <p>code:</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=110;\nint n,x;\nint a[N];\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nint main(){\n    scanf(\"%d%d\",&amp;x,&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;a[i]);\n\n    sort(a+1,a+n+1,cmp);\n    if(a[1]!=1){\n        printf(\"-1\");\n        return 0;\n    }\n    int sum=0,cnt=0;\n    while(sum&lt;x){\n        int tmp=upper_bound(a+1,a+n+1,sum+1)-a-1;\n        sum+=a[tmp];\n        cnt++;  \n    }\n    printf(\"%d\",cnt);\n    return 0;\n\n}\n</code></pre> <p>P1248</p> <p>\u8fd9\u9898\u7684\u5751\u70b9\u5c31\u662f\\(B\\)\u8f66\u95f4\u4e0d\u80fd\u540c\u65f6\u5904\u7406\u591a\u4e2a\u7269\u4ef6\uff0c\u8981\u5806\u5230\u540e\u9762\u9010\u4e2a\u5904\u7406\u3002</p> <p>\u9996\u5148\u8003\u8651\u6bcf\u6b21\u7684\u8d21\u732e\uff1a</p> <p>\u8bbe\\(fa\\)\u4e3a\\(a\\)\u8f66\u95f4\u7684\u5904\u7406\u65f6\u95f4\uff0c\\(fb\\)\u4e3a\\(b\\)\u8f66\u95f4\u7684\u5904\u7406\u65f6\u95f4\uff0c\u5219\uff1a</p> \\[ fb=\\max(fa+s[i].a,fb)+s[i].b;\\\\ fa+=s[i].a; \\] <p>\u56e0\u4e3a\u53ea\u6709\u7b2c\\(i\\)\u4e2a\\(a\\)\u7269\u4ef6\u548c\u7b2c\\(i-1\\)\u4e2a\\(b\\)\u7269\u4ef6\u90fd\u505a\u5b8c\u624d\u80fd\u505a\u7b2c\\(i\\)\u4e2a\\(b\\)\u7269\u4ef6\u3002</p> <p>\u518d\u8003\u8651\\(a\\)\u8f66\u95f4\u5df2\u7ecf\u505a\u4e86\\(P\\)\u65f6\u95f4\u7684\u5de5\u4f5c\uff0c\u4e0d\u8003\u8651\\(b\\)\u8f66\u95f4\u5269\u4f59\u7684\u7269\u4ef6\uff0c\u6b64\u65f6\u8fd8\u5269\u4e24\u4ef6\u3002</p> <p>\u90a3\u4e48\\(1\\)\u5728\u524d\u548c\\(2\\)\u5728\u524d\u7684\u8d21\u732e\u5206\u522b\u662f\uff1a</p> \\[ a_1+\\max(a_2,b_1)+b_2\\\\\u548c\\\\a_2+\\max(a_1,b_2)+b_1 \\] <p>\u5982\u679c1\u66f4\u4f18\uff0c\u5c31\u6709</p> \\[ a_1+\\max(a_2,b_1)+b_2&lt;a_2+\\max(a_1,b_2)+b_1\\\\ a_1+b_2-\\max(a_1,b_2)&lt;b_1+a_2-\\max(a_2,b_1)\\\\ \u5373\\\\ \\min(a_1,b_2)&lt;\\min(a_2,b_1) \\] <p>\u4f46\u8fd9\u4e2a\u5f0f\u5b50\u4e0d\u80fd\u76f4\u63a5\u505a\u9898\uff0c\u53cd\u4f8b\u662f\u80fd\u4e3e\u51fa\u6765\u7684\u3002</p> <p>\u6211\u4eec\u8003\u8651\u4e24(\u4e09)\u79cd\u60c5\u51b5\uff1a</p> <p>1) \\(a_i&lt;=b_i\\)\uff0c\u5219\u6709\\(a_1&lt;a_2\\) 1) \\(a_i&gt;b_i\\)\uff0c\u5219\u6709\\(b_1&gt;b_2\\)</p> <p>\u53c8\u8003\u8651\\(a_1&gt;b_1,a_2&lt;b_2\\)\u65f6\u4e00\u5b9a\u4e0d\u4f1a\u6ee1\u8db3\u4e0a\u8ff0\u5f0f\u5b50\uff0c\u6240\u4ee5\u53ea\u9700\u8981\u4fdd\u8bc1\\(a_1&lt;b_1,a_2&gt;b_2\\),\u5373\\(a&lt;b\\)\u7684\u653e\u5728\u524d\u9762\uff0c\\(a&gt;b\\)\u7684\u653e\u5728\u540e\u9762\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\nusing namespace std;\nconst int N=1e3+10;\nint n;\nstruct node{\n    int a,b,d,id;\n}s[N];\n\nbool cmp(node a,node b){\n    if(a.d==b.d){\n        if(a.d&lt;=0)return a.a&lt;b.a;\n        else return a.b&gt;b.b;\n    }\n    return a.d&lt;b.d;\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;s[i].a);\n    for(int i=1;i&lt;=n;++i)scanf(\"%d\",&amp;s[i].b);\n    for(int i=1;i&lt;=n;++i)s[i].d=s[i].a==s[i].b?0:(s[i].a&gt;s[i].b?1:-1),s[i].id=i;\n    sort(s+1,s+n+1,cmp);\n    int fa=0,fb=0;\n    for(int i=1;i&lt;=n;++i){\n        fb=max(fa+s[i].a,fb)+s[i].b;\n        fa+=s[i].a;\n    }\n    printf(\"%d\\n\",fb);\n    for(int i=1;i&lt;=n;++i)printf(\"%d \",s[i].id);\n    return 0;\n} \n</code></pre> <p>UVA11300</p> <p>\u5f53\u9762\u5bf9\u8fd9\u79cd\u770b\u4f3c\u6bcf\u79cd\u64cd\u4f5c\u90fd\u6ca1\u6709\u65b9\u5411\uff0c~~\u5f88\u50cf\u6a21\u62df\u9000\u706b~~\u7684\u9898\uff0c\u5c31\u5148\u5f3a\u884c\u89c4\u5b9a\u4e00\u4e2a\u65b9\u5411\u3002</p> <p>\u6ce8\u610f\u5230\u4e00\u4e2a\u4eba\u7ed9\u522b\u4eba\u94b1\u548c\u522b\u4eba\u7ed9\u5b83\u94b1\u7684\u6b21\u6570\u6ca1\u6709\u9650\u5236\uff0c\u6240\u4ee5\u8bbe\\(x_i\\)\u8868\u793a\u540e\u4e00\u4e2a\u4eba\u7ed9\u524d\u4e00\u4e2a\u4eba\u7684\u94b1\u6570\uff0c\u8d1f\u6570\u8868\u793a\u9006\u65b9\u5411\u7ed9\u94b1\u3002</p> <p>\u6240\u4ee5\u6709:</p> \\[A_1+x_1-x_2=M\\\\ A_2+x_2-x_3=M\\\\ ...\\\\ A_{n-1}+x_{n-1}-x_n=M \\] <p>\u6ce8\u610f\\(A_n\\)\u90a3\u4e2a\u5f0f\u5b50\u5c31\u6ca1\u6709\u7528\u4e86\u3002</p> <p>\u6d88\u53bb\u9664\\(x_1\\)\u6240\u6709\u7684\u672a\u77e5\u91cf\uff0c\u6574\u7406\u53ef\u5f97\uff1a</p> \\[ x_2=x_1-C_1\\\\ x_3=x_1-C_2\\\\ ...\\\\ x_{n-1}=x_1-C_{n-1}\\\\ \u5176\u4e2dC_i=\\sum_{k=1}^iA_k-i* M \\] <p>\u6240\u4ee5\u8fd9\u4e2a\u95ee\u9898\u5c31\u53d8\u6210\u4e86\u5750\u6807\u8f74\u4e0a\\(n-1\\)\u4e2a\u70b9\uff0c\u9009\u90a3\u4e2a\u4f4d\u7f6e\u4f7f\u5f97\u6240\u6709\u7684\u70b9\u5230\u8fd9\u4e2a\u4f4d\u7f6e\u7684\u8ddd\u79bb\u548c\u6700\u77ed\u3002</p> <p>\u6b64\u65f6\u8f93\u51fa\u4e2d\u4f4d\u6570\u5373\u53ef\uff0c\u8d2a\u5fc3\u7684\u8bc1\u660e\u5f88\u5de7\u5999\uff0c~~\u4f46\u6211\u61d2\uff0c\u7565~~</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#include&lt;algorithm&gt;\n#define int long long \nusing namespace std;\nconst int N=1e6+10;\nint c[N];\nint n,a,tot,ans;\nbool cmp(int a,int b){\n    return a&lt;b;\n}\nint abs1(int a){\n    return a&gt;=0?a:-a;\n}\nsigned main(){\n    while(scanf(\"%lld\",&amp;n)!=EOF){\n        tot=0,ans=0;\n        for(int i=1;i&lt;=n;++i)scanf(\"%lld\",&amp;a),c[i]=c[i-1]+a,tot+=a;\n        tot/=n;\n        for(int i=1;i&lt;=n;++i)c[i]-=i*tot;\n        sort(c+1,c+n+1,cmp);\n        int mid=n/2+1;\n        for(int i=1;i&lt;=n;++i){\n            ans+=abs1(c[i]-c[mid]);\n        }\n        printf(\"%lld\\n\",ans);\n    }\n    return 0;\n}\n</code></pre>"},{"location":"my%20past/OI/%E9%80%86%E5%85%83/","title":"\u4e58\u6cd5\u9006\u5143","text":"<p>\u4e00\u5171\u56db\u79cd\u65b9\u6cd5\u3002</p>"},{"location":"my%20past/OI/%E9%80%86%E5%85%83/#1ologn","title":"1.\u6269\u5c55\u6b27\u51e0\u91cc\u5f97O(logn)","text":"<p>\u6269\u5c55\u6b27\u51e0\u91cc\u5f97\u80fd\\(O(\\log n)\\)\u6c42\u89e3\u4e0d\u5b9a\u65b9\u7a0b\\(ax+by=c\\).</p> <p>\u800c\\(ax\\equiv1\\pmod p\\)\u7b49\u4ef7\u4e8e\\(ax+py=1\\)(\u76f8\u5f53\u4e8e\\(ax\\)\u52a0\u6216\u51cf\\(y\\)\u4e2a\\(p\\)\u540e\u53d8\u6210\\(1\\))</p> <p>\u56e0\u4e3a\\(a\\)\u4e0e\\(p\\)\u4e92\u8d28\uff0c\u6240\u4ee5\u53d8\u6210\\(ax+by=gcd(a,b)\\)</p> <p>\u5bf9\u4e8e\\(ax+by=gcd(a,b)\\)\u8fd9\u4e2a\u5f0f\u5b50\u5c31\u53ef\u4ee5\u7528\u6269\u6b27\u6c42\u89e3\u4e86.</p> \\[ ax+by=gcd(a,b)=gcd(b,a\\ mod\\  b)=bx+(a\\ mod \\ b)y\\\\ bx+(a\\ mod \\ b)y=bx+(a\u2212\u230a\\frac ab\u230b b) y=ay+b (x\u2212\u230a\\frac ab\u230b y) \\] <p>\u8fd9\u6837\u5c31\u53ef\u4ee5\u9012\u5f52\u6c42\u89e3\u4e86\u3002</p> <pre><code>void exgcd(int a,int b,int &amp;x,int &amp;y){\n    if(!b\uff09x=1,y=0;\n    else exgcd(b,a%b,y,x),y-=a\\b*x; \n}\n</code></pre>"},{"location":"my%20past/OI/%E9%80%86%E5%85%83/#2ologn","title":"2.\u5feb\u901f\u5e42O(logn)","text":"<p>\u7531\u8d39\u9a6c\u5c0f\u5b9a\u7406\uff1a\u82e5\\(p\\)\u662f\u8d28\u6570\uff0c\\(a\\)\u4e3a\u4efb\u610f\u6574\u6570\uff0c\u5219\\(a^p \\equiv a\\pmod p\\)</p> <p>\u4e24\u8fb9\u540c\u9664\\(a\\),\u5f97\\(a^{p-1} \\equiv 1 \\pmod p\\)</p> <p>\u6240\u4ee5\\(a* a^{-1}\\equiv a^{p-1}\\pmod p\\)</p> <p>\\(a^{-1}\\equiv a^{p-2}\\pmod p\\)</p>"},{"location":"my%20past/OI/%E9%80%86%E5%85%83/#3-o1","title":"3.\u7ebf\u6027\u63a8 O(1)","text":"\\[\u9012\u63a8\u8fb9\u754c\u662f1^{-1}\\equiv 1\\pmod p\\\\ \u8bbep=k* i+r,k= \\lfloor \\frac pi\\rfloor,r=p\\mod i\\\\ \u5219k* i+r\\equiv0\\pmod p\\\\ (k* i+r)* (r^{-1}* i^{-1})\\equiv 0\\pmod p\\\\ k* r^{-1}+i^{-1}\\equiv 0\\pmod p\\\\ i^{-1}\\equiv -k* r^{-1}\\pmod p\\\\ i^{-1}\\equiv -\\lfloor \\frac pi\\rfloor * (p\\mod i)^{-1}\\pmod p \\]"},{"location":"my%20past/OI/%E9%80%86%E5%85%83/#4-o1","title":"4.\u9636\u4e58\u63a8 O(1)","text":"<p>$$ \u8bbef(i)=inv[i!]=\\frac{1}{i!}\\pmod p\\</p> <p>\\therefore f(i-1)=\\frac1{(i-1)!}=\\frac1{i!} i=f(i) i\\pmod p\\</p> <p>\u6c42\u51fa\u6240\u6709f(i)\u540e\u4fbf\u6709\uff1a\\</p> <p>\\frac1i=\\frac1{i!} (i-1)!=f(i) (i-1)!\\pmod p\\</p> <p>\u6ce8\u610f\u8fb9\u754c\u662ff(n),\u7528\u5feb\u901f\u5e42\u7684\u65b9\u6cd5\u6c42\u4e00\u4e0b\u3002</p> <p>$$</p> <p>P5431</p> <p>\u8fd9\u9053\u9898\u9700\u8981\u7ef4\u62a4\u4e00\u4e0b\u524d\u7f00\u79ef\u548c\u540e\u7f00\u79ef\u3002</p> <p>\u8003\u8651\u5c06\u539f\u9898\u79cd\u7684\u5206\u5f0f\u901a\u5206\u3002 $$  \u8bbes=\\prod a_i,\u5219\u539f\u5f0f=\\sum_{i=1}^n\\frac{k^i\\frac {s}{a_i}}{s} \\     =s^{-1}\\sum_{i=1}^nk^if[i-1]g[i+1] \\(f\uff0cg\u4e3a\u524d\u7f00\u79ef\u548c\u540e\u7f00\u79ef) $$ \u56e0\u6b64\u53ea\u9700\u8981\u4e00\u6b21\u6c42\u9006\u5c31\u884c\u3002</p> <p><pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=5e6+10;\nint n,p,k,s,ss;\nint a[N],f[N],g[N];\nint kp(int x,int q){\n    if(q==0)return 1;\n    if(q==1)return x%p;\n    if(q%2==1)return x*kp(x*x%p,q&gt;&gt;1)%p;\n    else return kp(x*x%p,q&gt;&gt;1)%p;\n}\nvoid init(){\n    f[0]=1;\n    g[n+1]=1;\n    s=1;\n    for(int i=1;i&lt;=n;++i){\n        s=(s*a[i])%p;\n        f[i]=(f[i-1]*a[i])%p;\n    }\n    for(int i=n;i&gt;=1;--i){\n        g[i]=(g[i+1]*a[i])%p;\n    }\n    ss=kp(s,p-2)%p;\n}\nint read1(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid write1(int x){\n    if(x&lt;0)putchar('-'),x=-x;\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n}\nsigned main(){\n    n=read1(),p=read1(),k=read1();\n    for(int i=1;i&lt;=n;++i)a[i]=read1();\n    init();\n    int ans=0,kk=1;\n    for(int i=1;i&lt;=n;++i){\n        kk=(kk*k)%p;\n        ans=(ans+(ss*kk%p)*(f[i-1]*g[i+1]%p))%p;\n    }\n    write1(ans);\n\n    return 0;\n}\n</code></pre> ~~\u5361\u5e38\u51fa\u9898\u4eba\u90fd\u662fSB~~</p> <ul> <li>\u7ed3\u8bba\uff1a\u770b\u5230\u6240\u6709\u9879\u7684\u79ef\u9664\u4ee5\u67d0\u4e00\u9879\u65f6\uff0c\u53ef\u4ee5\u7528\u524d\u7f00\u79ef\u548c\u540e\u7f00\u79ef\u4f18\u5316\u3002\u7c7b\u4f3c\u7684\u8fd8\u6709P1623\u7684\u4f18\u5316\u65b9\u6cd5\u3002\u8fd9\u6837\u53ef\u4ee5\u907f\u514d\u9664\u6cd5\u3002</li> </ul>"},{"location":"my%20past/OI/%E9%80%92%E5%BD%92/","title":"\u9012\u5f52 &amp; \u9012\u63a8","text":"<ul> <li>\u89e3\u9898\u91cd\u70b9\u5728\u4e8e\u5047\u8bbe\u51fa\u5f53\u524d\u7684\u72b6\u6001\u4ee5\u7ee7\u5b50\u95ee\u9898\u7684\u72b6\u6001\uff0c\u901a\u8fc7\u4e00\u6b65\u7684\u64cd\u4f5c\u627e\u51fa\u72b6\u6001\u7684\u8f6c\u79fb\u65b9\u5f0f\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u9012\u5f52/\u9012\u63a8\u4e86\u3002</li> </ul> <p>P1760 \u6c49\u8bfa\u5854</p> <p>\u666e\u901a\u7684\u9012\u5f52\u6cd5\u5c31\u662f\uff0c\u8ba9\u524d\\(n-1\\)\u4e2a\u76d8\u5b50\u79fb\u52a8\u5230\u7a7a\u67f1\u5b50\u4e0a\uff0c\u5c06\u7b2c\\(n\\)\u4e2a\u76d8\u5b50\u79fb\u52a8\u5230\u6307\u5b9a\u67f1\u5b50\uff0c\u518d\u5c06\\(n-1\\)\u4e2a\u76d8\u5b50\u79fb\u52a8\u5230\u7b2c\\(n\\)\u76d8\u4e0a\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=15510;\nint n,ans;\nint f(int n,int a,int b,int c){\n    if(n==1){\n        printf(\"move %lld from %lld to %lld\\n\",n,a,c);\n        return 1;\n    }\n    int ans=1;\n    ans+=f(n-1,a,c,b);\n    printf(\"move %lld from %lld to %lld\\n\",n,a,c);\n    ans+=f(n-1,b,a,c);\n    return ans;\n}\nsigned main(){\n    scanf(\"%lld\",&amp;n);\n    ans=f(n,1,2,3);\n    printf(\"%lld\\n\",ans);\n    return 0;\n} \n</code></pre> <p>\u8fd9\u6837\u4f60\u4f1a\u53d1\u73b0\uff0c\\(f(n-1,a,c,b)\\)\u4e0e\\(f(n-1,b,a,c)\\)\u6240\u7528\u7684\u6b65\u6570\u65f6\u4e00\u6837\u7684\uff0c\u6240\u4ee5\u6709\u7ed3\u8bba\uff1a \\(x[i]=2* x[i-1]+1\\),\u5373\\(x[i]=2^i-1\\).</p> <p>~~\u6240\u4ee5\u9ad8\u7cbe\u5ea6\u5c31\u4e0d\u5c55\u793a\u4e86~~</p> <p>P1242</p> <p>\u8fd9\u9053\u9898\u4e5f\u662f\u540c\u6837\u3002</p> <p>\u53ea\u4e0d\u8fc7\u7ed9\u51fa\u4e86\u5c06\u6700\u7ec8\u72b6\u6001\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5c06\u64cd\u4f5c\u62c6\u6210\u4e09\u90e8\u5206\uff1a</p> <p>1) \u5c06\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u6539\u53d8\u7684\u6700\u5927\u76d8\u5b50\u4e0a\u9762\u7684\u5c0f\u76d8\u5b50\u632a\u5f00\u5230\u7a7a\u4f59\u7684\u67f1\u5b50</p> <p>2) \u7528\u4e00\u6b65\u5c06\u5927\u76d8\u5b50\u4ee5\u5230\u6307\u5b9a\u4f4d\u7f6e</p> <p>3) \u5c06\u5c0f\u76d8\u5b50\u632a\u5230\u6307\u5b9a\u4f4d\u7f6e</p> <p>\u7531\u4e8e\u5bf9\u79f0\u6027\uff0c\u7b2c\u4e09\u6b65\u53ef\u4ee5\u7406\u89e3\u4e3a\u5c06\u5c0f\u76d8\u5b50\u4ece\u6700\u7ec8\u72b6\u6001\u632a\u5230\u7a7a\u4f59\u67f1\u5b50\u3002</p> <p>~~\u7136\u540e\u4f60\u5c31\u53d1\u73b0\uff0c\u88abHack\u4e86~~</p> <p>\u6b63\u786e\u505a\u6cd5\u662f\uff1a\u7b2c\u4e00\u6b65\u6709\u4e24\u79cd\uff1a</p> <p>(\u5047\u8bbe\u5c06\u5927\u76d8\u5b50\u4ece\u67f1\u5b501\u632a\u5230\u67f1\u5b502)</p> <p>1) \u5c0f\u76d8\u5b50\u5230\u67f1\u5b503\\(\\to\\)\u5927\u76d8\u5b50\u4ece1\u52302\\(\\to\\)\u5c0f\u76d8\u5b50\u5230\u6700\u7ec8\u72b6\u6001</p> <p>2) \u5c0f\u76d8\u5b50\u5230\u67f1\u5b502\\(\\to\\)\u5927\u76d8\u5b50\u4ece1\u52303\\(\\to\\)\u5c0f\u76d8\u5b50\u5230\u67f1\u5b501\\(\\to\\)\u5927\u76d8\u5b50\u4ece3\u52302\\(\\to\\)\u5c0f\u76d8\u5b50\u5230\u6700\u7ec8\u72b6\u6001</p> <p>\u8fd9\u5c31\u662fP1242 \u7b2c11\u4e2a\u70b9\u7684\\(Hack\\)\u539f\u7406.</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long\nusing namespace std;\nconst int N=122,M=5e6+10;\nint start[N],finish[N],mid[N];\nint n,cnt,m;\nstruct node {\n    int n,a,b;\n} step1[M],step2[M];\nvoid g(int n,int a,int b,int c,node *step) {\n    if(n==0)return;\n    g(n-1,a,c,b,step);\n    step[++cnt].n=n,step[cnt].a=a,step[cnt].b=c;\n    g(n-1,b,a,c,step);\n    return;\n}\nint f(int* P,int i,int final,node *step) {\n    if(i==0)return 0;\n    if(P[i]==final)return f(P,i-1,final,step);\n    int tmp=f(P,i-1,6-P[i]-final,step);\n    step[++cnt].n=i,step[cnt].a=P[i],step[cnt].b=final;\n    g(i-1,6-P[i]-final,P[i],final,step);\n    return tmp+(1ll&lt;&lt;(i-1));\n}\nvoid print1(int cnt,int ans,int a,int b,node *step) {\n    for(int i=a+1; i&lt;=cnt; ++i) {\n        swap(step[i].a,step[i].b);\n    }\n    for(int i=1; i&lt;=b/2; ++i) {\n        swap(step[i+a+1-1],step[cnt-i+1]);\n    }\n    for(int i=1; i&lt;=ans; ++i) {\n        printf(\"move %d from %c to %c\\n\",step[i].n,step[i].a+'A'-1,step[i].b+'A'-1);\n    }\n    printf(\"%lld\",ans);\n}\nsigned main() {\n    scanf(\"%lld\",&amp;n);\n    for(int i=1; i&lt;=3; ++i) {\n        scanf(\"%lld\",&amp;m);\n        for(int k=1,p; k&lt;=m; ++k)scanf(\"%lld\",&amp;p),start[p]=i;\n    }\n    for(int i=1; i&lt;=3; ++i) {\n        scanf(\"%lld\",&amp;m);\n        for(int k=1,p; k&lt;=m; ++k)scanf(\"%lld\",&amp;p),finish[p]=i;\n    }\n    while(start[n]==finish[n] &amp;&amp; n&gt;=1)--n;\n    int ans=0,tmp1=0,tmp2=0,tmp3=0,tmp4=0;\n    if(n&gt;=1) {\n        cnt=0;\n        tmp1=f(start,n-1,6-start[n]-finish[n],step1)+1;\n        step1[++cnt].n=n,step1[cnt].a=start[n],step1[cnt].b=finish[n];\n        tmp2=f(finish,n-1,6-start[n]-finish[n],step1);\n        cnt=0;\n        tmp3+=f(start,n-1,finish[n],step2)+1;\n        step2[++cnt].n=n,step2[cnt].a=start[n],step2[cnt].b=6-start[n]-finish[n];\n        for(int i=1;i&lt;n;++i)mid[i]=finish[n];\n        mid[n]=6-start[n]-finish[n];\n        tmp3+=f(mid,n-1,start[n],step2)+1;\n        step2[++cnt].n=n,step2[cnt].a=6-start[n]-finish[n],step2[cnt].b=finish[n];\n        tmp4=f(finish,n-1,start[n],step2);\n\n        if(tmp1+tmp2&lt;tmp3+tmp4) {\n            ans=tmp1+tmp2;\n            print1(ans,ans,tmp1,tmp2,step1);\n        } else {\n            ans=tmp3+tmp4;\n            print1(ans,ans,tmp3,tmp4,step2);\n        }\n    }\n    return 0;\n}\n</code></pre> <p>P</p>"},{"location":"my%20past/OI/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/","title":"\u9ad8\u65af\u6d88\u5143","text":""},{"location":"my%20past/OI/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_2","title":"\u89e3\u6cd5\u4e00","text":"<p>\u63091\\~n\u7684\u987a\u5e8f\u9009\u62e9\u672a\u77e5\u6570\\(x_i\\),\u9009\u62e9\\(x_i\\)\u7cfb\u6570\u6700\u5927\u7684\u65b9\u7a0b\uff0c\u5c06\u9009\u4e2d\u7684\u65b9\u7a0b\u7684\\(x_i\\)\u7cfb\u6570\u5316\u4e3a1\uff0c\u5e76\u7528\u90a3\u4e2a\u65b9\u7a0b\u6d88\u53bb\u5176\u4ed6\u65b9\u7a0b\u4e2d\u7684\\(x_i\\)\u9879\u3002</p> <p>\u6700\u540e\u5269\u4e0b\u4e00\u4e2a\u53ea\u6709\u4e00\u4e2a\u672a\u77e5\u6570\u5e76\u4e14\u7cfb\u6570\u4e3a1\u7684\u65b9\u7a0b\uff0c\u76f4\u63a5\u5f97\u51fa\u7b54\u6848\uff0c\u7528\u90a3\u4e2a\u7b54\u6848\u56de\u5e26\u5230\u5176\u4ed6\u65b9\u7a0b\uff0c\u4f9d\u6b21\u6c42\u89e3\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=110;\nconst double eps=1e-7;\ndouble f[N][N];\ndouble ans[N];\nint n;\ndouble abs1(double a){\n    return a&gt;=0.0?a:-a;\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=n+1;++j){\n            scanf(\"%lf\",&amp;f[i][j]);\n        }\n    }\n    for(int i=1;i&lt;=n;++i){\n        int r=i;\n        for(int j=i;j&lt;=n;++j){\n            if(abs1(f[r][i])&lt;abs1(f[j][i]))r=j;\n        }\n\n        if(abs1(f[r][i])&lt;eps){//\u5c31\u662f\u7b49\u4e8e0\uff0c\u90a3\u5c31\u662f\u8bf4\u8fd9\u4e2a\u672a\u77e5\u6570\u6240\u6709\u65b9\u7a0b\u7cfb\u6570\u90fd\u662f0\uff0c\u80af\u5b9a\u65e0\u89e3\u3002\n            printf(\"No Solution\");\n            return 0;\n        }\n        if(i!=r)swap(f[r],f[i]);\n        double tmp=f[i][i];\n        for(int j=i;j&lt;=n+1;++j)f[i][j]/=tmp;\n        for(int j=i+1;j&lt;=n;++j){\n            double tmp=f[j][i];\n            for(int k=i;k&lt;=n+1;++k){\n                f[j][k]-=f[i][k]*tmp;\n            }\n        }\n    }\n    ans[n]=f[n][n+1];\n    for(int i=n-1;i&gt;=1;--i){\n        for(int j=i+1;j&lt;=n;++j){\n            f[i][n+1]-=ans[j]*f[i][j];\n        }\n        ans[i]=f[i][n+1];\n    }\n    for(int i=1;i&lt;=n;++i){\n        printf(\"%.2lf\\n\",ans[i]);\n    }\n    return 0;\n} \n</code></pre>"},{"location":"my%20past/OI/%E9%AB%98%E6%96%AF%E6%B6%88%E5%85%83/#_3","title":"\u89e3\u6cd5\u4e8c","text":"<p>\u56e0\u4e3a\u56de\u5e26\u7684\u8fc7\u7a0b\u590d\u6742\u5e76\u4e14\u6ca1\u6709\u5fc5\u8981\uff0c\u6240\u4ee5\u6211\u4eec\u76f4\u63a5\u4e0d\u56de\u5e26\u4e86\u3002</p> <p>\u6bcf\u6b21\u53ea\u9700\u8981\u5c06\u9664\u4e86\u9009\u4e2d\u7684\u65b9\u7a0b\u7684\u5176\u4ed6\u6240\u6709\u65b9\u7a0b\u7684\u5f53\u524d\u672a\u77e5\u6570\u90fd\u6d88\u9664\u6389\uff0c\u90a3\u4e48\u6700\u540e\u5c31\u5269\u4e0bn\u4e2a\u53ea\u6709\u4e00\u4e2a\u672a\u77e5\u6570\u4e14\u7cfb\u6570\u4e3a1\u7684\u65b9\u7a0b\uff0c\u76f4\u63a5\u8f93\u51fa\u7b54\u6848\u5373\u53ef\u3002</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\nusing namespace std;\nconst int N=110;\ndouble f[N][N];\nint n;\ndouble abs1(double a){\n    return a&gt;=0.0?a:-a;\n}\nint main(){\n    scanf(\"%d\",&amp;n);\n    for(int i=1;i&lt;=n;++i)\n        for(int j=1;j&lt;=n+1;++j)scanf(\"%lf\",&amp;f[i][j]);\n    for(int i=1;i&lt;=n;++i){\n        int r=i;\n        for(int j=i;j&lt;=n;++j){\n            if(abs1(f[r][i])&lt;abs1(f[j][i]))r=j;\n        }\n        if(!abs1(f[r][i])){\n            printf(\"No Solution\");\n            return 0;\n        }\n        if(i!=r)swap(f[r],f[i]);\n        double tmp=f[i][i];\n        for(int j=i;j&lt;=n+1;++j)f[i][j]/=tmp;\n        for(int j=1;j&lt;=n;++j){\n            if(j==i)continue;\n            double tmp=f[j][i];\n            for(int k=i;k&lt;=n+1;++k)f[j][k]-=f[i][k]*tmp;//k=1\u4e5f\u884c\uff0c\u6ca1\u5fc5\u8981\n        }\n    }\n    for(int i=1;i&lt;=n;++i){\n        printf(\"%.2lf\\n\",f[i][n+1]);\n    }\n    return 0;\n} \n</code></pre> <p>P3389 \u6a21\u677f</p> <p>P2011</p> <p>\u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u662f\u6b63\u6781\u6216\u8d1f\u6781\u7684\u70b9\\(u\\)\uff0c\u90fd\u6709\uff1a</p> \\[\\sum_{v_i}\\frac{U_{v_i}-U_u}{R_{w_i}}=0\\] <p>\u5c06\u6240\u6709\u662f\u6b63\u6781\u8d1f\u6781\u7684\u70b9\u7684\u7ed3\u679c\u79fb\u5230\\(n+1\\)\u8868\u793a\u5e38\u6570\uff0c\u800c\\(v_i\\)\u5f97\u7cfb\u6570\u4e3a\\(-\\frac{1}{R_{w_i}}\\),\\(u\\)\u5f97\u7cfb\u6570\u4e3a\\(\\sum _{v_i}\\frac{1}{R_{w_i}}\\)</p> <p>\u90a3\u4e48\u4f1a\u6709n-k\u4e2a\u5f0f\u5b50\uff0c\u4e00\u5171n-k\u4e2a\u672a\u77e5\u6570\uff0c\u5bf9\u5e94\u6c42\u89e3\u5373\u53ef\u3002</p> <p>\u6ce8\u610f\u5199\u6cd5\u4e2d\uff0c\u6bcf\u4e2a\u5f0f\u5b50\u4e2d\u4f1a\u67090\u7cfb\u6570\u5b58\u5728\uff0c\u8981\u5ffd\u7565\u8fd9\u4e9b0\u7cfb\u6570\uff0c\u5e76\u4e14\u672a\u77e5\u6570\u7f16\u53f7\u8981\u4e0e\u5217\u53f7\u4e00\u4e00\u5bf9\u5e94\u3002(vis[i]\u6570\u7ec4\u7684\u4f5c\u7528)</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=440,M=2e5+10;\ndouble f[N][N],ans[N];\nint head[N],vis[N],id[N];\nint cnt,n,m,k,q,tot;\nstruct node{\n    int v,nxt;\n    double w;\n}e[M&lt;&lt;1];\ndouble abs1(double a){\n    return a&gt;=0.0?a:-a;\n}\nvoid add(int u,int v,double w){\n    e[++cnt].v=v;\n    e[cnt].w=w;\n    e[cnt].nxt=head[u];\n    head[u]=cnt;\n    return;\n}\nvoid clear1(){\n    for(int i=0;i&lt;=n;++i)ans[i]=-1.0;\n    ans[0]=0.0;\n}\nvoid init(){\n    tot=0;\n    for(int u=0;u&lt;=n;++u){\n        if(ans[u]&lt;0.0){\n            tot++;\n            vis[tot]=u;\n\n            for(int i=head[u];~i;i=e[i].nxt){\n                int v=e[i].v;\n                double w=e[i].w;\n                if(ans[v]&gt;=0.0){\n                    f[tot][n+1]+=ans[v]/w;//constant \n                }else f[tot][v]-=1.0/w;\n                f[tot][u]+=1.0/w;\n            }\n        }\n    }\n}\nvoid work(){\n    for(int u=1,i;u&lt;=tot;++u){\n        i=vis[u];\n        int r=u;\n        for(int j=u;j&lt;=tot;++j){\n            if(abs1(f[r][i])&lt;abs1(f[j][i]))r=j;\n        }\n        /*if(!abs1(f[r][i])){\n            return 0;\n        }*/\n        if(u!=r)swap(f[r],f[u]);\n        double tmp=f[u][i];\n        for(int j=i;j&lt;=n+1;++j)f[u][j]/=tmp;\n        for(int j=u+1;j&lt;=tot;++j){\n            double tmp=f[j][i];\n            for(int k=i;k&lt;=n+1;++k){\n                f[j][k]-=f[u][k]*tmp;\n            }\n        }\n    }\n\n    ans[vis[tot]]=f[tot][n+1];\n    for(int i=tot-1;i&gt;=1;--i){\n        for(int j=i+1;j&lt;=n;++j){\n            f[i][n+1]-=f[i][vis[j]]*ans[vis[j]];\n        }\n        ans[vis[i]]=f[i][n+1];\n    }\n}\nsigned main(){\n    memset(head,-1,sizeof head);\n    cnt=-1;\n\n    scanf(\"%lld%lld%lld%lld\",&amp;n,&amp;m,&amp;k,&amp;q);\n\n    clear1();\n\n    for(int i=1,tmp;i&lt;=k;++i){\n        scanf(\"%lld\",&amp;tmp);\n        scanf(\"%lf\",&amp;ans[tmp]);\n    }\n\n    for(int i=1,u,v,w;i&lt;=m;++i){\n        scanf(\"%lld%lld%lld\",&amp;u,&amp;v,&amp;w);\n        add(u,v,w);\n        add(v,u,w);\n    }\n\n    init();\n    work();\n\n    for(int i=1,x,y;i&lt;=q;++i){\n        scanf(\"%lld%lld\",&amp;x,&amp;y);\n        printf(\"%.2lf\\n\",ans[x]-ans[y]);\n    }\n\n\n    return 0;\n}\n/*\n3 5 1 3\n2 18\n2 1 6\n2 3 2\n1 3 6\n3 0 6\n1 0 2\n2 0\n1 3\n2 1\n*/\n</code></pre>"},{"location":"my%20past/OI/%E9%AB%98%E7%B2%BE%E5%BA%A6/","title":"\u9ad8\u7cbe\u5ea6","text":"<p>~~\u6211\u613f\u79f0\u4e4b\u4e3a\u53f2\u4e0a\u6700\u70e6\u4eba\u7684\u7b97\u6cd5~~</p>"},{"location":"my%20past/OI/%E9%AB%98%E7%B2%BE%E5%BA%A6/#__int128","title":"__int128","text":"<p>~~\u867d\u7136\u7406\u8bba\u4e0a\u53ea\u80fd\u5728linux\u73af\u5883\u4e2d\u7528\uff0c\u4e0d\u77e5\u9053\u8003\u8bd5\u65f6CCF\u7684\u8001\u5e74\u673a\u80fd\u4e0d\u80fd\u7f16\u8bd1\u901a\u8fc7\uff0c\u4f46\u6d1b\u8c37\u662f\u53ef\u4ee5\u7684~~</p> <p>\u672c\u8d28\u5c31\u662f\u4e00\u4e2a128\u4f4d\u7684\u5927\u6574\u6570\uff0c\u5927\u7ea640\u4f4d\uff0c\u5bf9\u4e8e\u5c0f\u90e8\u5206\u5bf9\u9ad8\u7cbe\u5ea6\u8981\u6c42\u8f83$_ { \u5c0f} $\u7684\u9898\u662f\u53ef\u4ee5\u7528\u7684\uff0c\u7701\u4e8b\u3002</p> <p>gcc\u4e2d\u5b98\u65b9\u7ed9\u51fa\u7684__int128\u6709\u4e24\u79cd,\u4e3a <pre><code>__int128_t a=10000000000000L;\n__uint128_t b=200000000000000L;\n//__int128 c=100000000000L\na*=b;//long long \u6ea2\u51fa\uff0c\u4f46__int128\u4e0d\u4f1a\n</code></pre> ~~\u4e8b\u5b9e\u4e0a__int128\u548c__int128_t\u90fd\u80fd\u7528~~</p> <p>\u8fd0\u7b97\u7684\u8bdd\uff0c\u540c\u6837\u652f\u6301\u53d6\u53cd\uff0c\u5f02\u6216\uff0c\u4f4d\u79fb\uff0c\u52a0\u51cf\u4e58\u9664\u7b49\u3002 \u5c31\u662f\u8f93\u5165\u8f93\u51fa\u8981\u7528\u5feb\u5199\u5feb\u8bfb</p> <pre><code>#define int __int128\nint read1(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch&gt;='0' &amp;&amp; ch&lt;='9'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid write1(int x){\n    if(x&lt;0)putchar('-'),x=-x;\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n    return;\n}\n</code></pre> <p>P1005</p> <p>1.__int128 <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int __int128_t\nusing namespace std;\nconst int N=110;\nint n,m;\nint f[N][N],a[N][N],tmp[N];\nint kp(int x,int p){\n    if(p&lt;=1)return x;\n    if(p%2==0)return kp(x*x,p&gt;&gt;1);\n    else return x*kp(x*x,p&gt;&gt;1);\n}\nint dp(int x){\n    memset(f,0,sizeof f);\n    for(int i=1;i&lt;=m;++i)tmp[i]=a[x][i];\n    tmp[0]=tmp[m+1]=0;\n    for(int i=1;i&lt;=m;++i){\n        f[i][i]=tmp[i]&lt;&lt;1;\n    }\n    for(int l=2;l&lt;=m;++l){\n        for(int b=1;b+l-1&lt;=m;++b){\n            int e=b+l-1;\n            f[b][e]=max(f[b][e],2*f[b][e-1]+2*tmp[e]);\n            f[b][e]=max(f[b][e],2*f[b+1][e]+2*tmp[b]);\n        }\n    }\n    return f[1][m];\n}\nint read1(){\n    int x=0,f=1;\n    char ch=getchar();\n    while(ch&gt;'9' || ch&lt;'0'){\n        if(ch=='-')f=-1;\n        ch=getchar();\n    }\n    while(ch&gt;='0' &amp;&amp; ch&lt;='9'){\n        x=(x&lt;&lt;1)+(x&lt;&lt;3)+ch-'0';\n        ch=getchar();\n    }\n    return x*f;\n}\nvoid write1(int x){\n    if(x&lt;0)putchar('-'),x=-x;\n    if(x&gt;9)write1(x/10);\n    putchar(x%10+'0');\n    return;\n}\nsigned main(){\n    n=read1(),m=read1();\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=m;++j){\n            a[i][j]=read1();\n        }\n    }\n    int ans=0; \n    for(int i=1;i&lt;=n;++i){\n        int tmp=dp(i);\n        //write1(tmp);\n        //putchar('\\n');\n        ans+=tmp;\n    }\n    write1(ans);\n    return 0; \n}\n/*\n5 5\n0 0 0 0 0\n0 0 0 0 1\n876 1 566 920 598\n259 945 123 659 997\n176 478 293 464 278\n2 3\n1 5 2\n3 4 2\n2 4\n1 4 2 3\n1 4 3 2\n*/\n</code></pre> 2.\u6734\u7d20 <pre><code>#include&lt;iostream&gt;\n#include&lt;cstdio&gt;\n#include&lt;cstring&gt;\n#define int long long \nusing namespace std;\nconst int N=110;\nint n,m;\nstruct HP{\n    int p[N],len;\n    void clear1(){\n        memset(p,0,sizeof p);\n        len=1;\n        return;\n    }\n    void read1(){\n        memset(p,0,sizeof p);\n        len=1;\n        p[0]=1;\n        char ch=getchar();\n        while(ch&gt;'9' || ch&lt;'0'){\n            if(ch=='-')p[0]=-1;\n            ch=getchar();\n        }\n        while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n            p[++len]=ch-'0';\n            ch=getchar();\n        }\n        for(int i=1;i&lt;=len/2;++i){\n            swap(p[i],p[len-i+1]);\n        }\n    }\n    void write1(){\n        if(p[0]==-1)putchar('-');\n        for(int i=len;i&gt;=1;--i){\n            putchar(p[i]+'0');\n        }\n        putchar('\\n');\n    }\n}f[N][N],a[N][N],tmp[N],ans,tp;\nHP operator +(const HP &amp;a,const HP &amp;b){\n    //if(a.p[0]==-1 || b.p[0]==-1)return a-b;\n    HP c;\n    c.clear1();\n    int la=a.len,lb=b.len,lc=max(la,lb);\n    int f=0;\n    for(int i=1;i&lt;=lc;++i){\n        c.p[i]=a.p[i]+b.p[i]+f;\n        f=c.p[i]/10;\n        c.p[i]%=10;\n    }\n    if(f)c.p[++lc]=f;\n    c.len=lc;\n    return c;\n}\nint cmp(const HP &amp;a,const HP &amp;b){\n    //cout&lt;&lt;a.len&lt;&lt;\" \"&lt;&lt;b.len&lt;&lt;endl;\n    if(a.len&lt;b.len)return -1;\n    if(a.len&gt;b.len)return 1;\n    for(int i=a.len;i&gt;=1;--i){\n        if(a.p[i]&lt;b.p[i])return -1;\n        if(a.p[i]&gt;b.p[i])return 1;\n    }\n    return 0;\n}\nHP max1(const HP &amp;a,const HP &amp;b){\n    int res=cmp(a,b);\n    if(res&gt;=0)return a;\n    else return b;\n}\nHP operator -(const HP &amp;x,const HP &amp;y){\n    HP c,a,b;\n    c.clear1();\n    if(cmp(x,y)==-1){\n        a=y,b=x;\n        c.p[0]=-1;  \n    }else{\n        a=x,b=y;\n        c.p[0]=1;\n    }\n    int la=a.len,lb=b.len,lc=max(la,lb);\n    int f=0;\n\n    for(int i=1;i&lt;=lc;++i){\n        if(a.p[i]&lt;b.p[i]){\n            a.p[i]+=10;\n            a.p[i+1]--;\n        }\n        c.p[i]=a.p[i]-b.p[i];\n    }\n    while(lc&gt;1 &amp;&amp; c.p[lc]==0)--lc;\n    c.len=lc;\n    return c;\n}\nHP operator *(const HP &amp;a,const HP &amp;b){\n    HP c;\n    c.clear1();\n    int la=a.len,lb=b.len,lc=la+lb;\n    for(int i=1;i&lt;=la;++i){\n        int x=0;\n        for(int j=1;j&lt;=lb;++j){\n            c.p[i+j-1]+=a.p[i]*b.p[j]+x;\n            x=c.p[i+j-1]/10;\n            c.p[i+j-1]%=10;\n        }\n        c.p[i+lb]=x;\n    }\n    while(lc&gt;1 &amp;&amp; c.p[lc]==0)--lc;\n    c.len=lc;\n    int tmp;\n    if(a.p[0]==-1 &amp;&amp; b.p[0]==-1)tmp=1;\n    else if(a.p[0]&gt;=0 &amp;&amp; b.p[0]&gt;=0)tmp=1;\n    else tmp=-1;\n    c.p[0]=tmp;\n    return c;\n}\nHP operator /=(const HP &amp;a,int b){\n    HP c;\n    c.clear1();\n    int la=a.len,f=0,lc=la;\n    for(int i=la;i&gt;=1;--i){\n        c.p[i]=(f*10+a.p[i])/b;\n        f=(f*10+a.p[i])%b;\n    }\n    while(lc&gt;1 &amp;&amp; c.p[lc]==0)--lc;\n    c.len=lc;\n    return c;\n}\n\nHP operator /(const HP &amp;x,const HP &amp;y){\n    HP c,a=x,b=y;\n    c.clear1();\n    int la=a.len,lb=b.len,lc=la-lb+1;\n    for(int i=lc;i&gt;=1;--i){\n        HP e;\n        e.clear1();\n        for(int k=1;k&lt;=lb;++k){\n            e.p[k+i-1]=b.p[k];\n        }\n        e.len=i+lb-1;\n        while(cmp(a,e)&gt;=0)c.p[i]++,a=a-e;\n    }\n    while(lc&gt;1 &amp;&amp; c.p[lc]==0)--lc;\n    c.len=lc;\n    return c;\n}\nHP kp(HP x,int p){\n    if(p&lt;=1)return x;\n    if(p%2==0)return kp(x*x,p&gt;&gt;1);\n    else return x*kp(x*x,p&gt;&gt;1);\n}\nHP dp(int x){\n    memset(f,0,sizeof f);\n    for(int i=1;i&lt;=m;++i)tmp[i]=a[x][i];\n    HP two;\n    two.clear1();\n    two.len=1,two.p[1]=2;\n    for(int i=1;i&lt;=m;++i){\n        f[i][i]=tmp[i]*two;\n    }\n    for(int l=2;l&lt;=m;++l){\n        for(int b=1;b+l-1&lt;=m;++b){\n            int e=b+l-1;\n            f[b][e]=max1(f[b][e],two*f[b][e-1]+two*tmp[e]);\n            f[b][e]=max1(f[b][e],two*f[b+1][e]+two*tmp[b]);\n        }\n    }\n    return f[1][m];\n}\nsigned main(){\n    scanf(\"%d%d\",&amp;n,&amp;m);\n    for(int i=1;i&lt;=n;++i){\n        for(int j=1;j&lt;=m;++j){\n            a[i][j].read1();\n        }\n    }\n    ans.clear1();\n\n    for(int i=1;i&lt;=n;++i){\n        tp=dp(i);\n        //write1(tmp);\n        //putchar('\\n');\n        ans=ans+tp;\n    }\n    ans.write1();\n    return 0; \n}\n/*\n5 5\n0 0 0 0 0\n0 0 0 0 1\n876 1 566 920 598\n259 945 123 659 997\n176 478 293 464 278\n2 3\n1 5 2\n3 4 2\n2 4\n1 4 2 3\n1 4 3 2\n*/\n</code></pre></p>"},{"location":"my%20past/OI/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_2","title":"\u6734\u7d20\u9ad8\u7cbe\u5ea6","text":"<p><pre><code>struct HP{\n    int p[N],len;\n    void clear1(){\n        memset(p,0,sizeof p);\n        len=1;\n        return;\n    }\n    void read1(){\n        memset(p,0,sizeof p);\n        len=1;\n        p[0]=1;\n        char ch=getchar();\n        while(ch&gt;'9' || ch&lt;'0'){\n            if(ch=='-')p[0]=-1;\n            ch=getchar();\n        }\n        while(ch&lt;='9' &amp;&amp; ch&gt;='0'){\n            p[++len]=ch-'0';\n            ch=getchar();\n        }\n        for(int i=1;i&lt;=len/2;++i){\n            swap(p[i],p[len-i+1]);\n        }\n    }\n    void write1(){\n        if(p[0]==-1)putchar('-');\n        for(int i=len;i&gt;=1;--i){\n            putchar(p[i]+'0');\n        }\n        putchar('\\n');\n    }\n};\nHP operator +(const HP &amp;a,const HP &amp;b){\n    //if(a.p[0]==-1 || b.p[0]==-1)return a-b;\n    HP c;\n    c.clear1();\n    int la=a.len,lb=b.len,lc=max(la,lb);\n    int f=0;\n    for(int i=1;i&lt;=lc;++i){\n        c.p[i]=a.p[i]+b.p[i]+f;\n        f=c.p[i]/10;\n        c.p[i]%=10;\n    }\n    if(f)c.p[++lc]=f;\n    c.len=lc;\n    return c;\n}\nint cmp(const HP &amp;a,const HP &amp;b){\n    //cout&lt;&lt;a.len&lt;&lt;\" \"&lt;&lt;b.len&lt;&lt;endl;\n    if(a.len&lt;b.len)return -1;\n    if(a.len&gt;b.len)return 1;\n    for(int i=a.len;i&gt;=1;--i){\n        if(a.p[i]&lt;b.p[i])return -1;\n        if(a.p[i]&gt;b.p[i])return 1;\n    }\n    return 0;\n}\nHP max1(const HP &amp;a,const HP &amp;b){\n    int res=cmp(a,b);\n    if(res&gt;=0)return a;\n    else return b;\n}\nHP operator -(const HP &amp;x,const HP &amp;y){\n    HP c,a,b;\n    c.clear1();\n    if(cmp(x,y)==-1){\n        a=y,b=x;\n        c.p[0]=-1;  \n    }else{\n        a=x,b=y;\n        c.p[0]=1;\n    }\n    int la=a.len,lb=b.len,lc=max(la,lb);\n    int f=0;\n\n    for(int i=1;i&lt;=lc;++i){\n        if(a.p[i]&lt;b.p[i]){\n            a.p[i]+=10;\n            a.p[i+1]--;\n        }\n        c.p[i]=a.p[i]-b.p[i];\n    }\n    while(lc&gt;1 &amp;&amp; c.p[lc]==0)--lc;\n    c.len=lc;\n    return c;\n}\nHP operator *(const HP &amp;a,const HP &amp;b){\n    HP c;\n    c.clear1();\n    int la=a.len,lb=b.len,lc=la+lb;\n    for(int i=1;i&lt;=la;++i){\n        int x=0;\n        for(int j=1;j&lt;=lb;++j){\n            c.p[i+j-1]+=a.p[i]*b.p[j]+x;\n            x=c.p[i+j-1]/10;\n            c.p[i+j-1]%=10;\n        }\n        c.p[i+lb]=x;\n    }\n    while(lc&gt;1 &amp;&amp; c.p[lc]==0)--lc;\n    c.len=lc;\n    int tmp;\n    if(a.p[0]==-1 &amp;&amp; b.p[0]==-1)tmp=1;\n    else if(a.p[0]&gt;=0 &amp;&amp; b.p[0]&gt;=0)tmp=1;\n    else tmp=-1;\n    c.p[0]=tmp;\n    return c;\n}\nHP operator /=(const HP &amp;a,int b){\n    HP c;\n    c.clear1();\n    int la=a.len,f=0,lc=la;\n    for(int i=la;i&gt;=1;--i){\n        c.p[i]=(f*10+a.p[i])/b;\n        f=(f*10+a.p[i])%b;\n    }\n    while(lc&gt;1 &amp;&amp; c.p[lc]==0)--lc;\n    c.len=lc;\n    return c;\n}\n\nHP operator /(const HP &amp;x,const HP &amp;y){\n    HP c,a=x,b=y;\n    c.clear1();\n    int la=a.len,lb=b.len,lc=la-lb+1;\n    for(int i=lc;i&gt;=1;--i){\n        HP e;\n        e.clear1();\n        for(int k=1;k&lt;=lb;++k){\n            e.p[k+i-1]=b.p[k];\n        }\n        e.len=i+lb-1;\n        while(cmp(a,e)&gt;=0)c.p[i]++,a=a-e;\n    }\n    while(lc&gt;1 &amp;&amp; c.p[lc]==0)--lc;\n    c.len=lc;\n    return c;\n}\n</code></pre> \u8bb0\u5f97\u5e38\u6e05\u96f6\uff0c\u5c11\u7528\u5c40\u90e8\u53d8\u91cf\uff0c\u4e0d\u7136\u4f1a\u51fa\u73b0\u521d\u59cb\u503c\u4e0d\u4e3a\u96f6\u7684\u60c5\u51b5\u3002</p>"},{"location":"my%20past/OI/%E9%AB%98%E7%B2%BE%E5%BA%A6/#_3","title":"\u538b\u7f29\u9ad8\u7cbe\u5ea6","text":"<pre><code>const int M=1000+5,base=1e8;\nint n;\nstruct BigInt{\n    int sum[21];\n    void operator += (const BigInt &amp;x){\n        sum[0]=max(sum[0],x.sum[0]);\n        for(int i=1; i&lt;=sum[0]; i++){\n            sum[i]+=x.sum[i];\n            if(sum[i]&gt;=base) sum[i+1]++,sum[i]-=base;\n        }\n        if(sum[sum[0]+1]&gt;0) sum[0]++;\n    }\n    void operator *= (const BigInt &amp;x){\n        long long A[21]={};\n        for(int i=1; i&lt;=sum[0]; i++){\n            for(int j=1; j&lt;=x.sum[0]; j++){\n                A[i+j-1]+=1ll*sum[i]*x.sum[j];\n            }\n        }\n        for(int i=1; i&lt;=sum[0]+x.sum[0]; i++){\n            A[i+1]+=A[i]/base; A[i]%=base; sum[i]=A[i];\n        }\n        if(A[sum[0]+x.sum[0]]) sum[0]=sum[0]+x.sum[0];\n        else sum[0]=sum[0]+x.sum[0]-1;\n    }\n    void Print(){\n        printf(\"%d\",sum[sum[0]]);\n        for(int i=sum[0]-1; i&gt;0; i--){\n            printf(\"%08d\",sum[i]);\n        }\n    }\n}\n</code></pre>"},{"location":"my%20past/bangumi/bangumi/","title":"Bangumi","text":"<p>\u65e5\u756a\u63a8\u8350\uff1a</p> <p>\u6211\u7684\u8111\u5185\u604b\u788d\u9009\u9879</p> <p>\u4e2d\u4e8c\u75c5\u4e5f\u8981\u8c08\u604b\u7231</p> <p>\u9b54\u6cd5\u7981\u4e66\u76ee\u5f55</p> <p>\u67d0\u79d1\u5b66\u7684\u8d85\u7535\u78c1\u70ae</p> <p>re0:\u4ece\u96f6\u5f00\u59cb\u7684\u5f02\u4e16\u754c\u751f\u6d3b</p> <p>\u7f18\u4e4b\u7a7a</p> <p>\u65e5\u5728\u6821\u56ed</p> <p>\u8fdb\u51fb\u7684\u5de8\u4eba</p> <p>clannad</p> <p>\u5c0f\u6797\u5bb6\u7684\u9f99\u5973\u4ec6</p> <p>\u4e3a\u7f8e\u597d\u4e16\u754c\u732e\u4e0a\u795d\u798f</p> <p>\u9f99\u4e0e\u864e</p> <p>\u9b3c\u706d\u4e4b\u5203</p> <p>\u5492\u672f\u56de\u6218</p> <p>\u767d\u8272\u76f8\u7c3f2</p> <p>\u7518\u6210\u5149\u8f89\u6e38\u4e50\u56ed</p> <p>\u6b22\u8fce\u6765\u5230\u5b9e\u529b\u4e3b\u4e49\u81f3\u4e0a\u6559\u5ba4</p> <p>\u672a\u6765\u65e5\u8bb0</p> <p>\u6b7b\u4ea1\u7b14\u8bb0</p> <p>\u51b0\u83d3</p> <p>\u8fd9\u4e2a\u7f8e\u672f\u793e\u5927\u6709\u95ee\u9898</p> <p>\u5de5\u4f5c\u7ec6\u80de</p> <p>\u6708\u520a\u5c11\u5973\u91ce\u5d0e\u541b</p> <p>\u56fd\u738b\u6392\u540d</p> <p>\u7535\u952f\u4eba</p> <p>\u65e0\u804c\u8f6c\u751f</p> <p>\u52c7\u8005\u6b7b\u4e86</p> <p>\u56de\u590d\u672f\u58eb\u7684\u91cd\u542f\u4eba\u751f</p> <p>\u4e3a\u7f8e\u597d\u4e16\u754c\u732e\u4e0a\u7206\u708e</p> <p>\u5173\u4e8e\u6211\u8f6c\u751f\u6210\u53f2\u83b1\u59c6\u8fd9\u6863\u4e8b</p> <p>\u7d2b\u7f57\u5170\u6c38\u6052\u82b1\u56ed</p> <p>\u603b\u4e4b\u5c31\u662f\u975e\u5e38\u53ef\u7231</p> <p>\u5200\u5251\u795e\u57df</p> <p>\u6211\u7684\u9752\u6625\u604b\u7231\u7269\u8bed\u679c\u7136\u6709\u95ee\u9898</p> <p>\u9752\u6625\u732a\u5934\u5c11\u5e74\u4e0d\u4f1a\u68a6\u5230\u5154\u5973\u90ce\u5b66\u59d0</p> <p>EVA</p> <p>\u7ea6\u4f1a\u5927\u4f5c\u6218</p> <p>\u53ef\u5851\u6027\u8bb0\u5fc6</p> <p>\u5f3a\u98ce\u5439\u62c2</p> <p>\u5e72\u7269\u59b9\u5c0f\u57cb</p> <p>\u590f\u65e5\u91cd\u73b0</p> <p>\u7ea6\u5b9a\u7684\u68a6\u5e7b\u5c9b</p> <p>\u547d\u8fd0\u77f3\u4e4b\u95e8</p> <p>\u94a2\u4e4b\u70bc\u91d1\u672f\u5e08</p> <p>\u65e0\u5934\u9a91\u58eb\u5f02\u95fb\u5f55</p> <p>\u7537\u5b50\u9ad8\u4e2d\u751f\u65e5\u5e38</p> <p>\u64c5\u957f\u6349\u5f04\u7684\u9ad8\u6728\u540c\u5b66</p> <p>\u5929\u4f7f\u964d\u4e34\u5230\u6211\u8eab\u8fb9</p> <p>\u7cbe\u7075\u5b9d\u53ef\u68a6(?)</p> <p>\u6211\u7684\u59b9\u59b9\u4e0d\u53ef\u80fd\u8fd9\u4e48\u53ef\u7231</p> <p>\u4f1a\u957f\u662f\u5973\u4ec6\u5927\u4eba</p> <p>\u8f89\u591c\u5927\u5c0f\u59d0</p> <p>\u4f60\u7684\u540d\u5b57</p> <p>\u8a00\u53f6\u4e4b\u5ead</p> <p>\u79d2\u901f\u4e94\u5398\u7c73</p> <p>\u5929\u6c14\u4e4b\u5b50</p> <p>\u8424\u706b\u4e4b\u68ee</p> <p>\u672a\u95fb\u82b1\u540d</p> <p>\u6708\u8272\u771f\u7f8e</p> <p>\u6a31\u82b1\u5e84\u7684\u5ba0\u7269\u5973\u5b69</p> <p>\u5800\u4e0e\u5bab\u6751</p> <p>\u56db\u6708\u662f\u4f60\u7684\u8c0e\u8a00</p> <p>\u5883\u754c\u7684\u5f7c\u65b9</p> <p>\u7f6a\u6076\u738b\u51a0</p> <p>\u590f\u76ee\u53cb\u4eba\u5e10</p> <p>\u865a\u6784\u63a8\u7406</p> <p>\u7406\u79d1\u751f\u5760\u5165\u60c5\u7f51</p> <p>\u4e94\u7b49\u4efd\u65b0\u5a18</p> <p>\u78a7\u84dd\u4e4b\u6d77</p> <p>\u5c5e\u6027\u5496\u5561\u5385</p> <p>\u5947\u5e7b\u4e16\u754c\u8205\u8205</p> <p>\u8def\u4eba\u5973\u4e3b\u7684\u517b\u6210\u65b9\u6cd5</p> <p>Darling in the Franxx</p> <p>Charlotte</p> <p>\u5b64\u72ec\u6447\u6eda</p> <p>\u707c\u773c\u7684\u590f\u5a1c</p> <p>\u5f92\u7136\u559c\u6b22\u4f60</p> <p>angel beats</p> <p>\u6e38\u620f\u4eba\u751f</p> <p>\u9f99\u738b\u7684\u5de5\u4f5c</p> <p>\u73c8\u767e\u7483\u7684\u5815\u843d</p> <p>\u9b54\u7b1bMAGI</p> <p>\u604b\u7231\u968f\u610f\u94fe\u63a5</p> <p>b\u578bh\u7cfb</p> <p>citrus</p> <p>\u76fe\u4e4b\u52c7\u8005</p> <p>\u6765\u81ea\u6df1\u6e0a</p> <p>\u65e5\u5e38</p> <p>\u8857\u89d2\u9b54\u65cf</p> <p>\u5f02\u79cd\u65cf\u98ce\u4fd7\u5a18\u8bc4\u9274\u6307\u5357</p> <p>\u604b\u7231\u7981\u6b62\u7684\u4e16\u754c</p> <p>\u5c71\u7530\u8fdb\u884clv999</p> <p>\u7ecf\u9a8c\u4e3a\u96f6\u7684\u6211</p> <p>\u5f7b\u591c\u4e4b\u6b4c</p> <p>\u9b54\u5973\u4e4b\u65c5</p> <p>\u6253\u5de5\u5427\u9b54\u738b\u5927\u4eba</p> <p>\u82b1\u5f00\u4f0a\u5415\u6ce2</p> <p>\u6563\u534e\u793c\u5f25</p> <p>\u4e0a\u4f4e\u97f3\u53f7</p> <p>\u4eba\u6e23\u7684\u672c\u613f</p> <p>\u5728\u5730\u4e0b\u57ce\u5bfb\u6c42\u9082\u9005\u662f\u5426\u641e\u9519\u4e86\u4ec0\u4e48</p> <p>\u4f2a\u604b</p> <p>\u987a\u5176\u81ea\u7136\u7684\u65e5\u5b50</p> <p>\u522b\u5f53\u6b27\u5c3c\u9171\u4e86</p> <p>\u5982\u679c\u6709\u59b9\u59b9\u5c31\u597d\u4e86</p> <p>\u8d5b\u535a\u670b\u514b</p> <p>\u6076\u9b54\u9ad8\u6821</p> <p>\u5bb6\u6709\u5973\u53cb</p> <p>\u79df\u754c\u5973\u53cb</p> <p>\u51fa\u5305\u738b\u5973</p> <p>\u7389\u5b50\u5e02\u573a</p> <p>\u8f7b\u97f3\u5c11\u5973</p> <p>\u767e\u5723\u5973\u4e0e\u9ed1\u7267\u5e08</p> <p>\u7075\u80fd\u767e\u5206\u767e</p> <p>86\u4e0d\u5b58\u5728\u7684\u6218\u533a</p> <p>\u672b\u65e5\u65f6\u5728\u505a\u4ec0\u4e48\uff1f\u6709\u6ca1\u6709\u7a7a\uff1f\u53ef\u4ee5\u6765\u62ef\u6551\u5417\uff1f</p> <p>\u5bd2\u8749\u9e23\u6ce3\u4e4b\u65f6</p> <p>\u4e00\u5468\u7684\u670b\u53cb</p> <p>overlord</p> <p>lycoris recoil</p> <p>engage kiss</p> <p>\u8d5b\u9a6c\u5a18</p> <p>fate</p> <p>\u516c\u53f8\u7684\u5c0f\u5c0f\u524d\u8f88</p> <p>\u77f3\u7eaa\u5143</p> <p>\u6697\u6740\u6559\u5ba4</p> <p>\u9b54\u6cd5\u5c11\u5973\u5c0f\u5706</p> <p>\u51c9\u5bab\u6625\u65e5\u7684\u5fe7\u90c1</p> <p>jojo</p> <p>\u5173\u4e8e\u524d\u8f88\u5f88\u70e6\u4eba\u7684\u4e8b</p> <p>\u95f4\u8c0d\u8fc7\u5bb6\u5bb6</p> <p>\u51b0\u6d77\u6218\u8bb0</p> <p>\u9ec4\u91d1\u795e\u5a01</p> <p>\u9f50\u6728\u6960\u96c4\u7684\u707e\u96be</p> <p>\u5996\u7cbe\u7684\u5c3e\u5df4</p> <p>\u5bb6\u5ead\u6559\u5e08</p> <p>\u5f02\u4e16\u754c\u8ff7\u5bab\u5f00\u540e\u5bab</p> <p>\u76f8\u548c\u4e4b\u7269</p> <p>\u544a\u767d\u5b9e\u884c\u59d4\u5458\u4f1a</p> <p>\u6211\u88ab\u9010\u51fa\u961f\u4f0d\u540e\u8fc7\u4e0a\u6162\u751f\u6d3b</p> <p>BEASTARS</p> <p>\u6211\u63a8\u7684\u5b69\u5b50</p> <p>\u673a\u52a8\u6218\u58eb\u9ad8\u8fbe\uff1a\u6c34\u661f\u7684\u9b54\u5973</p> <p>SSSS\u7535\u673a\u738b</p> <p>\u72fc\u4e0e\u9999\u8f9b\u6599</p> <p>\u5b87\u5d0e\u5b66\u59b9\u60f3\u8981\u73a9</p> <p>odd taxis</p> <p>\u5947\u86cb\u7269\u8bed</p> <p>\u4e45\u4fdd\u540c\u5b66</p> <p>\u963f\u6ce2\u8fde</p> <p>\u53e4\u89c1\u540c\u5b66\u6709\u4ea4\u6d41\u969c\u788d\u75c7</p> <p>\u5f0f\u5b88\u540c\u5b66\u4e0d\u6b62\u53ef\u7231</p> <p>\u821e\u52a8\u9752\u6625</p> <p>\u660e\u65e5\u9171\u7684\u6c34\u624b\u670d</p> <p>lovelive</p> <p>banG dream</p> <p>\u673a\u52a8\u6218\u58eb\u9ad8\u8fbe \u94c1\u8840\u7684\u5965\u5c14\u82ac\u65af</p> <p>megalobox</p> <p>vivi\u8424\u77f3\u773c\u4e4b\u6b4c</p> <p>\u5168\u5458\u6076\u7389</p> <p>\u6211\u7acb\u4e8e\u767e\u4e07\u751f\u547d\u4e4b\u4e0a</p> <p>\u4e1c\u4eac\u5c0f\u5403\u8d27</p> <p>\u604b\u7231\u5c0f\u884c\u661f</p> <p>\u5076\u50cf\u5927\u5e08</p> <p>\u5728\u4e0b\u5742\u672c\u6709\u4f55\u8d35\u5e72</p> <p>\u5243\u987b</p> <p>\u66f4\u8863\u4eba\u5076\u5760\u5165\u7231\u6cb3</p> <p>\u58f0\u4e4b\u5f62</p> <p>\u57c3\u7f57\u8292\u963f\u8001\u5e08</p> <p>\u5723\u8bde\u4e4b\u543b</p> <p>www\u8ff7\u7cca\u9910\u5385</p> <p>3\u6708\u7684\u72ee\u5b50</p> <p>\u6211\u7684\u524d\u5973\u53cb\u662f\u7ee7\u6bcd\u7684\u62d6\u6cb9\u74f6</p> <p>16bit\u7684\u611f\u52a8</p> <p>\u6e38\u620f\u4e09\u4eba\u5a18</p> <p>\u4ffa\u7269\u8bed</p> <p>\u5973\u53cb\u6210\u53cc</p> <p>\u6211\u4eec\u7684\u91cd\u7f6e\u4eba\u751f</p> <p>\u52c7\u8005\u8fc7\u5206\u614e\u91cd</p> <p>\u76fe\u4e4b\u52c7\u8005\u6210\u540d\u5f55</p> <p>\u4f60\u597d\u4e16\u754c</p> <p>\u5973\u795e\u5bbf\u820d\u7684\u7ba1\u7406\u5458</p> <p>\u5065\u8eab\u5c11\u5973</p> <p>\u6211\u4eec\u65e0\u6cd5\u4e00\u8d77\u5b66\u4e60</p> <p>\u5e78\u8fd0\u661f</p> <p>\u8299\u8389\u83b2</p> <p>\u5438\u8840\u59ec</p> <p>\u7ec8\u7ed3\u7684\u70bd\u5929\u4f7f</p> <p>\u8bf7\u95ee\u4f60\u4eca\u5929\u8981\u6765\u70b9\u5154\u5b50\u5417</p> <p>\u901a\u5f80\u590f\u5929\u7684\u96a7\u9053\uff0c\u662f\u518d\u89c1\u7684\u51fa\u53e3</p> <p>\u5347\u8d77\u7684\u70df\u82b1\u4ece\u4e0b\u9762\u770b\u8fd8\u662f\u4ece\u4fa7\u9762\u770b</p> <p>\u9752\u9171\u4e0d\u80fd\u5b66\u4e60</p> <p>\u5c11\u5973\u6b4c\u5267</p> <p>\u597d\u60f3\u544a\u8bc9\u4f60</p> <p>\u5973\u795e\u9732\u5929\u5496\u5561\u5385</p> <p>\u53cd\u53db\u7684\u9c81\u8def\u4fee</p> <p>\u4e09\u4eba\u884c\u5fc5\u6709\u6211\u59b9</p> <p>\u5723\u5251\u5b66\u9662\u7684\u9b54\u6cd5\u4f7f</p>"},{"location":"my%20past/python/Bongo%20Cat/","title":"Python Bongo Cat","text":""},{"location":"my%20past/python/Bongo%20Cat/#1","title":"1.\u952e\u76d8\u76d1\u542c","text":"<p>\u5982\u679c\u4f7f\u7528\\(Pygame\\)\u7684\u952e\u76d8\u4e8b\u4ef6\uff0c\u5c31\u53ea\u6709\u5728\u9f20\u6807\u70b9\u8fdb\u7a97\u53e3\u65f6\uff0c\u7a0b\u5e8f\u624d\u80fd\u63a5\u6536\u5230\u952e\u76d8\u8f93\u5165\uff0c\u5982\u679c\u6b64\u65f6\u4f60\u6b63\u5728\u7528\u5176\u4ed6\u8f6f\u4ef6\uff0c\u90a3\u4e48\u7a0b\u5e8f\u65e0\u6cd5\u63a5\u6536\u5230\u952e\u76d8\u4fe1\u53f7\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u8981\u6539\u7528\u540e\u53f0\u76d1\u542c\uff0c\u76d1\u542c\u952e\u76d8\u7684\u4e00\u4e3e\u4e00\u52a8\u3002~~(\u8fd9tm\u4e0d\u662f\u75c5\u6bd2\u5417)~~</p> <p>\u56e0\u6b64\u6211\u4eec\u4f7f\u7528\\(pynput\\)\u5e93\u3002</p> <p><pre><code>from pynput import keyboard\nfrom pynput import mouse\n\n\ndef listen_key_block():  \n    with keyboard.Listener(\n            on_press=on_press, on_release=on_release) as listener:\n        listener.join()  # \u52a0\u5165\u7ebf\u7a0b\u6c60\uff0c\u963b\u585e\u5199\u6cd5\n\n\ndef listen_key_nblock():  # \u53ef\u4ee5\u548c\u5176\u4ed6\u51fd\u6570\u5e76\u884c\u8fd0\u884c\n    listener = keyboard.Listener(\n        on_press=on_press, on_release=on_release\n    )\n    listener.start()  # \u542f\u52a8\u7ebf\u7a0b\n\nlisten_key_nblock()\nwhile True:\n    pass\n</code></pre> \u6ce8\u610f\u7b2c\u4e00\u79cd\u963b\u585e\u5199\u6cd5\u7684\u610f\u601d\u662f\u963b\u585e\u4e3b\u7ebf\u7a0b\uff0c\u76f4\u5230\u5f53\u524d\u5b50\u7ebf\u7a0b\u8fd0\u884c\u5b8c\u6bd5\u3002\u6240\u4ee5\u5b83\u4e0d\u80fd\u4e0e\u5176\u4ed6\u7a0b\u5e8f\u5e76\u884c\u3002</p> <p>\u800c\u7b2c\u4e8c\u79cd\u5199\u6cd5\u53ef\u4ee5\u89e3\u51b3\u8fd9\u4e2a\u95ee\u9898,\u5c31\u662f\u8981\u52a0\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u7ef4\u6301\u7a0b\u5e8f\u7684\u6267\u884c\u3002</p> <p>\u6240\u4ee5\uff0c\u67d0\u79cd\u7a0b\u5ea6\u4e0a\u6765\u8bf4\uff0c\u963b\u585e\u5199\u6cd5\u4e5f\u7b97\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\u3002</p>"},{"location":"my%20past/python/Bongo%20Cat/#2","title":"2.\u7a97\u53e3\u521b\u5efa &amp; \u7ed8\u56fe","text":"<p>\u4f7f\u7528\\(Pygame\\)\u5373\u53ef\u521b\u5efa\u4efb\u610f\u5927\u5c0f\u7684\u7a97\u53e3\uff0c\u5e76\u5728\u5de6\u4e0a\u89d2\u7ed8\u5236\u56fe\u7247\u3002</p> <p><pre><code># canvas.py\n\nimport pygame as pg\n\nclass Background():\n    def __init__(self, screen):\n        self.screen = screen\n        self.image = pg.image.load('images/bongo_cat.png')# \u521d\u59cb\u5316\u5b9a\u4e49\u4e3a\u62ac\u8d77\u624b\u7684\u56fe\u7247\n        self.rect = self.image.get_rect()  # \u83b7\u53d6\u77e9\u5f62\n        self.rect.x = 0  # \u56fa\u5b9a\u5750\u6807\u4e3a\u5de6\u4e0a\u89d2\n        self.rect.y = 0\n\n    def draw(self, image):\n        self.image = pg.image.load(image)  # \u52a0\u8f7d\u56fe\u7247\n        self.screen.blit(self.image, self.rect)  # \u7ed8\u56fe\n</code></pre> <pre><code># bongo_cat.py\nimport pygame as pg\nimport sys\nfrom canvas import Background\n\n\ndef run_game():\n    interval = 0.03\n    pg.init()\n    screen = pg.display.set_mode((300, 177))\n    pg.display.set_caption('bongo_cat')\n    bgc = (230, 230, 230)\n    bg = Background(screen)\n    while True:\n        for event in pg.event.get():\n            if event.type == pg.QUIT:  # \u68c0\u6d4b\u53f3\u4e0a\u89d2\u9f20\u6807\u70b9\u51fb\u9000\u51fa\u4e8b\u4ef6\n                sys.exit()\n        screen.fill(bgc)  # \u80cc\u666f\u8272\n        bg.draw('images/bongo_cat.png')\n        pg.display.flip()  # \u66f4\u65b0\u5f53\u524d\u56fe\u5c42\n        time.sleep(interval)  # \u65f6\u95f4\u95f4\u9694\uff0c\u5373\u5e27\u7387\n\n\nrun_game()\n</code></pre></p>"},{"location":"my%20past/python/Bongo%20Cat/#3","title":"3.\u72b6\u6001\u5207\u6362","text":"<p>\u5f53\u70b9\u51fb\u952e\u76d8\u65f6\uff0c\\(pynput\\)\u7684\\(listener\\)\u4f1a\u68c0\u6d4b\u5230\u53c2\u6570\\(key\\)\uff0c\u91cc\u9762\u5305\u542b\u4e86\u4f60\u6309\u4e86\u54ea\u4e2a\u952e\u3002\u6240\u4ee5\u53ef\u4ee5\u7528\u4e00\u4e2a\u5217\u8868\u5b58\u50a8\u4e0b\u5b57\u7b26\u4e32\\(keys\\),\u5176\u4e2d\\(keys = str(key)\\)\u3002</p> <p>\u8fdb\u4e00\u6b65\u5730\uff0c\u6211\u4eec\u7528\u4e00\u4e2a\u5b57\u5178\u5b58\u50a8\u4e03\u4e2a\u6309\u952e\u5728\u4e00\u4e2a\u65f6\u95f4\u95f4\u9694\u5185\u5bf9\u5e94\u7684\u70b9\u51fb\u6b21\u6570\uff0c\u6bcf\u4e2a\u95f4\u9694\u7ed3\u675f\u540e\u6e05\u96f6\u3002</p> <p>\u4f46\u662f\u6709\u4e2a\u95ee\u9898\uff0c\u952e\u76d8\u7684\u8f93\u5165\u662f\uff0c\u5148\u63a5\u53d7\u4e00\u6b21\\(on_press\\)\u4e8b\u4ef6\uff0c\u5982\u679c\u4e00\u6bb5\u65f6\u95f4\u4e0d\u677e\u624b\uff0c\u624d\u4f1a\u8fde\u7eed\u63a5\u53d7\\(on_press\\)\u3002\u8fd9\u5c31\u5bfc\u81f4\u6bcf\u6b21\u6309\u4e0b\u952e\u76d8\uff0c\u5c0f\u732b\u7684\u624b\u90fd\u4f1a\u5148\u95ea\u4e00\u4e0b\uff0c\u624d\u4f1a\u6301\u7eed\u6309\u4e0b\uff0c\u5f88\u4e0d\u6d41\u7545\u3002</p> <p>\u6240\u4ee5\uff0c\u6211\u4eec\u6539\u6210\\(on_release\\)\u51fa\u53d1\u540e\u518d\u5c06\u5b57\u5178\u4e2d\u5bf9\u5e94\u7684\u6309\u952e\u7684\u503c\u6e05\u96f6\u3002\u8fd9\u6837\u753b\u9762\u4f1a\u6bd4\u8f83\u6d41\u7545\u3002</p> <p>\u800c\u6240\u6709\u56fe\u7247\u548c\u8fd9\u4e2a\u5b57\u5178\u90fd\u5b58\u50a8\u5728\u4e00\u4e2a\\(tmp\\)\u6587\u4ef6\u4e2d\uff0c\u65b9\u4fbf\u67e5\u8868\u3002</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u7684\u7a0b\u5e8f\u5c31\u5b8c\u6210\u4e86\u3002 <pre><code>#image_tmp.py\nimage = 'images/bongo_cat.png'\nbc = 'images/bongo_cat.png'\nbc_0 = 'images/bongo_cat_0.png'\nbc_1 = 'images/bongo_cat_1.png'\nbc_2 = 'images/bongo_cat_2.png'\nbc_d = 'images/bongo_cat_down.png'\nbc_u = 'images/bongo_cat_up.png'\nbc_r = 'images/bongo_cat_right.png'\nbc_l = 'images/bongo_cat_left.png'\nbc_R = 'images/bongo_cat_r.png'\nbc_s = 'images/bongo_cat_shift.png'\nbc_z = 'images/bongo_cat_z.png'\nbc_ds = 'images/bongo_cat_down_shift.png'\nbc_us = 'images/bongo_cat_up_shift.png'\nbc_ls = 'images/bongo_cat_left_shift.png'\nbc_rs = 'images/bongo_cat_right_shift.png'\nbc_dz = 'images/bongo_cat_down_z.png'\nbc_uz = 'images/bongo_cat_up_z.png'\nbc_lz = 'images/bongo_cat_left_z.png'\nbc_rz = 'images/bongo_cat_right_z.png'\nbc_dR = 'images/bongo_cat_down_r.png'\nbc_uR = 'images/bongo_cat_up_r.png'\nbc_lR = 'images/bongo_cat_left_r.png'\nbc_rR = 'images/bongo_cat_right_r.png'\n\nBC = [[bc,bc_l,bc_r,bc_u,bc_d],\n      [bc_R,bc_lR,bc_rR,bc_uR,bc_dR],\n      [bc_z,bc_lz,bc_rz,bc_uz,bc_dz],\n      [bc_s,bc_ls,bc_rs,bc_us,bc_ds]]\ntmp_0 = {'z': 0, 'R': 0, 's': 0, 'l': 0, 'r': 0, 'd': 0, 'u': 0}\ntmp = {'z': 0, 'R': 0, 's': 0, 'l': 0, 'r': 0, 'd': 0, 'u': 0}\n\ntypen = 0\ntypem = 0\n</code></pre> <pre><code>#canvas.py\n\nimport pygame as pg\n\n\nclass Background():\n    def __init__(self, screen):\n        self.screen = screen\n        self.image = pg.image.load('images_0/bongo_cat.png')\n        self.rect = self.image.get_rect()\n        #print(self.rect)\n        #self.screen_rect = screen.get_rect()\n        self.rect.x = 0\n        self.rect.y = 0\n\n    def draw(self, image):\n        self.image = pg.image.load(image)\n        self.screen.blit(self.image, self.rect)\n</code></pre></p> <p><pre><code>#listener.py\nfrom pynput import keyboard\nfrom pynput import mouse\nimport image_tmp as imt\nimport time\n\n\ndef on_press(key):\n    keys = str(key)\n    if keys == 'Key.left':\n        imt.tmp['l'] += 1\n    elif keys == 'Key.right':\n        imt.tmp['r'] += 1\n    elif keys == 'Key.down':\n        imt.tmp['d'] += 1\n    elif keys == 'Key.up':\n        imt.tmp['u'] += 1\n    elif keys == 'Key.shift':\n        imt.tmp['s'] += 1\n    elif keys == \"'z'\":\n        imt.tmp['z'] += 1\n    elif keys == \"'r'\":\n        imt.tmp['R'] += 1\n\n\ndef on_release(key):\n    keys = str(key)\n    if keys == 'Key.left':\n        imt.tmp['l'] = 0\n    elif keys == 'Key.right':\n        imt.tmp['r'] = 0\n    elif keys == 'Key.down':\n        imt.tmp['d'] = 0\n    elif keys == 'Key.up':\n        imt.tmp['u'] = 0\n    elif keys == 'Key.shift':\n        imt.tmp['s'] = 0\n    elif keys == \"'z'\":\n        imt.tmp['z'] = 0\n    elif keys == \"'r'\":\n        imt.tmp['R'] = 0\n\n\ndef run_lsn():\n    maxn = 0\n    maxm = 0\n    imt.typen = 0\n    imt.typem = 0\n    for key, value in imt.tmp.items():\n        if key == 'r' or key == 'l' or key == 'u' or key == 'd':\n            maxn = max(maxn, value)\n        else:\n            maxm = max(maxm, value)\n    for key, value in imt.tmp.items():\n        if key == 'l' and value &gt;= maxn:\n            if maxn &gt; 0:\n                imt.typen = 1\n        elif key == 'r' and value &gt;= maxn:\n            if maxn &gt; 0:\n                imt.typen = 2\n        elif key == 'u' and value &gt;= maxn:\n            if maxn &gt; 0:\n                imt.typen = 3\n        elif key == 'd' and value &gt;= maxn:\n            if maxn &gt; 0:\n                imt.typen = 4\n        if key == 'R' and value &gt;= maxm:\n            if maxm &gt; 0:\n                imt.typem = 1\n        elif key == 'z' and value &gt;= maxm:\n            if maxm &gt; 0:\n                imt.typem = 2\n        elif key == 's' and value &gt;= maxm:\n            if maxm &gt; 0:\n                imt.typem = 3\n    #print(imt.typen, imt.typem)\n    #imt.tmp = imt.tmp_0.copy()\n\n\ndef on_move(x, y):\n    print('move to', x, y)\n\n\ndef on_click(x, y, button, pressed):\n    print('click at', x, y, button, pressed)\n\n\ndef on_scroll(x, y, dx, dy):\n    print('scroll at', x, y, 'by', dx, dy)\n\n\n# \u76d1\u542c\u5199\u6cd51\ndef listen_key_block():  # \u76f8\u5f53\u4e8e\u4e00\u4e2a\u65e0\u7a77\u5faa\u73af\uff0c\u6240\u4ee5\u4e0d\u80fd\u5957\u5728while\u5faa\u73af\u91cc\n    with keyboard.Listener(\n            on_press=on_press, on_release=on_release) as listener:\n        listener.join()  # \u52a0\u5165\u7ebf\u7a0b\u6c60\uff0c\u963b\u585e\u5199\u6cd5\n\n\ndef listen_mouse_block():\n    with mouse.Listener(\n            on_move=None, on_click=on_click, on_scroll=on_scroll) as listener:\n        listener.join()\n\n\n# \u76d1\u542c\u5199\u6cd52\ndef listen_key_nblock():  # \u53ef\u4ee5\u548c\u5176\u4ed6\u51fd\u6570\u5e76\u884c\u8fd0\u884c\n    listener = keyboard.Listener(\n        on_press=on_press, on_release=on_release\n    )\n    listener.start()  # \u542f\u52a8\u7ebf\u7a0b\n\n\ndef listen_mouse_nblock():\n    listener = mouse.Listener(\n        on_move=None,  # \u56e0\u4e3aon_move\u592a\u591a\u8f93\u51fa\u4e86\uff0c\u5c31\u4e0d\u653e\u8fdb\u6765\u4e86\uff0c\u6709\u5174\u8da3\u53ef\u4ee5\u52a0\u5165\n        on_click=on_click,\n        on_scroll=on_scroll\n    )\n    listener.start()\n\n\"\"\"\nimt.tmp = imt.tmp_0.copy()\nlisten_key_nblock()\nwhile True:\n    run_lsn()\n    time.sleep(1)\n\"\"\"\n\n\n\"\"\"\nKey.right\nKey.left\nKey.up\nKey.down\n'z'\nKey.shift\n'r'\n\"\"\"\n</code></pre> <pre><code>#bongo_cat.py\nimport pygame as pg\nimport sys\nfrom canvas import Background\nimport listener as lsn\nimport image_tmp as imt\nimport time\n\n\ndef init():\n    imt.tmp = imt.tmp_0.copy()\n\n\ndef run_game():\n    interval = 0.03\n    pg.init()\n    screen = pg.display.set_mode((300, 177))\n    pg.display.set_caption('bongo_cat')\n    bgc = (230, 230, 230)\n    bg = Background(screen)\n    init()\n    lsn.listen_key_nblock()\n    while True:\n        for event in pg.event.get():\n            if event.type == pg.QUIT:\n                sys.exit()\n        lsn.run_lsn()\n        screen.fill(bgc)\n        bg.draw(imt.BC[imt.typem][imt.typen])\n        pg.display.flip()\n        time.sleep(interval)\n\n\nrun_game()\n</code></pre></p>"},{"location":"my%20past/python/Bongo%20Cat/#4","title":"4.\u603b\u7ed3 &amp; \u4e00\u4e9b\u5751\u70b9","text":"<ol> <li> <p>\u4e00\u5f00\u59cb\u4e3b\u5faa\u73af\u6ca1\u6709\\(time.sleep()\\),\u5bfc\u81f4\\(cpu\\)\u5360\u7528\\(20\\%\\)</p> </li> <li> <p>\u5199\\(listener.py\\)\u65f6\u88abwindows\u5b89\u5168\u4e2d\u5fc3\u5f53\u6210\u75c5\u6bd2\u9694\u79bb\u4e86\u5c31nm\u79bb\u8c31</p> </li> <li> <p>\u6700\u540e\u7528\\(Pyinstaller\\)\u5c01\u88c5\u6210\u4e86\\(.exe\\),\u4e0d\u8fc7\u56fe\u7247\u6587\u4ef6\u8981\u548c\\(.exe\\)\u653e\u5728\u540c\u4e00\u6587\u4ef6\u76ee\u5f55\u4e0b\u3002</p> </li> </ol> <pre><code>Pyinstaller -F -w -i bongo_cat.ico bongo_cat.py\n</code></pre> <ol> <li>\u540e\u671f\u6253\u7b97\u628a\u8fd9\u4e2a\u653e\u5230\\(Github\\)\u4e0a\u9493\u9c7c\uff0c~~\u770b\u6709\u6ca1\u6709\u4eba\u7ed9stars~~</li> </ol>"},{"location":"my%20past/python/pokemon/","title":"Python Pokemon\u81ea\u52a8\u5237\u602a","text":"<p>\u82b1\u4e86\u4e00\u5929\u65f6\u95f4\u5199\u7684\\(_{\u5c0f\u7a0b\u5e8f}\\), \u5206\u6210\u4e86\u4e09\u4e2a\u90e8\u5206</p>"},{"location":"my%20past/python/pokemon/#1","title":"1.\u653b\u51fb","text":"<p>\u8bbe\u7f6e\u95f4\u9694\\(0.4\\)\u79d2\u6309\u4e00\u6b21\\(j\\)(\u81ea\u5e26\u8bb2\u7a76\u56f4\u5dfe\u6548\u679c)</p> <pre><code>import pyautogui\nimport datetime\n\ncnt = 0\na = datetime.datetime.now().timestamp()\nend = a\nt = a\n\nwhile a-end &lt; 60:\n    if a-t &gt;= 0.4:\n        t = a\n        pyautogui.keyUp('j')\n        pyautogui.keyDown('j')\n    a = datetime.datetime.now().timestamp()\n</code></pre>"},{"location":"my%20past/python/pokemon/#2","title":"2.\u79fb\u52a8","text":"<p>\u95f4\u9694\u4e00\u79d2\u6362\u4e00\u6b21\u65b9\u5411\uff0c\u53ef\u4ee5\u662f\u4e0a\u4e0b\u79fb\u52a8\uff0c\u4e5f\u53ef\u4ee5\u5de6\u53f3\u3002</p> <pre><code>import pyautogui\nimport datetime\n\n\ncnt=0\na = datetime.datetime.now().timestamp()\nend = a\nt = a\n\nwhile a-end&lt;60:\n    if a-t&gt;=1:\n        t=a\n        if cnt%2==0:\n            pyautogui.keyUp('a')\n            pyautogui.keyDown('d')\n        else:\n            pyautogui.keyUp('d')\n            pyautogui.keyDown('a')\n\n        cnt=(cnt+1)%2\n    a = datetime.datetime.now().timestamp()\n</code></pre>"},{"location":"my%20past/python/pokemon/#3","title":"3.\u68c0\u6d4b\u989c\u8272\u5e76\u8f6c\u6362\u6a21\u5f0f","text":"<p>\u5c06\u6e38\u620f\u7a97\u53e3\u653e\u5728\u53f3\u4e0a\u89d2\u540e\uff0c\u6839\u636e\u5bf9\u8bdd\u6846\u5728\u6218\u6597\u65f6\u53d8\u767d\uff0c\u6218\u6597\u7ed3\u675f\u65f6\u53d8\u9ed1\u7684\u7279\u70b9\uff0c\u5728\u5b9a\u70b9\u8bbe\u7f6e\u989c\u8272\u68c0\u6d4b</p> <pre><code>import pyautogui as pag\nimport datetime\nfrom ctypes import *\n\ndef get_color(x, y):\n    gdi32 = windll.gdi32\n    user32 = windll.user32\n    hdc = user32.GetDC(None)  # \u83b7\u53d6\u989c\u8272\u503c\n    pixel = gdi32.GetPixel(hdc, x, y)  # \u63d0\u53d6RGB\u503c\n    r = pixel &amp; 0x0000ff\n    g = (pixel &amp; 0x00ff00) &gt;&gt; 8\n    b = pixel &gt;&gt; 16\n    return [r, g, b]\n\n#[41, 41, 57]\n\nx = 202\ny = 234\ncnt = 0\na = datetime.datetime.now().timestamp()\ni = 1\nt = a\ntimer = int(input(\"total time(s)\"))\ntimer = timer\nstate = \"walk\"\npag.moveTo(100, 200)\nwhile i &lt; timer:\n    if a-t &gt;= 0.2:\n        # x, y = pag.position()\n        RGB = get_color(x, y)\n        if RGB == [255, 255, 255] and state == \"walk\" :\n            state = \"fight\"\n            print(state)\n        elif RGB == [0, 0, 0] and state == \"fight\":\n            state = \"walk\"\n            print(state)\n        t = a\n        i += 1\n        #if i % 5 == 0:\n            #print(i/5)\n            #print(\"s\")\n    a = datetime.datetime.now().timestamp()\n</code></pre> <p>\u6700\u540e\u5408\u5728\u4e00\u8d77\u5c31\u884c\u4e86</p> <pre><code>import pyautogui as pag\nimport datetime\nfrom ctypes import *\n\ncnt = 0\nx = 202\ny = 234\na = datetime.datetime.now().timestamp()\nT3 = a\nT2 = a\nT1 = a\nstart = a\n\n\ndef get_color(_x, _y):\n    gdi32 = windll.gdi32\n    user32 = windll.user32\n    hdc = user32.GetDC(None)  # \u83b7\u53d6\u989c\u8272\u503c\n    pixel = gdi32.GetPixel(hdc, _x, _y)  # \u63d0\u53d6RGB\u503c\n    r = pixel &amp; 0x0000ff\n    g = (pixel &amp; 0x00ff00) &gt;&gt; 8\n    b = pixel &gt;&gt; 16\n    return [r, g, b]\n\n\ndef walk(_t2, _cnt):\n    if a - _t2 &gt;= 1.0:\n        _t2 = a\n        if state == \"walk\":\n            if _cnt % 2 == 0:\n                pag.keyUp('w')\n                pag.keyDown('s')\n            else:\n                pag.keyUp('s')\n                pag.keyDown('w')\n            _cnt = (_cnt + 1) % 2\n    return [_t2, _cnt]\n\n\ndef fight(_t3):\n    if a - _t3 &gt;= 0.4:\n        _t3 = a\n        if state == \"fight\":\n            pag.keyUp('j')\n            pag.keyDown('j')\n    return _t3\n\n\ndef get_state(_t1, _state):\n    if a - _t1 &gt;= 0.2:\n        _t1 = a\n        # x, y = pag.position()\n        RGB = get_color(x, y)\n        if RGB == [255, 255, 255] and _state == \"walk\":\n            _state = \"fight\"\n            print(_state)\n        elif RGB == [0, 0, 0] and _state == \"fight\":\n            _state = \"walk\"\n            print(_state)\n    return [_t1, _state]\n\n\ntimer = int(input(\"total time(s)\"))\ntimer = timer\nstate = \"walk\"\n\nwhile a - start &lt; timer:\n    if state == \"fight\":\n        cnt = 0\n    T1, state = get_state(T1, state)\n    T2, cnt = walk(T2, cnt)\n    T3 = fight(T3)\n    a = datetime.datetime.now().timestamp()\n</code></pre>"},{"location":"my%20past/python/pokemon/#_1","title":"\u5751\u70b9","text":"<p>\u4e00\u5f00\u59cb\u505a\u7684\u79fb\u52a8\uff0c\u53d1\u73b0\u53ef\u4ee5\u5728\\(Pycharm,Word,Google\\)\u8fd9\u4e9b\u8f6f\u4ef6\u91cc\u6253\u51fa\\(A,D\\),\u4f46\u662f\u5728\u6e38\u620f\u91cc\u548c\\(Dev C++\\)\u91cc\u4e0d\u884c\u3002</p> <p>\u540e\u6765\u4e00\u67e5\uff0c\u53ef\u80fd\u662f\u6ca1\u6709\u83b7\u5f97\u7ba1\u7406\u5458\u6743\u9650(\u6211\u8fd9\u8fa3\u9e21\u7535\u8111\u7684\u4f20\u7edf\u827a\u80fd)\uff0c\u4e8e\u662f\u4ee5\u7ba1\u7406\u5458\u8eab\u4efd\u8fd0\u884c\uff0c\u53ef\u4ee5\u63a7\u5236\\(Dev C++\\)\u4e86\uff0c\u4f46\u662f\u6e38\u620f\u8fd8\u662f\u4e0d\u884c\u3002</p> <p>\u6211\u4ee5\u4e3a\u662f\u952e\u76d8\u5b9e\u9645\u8f93\u5165\u4fe1\u53f7\u4e0e\u7a0b\u5e8f\u6a21\u62df\u4fe1\u53f7\u4e0d\u540c\u5bfc\u81f4\uff0c\u4e8e\u662f\u6362\u7528\u4e86\\(PyUserInput\\)(\u8d39\u4e86\u534a\u5929\u52b2\u641e\\(pip\\))\uff0c\u8fd8\u662f\u4e0d\u884c\u3002</p> <p>~~\u6b64\u65f6\uff0c\u6211\u4eec\u8003\u8651\u653e\u5f03~~</p> <p>\u6b64\u65f6\uff0c\u53ef\u80fd\u662f\u6a21\u62df\u5668\u7684\u539f\u56e0\uff0c\u53ea\u6709\u5b83\u65e0\u6cd5\u63a5\u53d7\u5b57\u7b26\u4fe1\u53f7\u3002</p> <p>\u5f00\u59cb\u7528\u7684\\(no\\$gba\\),\u540e\u6765\u6362\u7528\\(DeSmuME2\\)\u540e\uff0c\u5947\u8ff9\u53d1\u751f\u4e86\uff0c\u80fd\u79fb\u52a8\u4e86\uff01(~~no$gba\u662f\u4ec0\u4e48\u8fa3\u9e21\u6a21\u62df\u5668~~)</p> <p>\u81f3\u6b64\uff0c\u6211\u4eec\u5b8c\u6210\u4e86\u8fd9\u4e2a\u7a0b\u5e8f</p> <p>2022.5.31 update</p> <p>\u6211\u4eec\u53d1\u73b0\u4e0a\u8ff0\u7a0b\u5e8f\u7684\u8ba1\u7b97\u91cf\u6bd4\u8f83\u5927\uff0c\u5c31\u662f\u4e00\u79d2\u8ba1\u7b97\u4e86\u8bb8\u591a\u6b21\u65f6\u95f4\u3002\u5176\u5b9e\u6211\u4eec\u53ea\u9700\u8981\u81f3\u591a\u8ba1\u7b975\u6b21\u5373\u53ef\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u7528<code>time.sleep(0.2)</code>\u6765\u66f4\u6539<code>while</code>\u5faa\u73af\uff0c\u8fbe\u5230\u51cf\u5c11\u8ba1\u7b97\u6b21\u6570\u7684\u76ee\u7684\u3002</p> <pre><code>import time\nimport pyautogui as pag\nimport datetime\nfrom ctypes import *\ncnt = 0\ntimecnt = 0\nx = 202\ny = 234\n\n\ndef get_color(_x, _y):\n    gdi32 = windll.gdi32\n    user32 = windll.user32\n    hdc = user32.GetDC(None)  # \u83b7\u53d6\u989c\u8272\u503c\n    pixel = gdi32.GetPixel(hdc, _x, _y)  # \u63d0\u53d6RGB\u503c\n    r = pixel &amp; 0x0000ff\n    g = (pixel &amp; 0x00ff00) &gt;&gt; 8\n    b = pixel &gt;&gt; 16\n    return [r, g, b]\n\n\ndef walk(c, s):\n    if c % 5 == 0:\n        if state == \"walk\":\n            if s % 2 == 0:\n                pag.keyUp('w')\n                pag.keyDown('s')\n            else:\n                pag.keyUp('s')\n                pag.keyDown('w')\n            s = (s + 1) % 2\n    return s\n\n\ndef fight(c):\n    if c % 2 == 0:\n        if state == \"fight\":\n            pag.keyUp('j')\n            pag.keyDown('j')\n\n\ndef get_state(_state):\n    # x, y = pag.position()\n    RGB = get_color(x, y)\n    if RGB == [255, 255, 255] and _state == \"walk\":\n        _state = \"fight\"\n        print(_state)\n    elif RGB == [0, 0, 0] and _state == \"fight\":\n        _state = \"walk\"\n        print(_state)\n    return _state\n\n\ntimer = int(input(\"total time(s)\"))\nstate = \"walk\"\n\n\nwhile timecnt &lt; (timer * 5):\n    if state == \"fight\":\n        cnt = 0\n    state = get_state(state)\n    cnt = walk(timecnt, cnt)\n    fight(timecnt)\n    timecnt += 1\n    time.sleep(0.2)\n</code></pre> <p>\u8fd9\u6837\u53ef\u4ee5\u5c06\\(cpu\\)\u8ba1\u7b97\u91cf\u51cf\u5c11$ \\%5 $\u5de6\u53f3\u3002</p>"},{"location":"my%20past/python/spider/","title":"python \u722c\u866b\u603b\u7ed3","text":"<p>\u722c\u866b\u4e3b\u8981\u9488\u5bf9b\u7ad9\u7684\u8d44\u6e90\u83b7\u53d6\uff0c\u56e0\u4e3ab\u7ad9\u7684\u53cd\u722c\u673a\u5236\u8fd8\u662f\u53ef\u4ee5\u7684</p>"},{"location":"my%20past/python/spider/#b","title":"\u4e00.b\u7ad9\u56fe\u7247\u7684\u83b7\u53d6","text":""},{"location":"my%20past/python/spider/#1img","title":"1.\u901a\u8fc7\u9759\u6001\u7f51\u9875img\u6807\u7b7e\u83b7\u53d6","text":"<p>\u7b2c\u4e00\u79cd\u65b9\u6cd5\u662f\uff0c\u4f7f\u7528\\(requests\\)\u6a21\u5757\u83b7\u53d6b\u7ad9\u7f51\u9875\u6e90\u4ee3\u7801\uff0c\u901a\u8fc7\u6b63\u5219\u8868\u8fbe\u5f0f\u89e3\u6790\u51fa\u94fe\u63a5(\\(img\\)\u6807\u7b7e\u7684\u89e3\u6790)\uff0c\u518d\u8bbf\u95ee\u8fd9\u4e9b\u94fe\u63a5\u8fdb\u884c\u56fe\u7247\u7684\u50a8\u5b58\u3002</p> <p>\u5b9e\u4f8b:b\u7ad9\u4e3b\u9875\u90e8\u5206\u9759\u6001\u56fe\u7247\u7684\u83b7\u53d6 <pre><code>import time\nimport requests\nimport re\nimport os\nfrom bs4 import BeautifulSoup\n\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                  '.5112.102 Safari/537.36 Edg/104.0.1293.63'\n}\n\n\ndef get_html(url_base):\n    response = requests.get(url_base, headers=headers)\n    html = response.text\n    return html\n\n\ndef get_url(html):\n    Img = re.compile(r'img.*src=\"(.*?)\"')\n    soup = BeautifulSoup(html, \"html.parser\")\n    data = []\n    for item in soup.find_all('img'):\n        item = str(item)\n        pic_list = re.findall(Img, item)\n        for t in pic_list:\n            data.append(t)\n    return data\n\n\ndef save_pic(data, lim):\n    cnt = 0\n    for i in data:\n        if not i.lower().startswith('https:'):\n            i = 'https:' + i\n        try:\n            img = requests.get(i)\n            byte = img.content\n            with open(\"image{}.jpg\".format(cnt), \"wb\") as f:\n                f.write(byte)\n            cnt += 1\n            print(\"downloaded:{}\".format(cnt))\n        except requests.exceptions.InvalidURL:\n            pass\n        time.sleep(0.25)\n        if cnt &gt;= lim:\n            break\n\n\ndef get_image(url_base, target_dir, pic_num):\n    if not os.path.exists(target_dir):\n        os.mkdir(target_dir)\n    html = get_html(url_base)\n    data = get_url(html)\n    os.chdir(target_dir)\n    print(\"target dir: \"+str(os.getcwd()))\n    save_pic(data, pic_num)\n\n\nif __name__ == '__main__':\n    url = r'https://www.bilibili.com/'   #input(\"\u8bf7\u8f93\u5165\u7f51\u5740:\")\n    dirt = r'C:\\Users\\Yimen\\Desktop\\bilibili\u4e3b\u9875_1'   #input(\"\u8bf7\u8f93\u5165\u76ee\u6807\u6587\u4ef6\u5939:\")\n    num = int(input(\"\u8bf7\u8f93\u5165\u60f3\u8981\u83b7\u53d6\u7684\u56fe\u7247\u6570\u91cf:\"))\n    get_image(url, dirt, num)\n</code></pre></p> <p>\u4e0d\u8fc7\uff0c\u8fd9\u79cd\u65b9\u6cd5\u53ea\u80fd\u83b7\u53d6b\u7ad9\u90e8\u5206\u7f51\u9875\u7684\u56fe\u7247\uff0c\u5176\u4ed6\u7f51\u9875\uff0c\u4f8b\u5982B\u7ad9\u4e3b\u9875\u7684\u56fe\u7247\u51e0\u4e4e\u90fd\u662f\u7528\\(js\\)\u6e32\u67d3\u51fa\u6765\u7684\uff0c\u5728\u9759\u6001\u7f51\u9875\u4e2d\u4e0d\u663e\u793a\u3002</p>"},{"location":"my%20past/python/spider/#2img","title":"2.\u901a\u8fc7\u52a8\u6001\u7f51\u9875img\u6807\u7b7e\u83b7\u53d6","text":"<p>\u56e0\u6b64\uff0c\u7b2c\u4e8c\u79cd\u65b9\u6cd5\u662f\u4f7f\u7528\\(seleium\\)\u83b7\u53d6\u5f53\u524d\u7f51\u9875\u7684\u52a8\u6001\u4ee3\u7801\uff0c\u518d\u83b7\u53d6\u94fe\u63a5\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u4e00\u5b9a\u80fd\u83b7\u53d6\u56fe\u7247\uff0c\u56e0\u4e3a\u4f60\u770b\u5230\u7684\u56fe\u7247\uff0c\u90fd\u5728\u52a8\u6001\u4ee3\u7801\u4e2d\uff0c\u800c\\(selenium\\)\u90fd\u80fd\u591f\u83b7\u53d6\u4e0b\u6765\u3002\u4f46\u662f\uff0c\\(selenium\\)\u9875\u53ea\u80fd\u83b7\u53d6\u5df2\u7ecf\u52a0\u8f7d\u7684\u56fe\u7247\uff0c\u56e0\u6b64\u8981\u81ea\u52a8\u8bbe\u7f6e\u5c06\u7f51\u9875\u4e0b\u79fb\u5230\u5e95\u90e8\uff0c\u5982\u679c\u60f3\u8981\u83b7\u53d6\u591a\u4e2a\u7f51\u9875\u7684\u56fe\u7247\uff0c\u8fd8\u9700\u8981\u8bbe\u7f6e\u7ffb\u9875\u3002\u5e76\u4e14\u901f\u5ea6\u4e5f\u4e0d\u5982\\(requests\\)\u5feb\u3002</p> <p>\u5b9e\u4f8b:\u83b7\u53d6b\u7ad9\u4e3b\u9875\u7684\u56fe\u7247 <pre><code># selenium_get_html.py\nfrom selenium import webdriver\nimport time\n\n\ndef get_html(url_base):\n    driver = webdriver.Edge()\n    driver.get(url_base)\n    for i in range(0, 10):\n        # \u63a7\u5236\u7f51\u9875\u5411\u4e0b\u6eda\u52a81000\u50cf\u7d20\u503c\n        driver.execute_script(\"window.scrollBy(0,1000)\")\n        time.sleep(1)\n    driver.encoding = 'UTF-8'\n    return driver.page_source\n\n\nif __name__ == '__main__':\n    url = r'https://www.bilibili.com/'\n</code></pre> <pre><code># selenium_get_image.py\n\nimport time\nimport requests\nimport re\nimport os\nfrom bs4 import BeautifulSoup\nimport selenium_get_html as sgh\n\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                  '.5112.102 Safari/537.36 Edg/104.0.1293.63'\n}\n\n\ndef get_html(url_base):\n    response = requests.get(url_base, headers=headers)\n    html = response.text\n    return html\n\n\ndef get_url(html):\n    Img = re.compile(r'img.*src=\"(.*?)\"')\n    soup = BeautifulSoup(html, \"html.parser\")\n    data = []\n    for item in soup.find_all('img'):\n        item = str(item)\n        pic_list = re.findall(Img, item)\n        for t in pic_list:\n            data.append(t)\n    return data\n\n\ndef save_pic(data, lim):\n    cnt = 0\n    for i in data:\n        if not i.lower().startswith('https:'):\n            i = 'https:' + i\n        try:\n            img = requests.get(i)\n            byte = img.content\n            with open(\"image{}.jpg\".format(cnt), \"wb\") as f:\n                f.write(byte)\n            cnt += 1\n            print(\"downloaded:{}\".format(cnt))\n        except requests.exceptions.InvalidURL:\n            pass\n        time.sleep(0.25)\n        if cnt &gt;= lim:\n            break\n\n\ndef get_image(url_base, target_dir, pic_num):\n    if not os.path.exists(target_dir):\n        os.mkdir(target_dir)\n    html = sgh.get_html(url_base)\n    data = get_url(html)\n    os.chdir(target_dir)\n    print(\"target dir: \"+str(os.getcwd()))\n    save_pic(data, pic_num)\n\n\nif __name__ == '__main__':\n    url = r'https://www.bilibili.com/'   #input(\"\u8bf7\u8f93\u5165\u7f51\u5740:\")\n    dirt = r'C:\\Users\\Yimen\\Desktop\\bilibili\u4e3b\u9875_1'   #input(\"\u8bf7\u8f93\u5165\u76ee\u6807\u6587\u4ef6\u5939:\")\n    num = int(input(\"\u8bf7\u8f93\u5165\u60f3\u8981\u83b7\u53d6\u7684\u56fe\u7247\u6570\u91cf:\"))\n    get_image(url, dirt, num)\n</code></pre></p>"},{"location":"my%20past/python/spider/#3","title":"3.\u901a\u8fc7\u5206\u6790\"\u7f51\u7edc\"\u6570\u636e","text":"<p>\u7b2c\u4e09\u79cd\u65b9\u6cd5\uff0c\u662f\u901a\u8fc7\\(F12\\)\u63a7\u5236\u53f0\"\u7f51\u7edc\"\u754c\u9762\u6279\u91cf\u83b7\u53d6\u6570\u636e\u6587\u4ef6\u7684\u94fe\u63a5\uff0c\u5728\u901a\u8fc7\u89e3\u6790\u8fd9\u4e9b\u6587\u4ef6\u7684\u6570\u636e\u6765\u83b7\u53d6\u56fe\u7247\u94fe\u63a5\uff0c\u8fdb\u800c\u83b7\u53d6\u56fe\u7247\u3002</p> <p>\u8fd9\u79cd\u65b9\u6cd5\u9700\u8981\u5145\u5206\u4e86\u89e3\u7f51\u7ad9\u4f20\u8f93\u4e86\u90a3\u4e9b\u6587\u4ef6\uff0c\u54ea\u4e2a\u6587\u4ef6\u4e2d\u6709\u6709\u7528\u7684\u6570\u636e\uff0c\u56e0\u6b64\u6bd4\u8f83\u70e6\uff0c\u4f46\u662f\u4e0d\u9700\u8981\u7528\\(selenium\\)\u4e5f\u53ef\u4ee5\u83b7\u53d6\u5927\u91cf\u56fe\u7247\u3002</p> <p>\u5b9e\u4f8b:\u83b7\u53d6b\u7ad9\u65b0\u756a\u699cTop200\u56fe\u7247</p> <p><pre><code>import requests\nimport json\nimport os\n\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                  '.5112.102 Safari/537.36 Edg/104.0.1293.63'\n}\n\ndirt = r'C:\\Users\\Yimen\\Desktop\\\u65b0\u756a\u699cTop200'\nfront_url = r'https://api.bilibili.com/pgc/season/index/result?season_version=-1&amp;spoken_language_type=-1&amp;area=-1' \\\n            r'&amp;is_finish=-1&amp;copyright=-1&amp;season_status=-1&amp;season_month=-1&amp;year=-1&amp;style_id=-1&amp;order=3&amp;st=1&amp;sort=0&amp;page='\nback_url = r'&amp;season_type=1&amp;pagesize=20&amp;type=1'\n\nif not os.path.exists(dirt):\n    os.mkdir(dirt)\n\n\ndef write_json(html, num):\n    _dirt = os.path.join(dirt, 'list{}.json'.format(num))\n    print('NO.' + str(num) + ' printed')\n    with open(_dirt, 'wb') as f:\n        f.write(html)\n\n\ndef get_json():\n    lst = []\n    for i in range(6, 11):\n        url = front_url + str(i) + back_url\n        try:\n            response = requests.get(url, headers=headers)\n            html = response.content.decode()\n            dic = json.loads(html)\n            lst.append(dic)\n            # write_json(html, i)\n        except requests.exceptions.InvalidURL:\n            pass\n    return lst\n\n\ndef save_pic(lst):\n    os.chdir(dirt)\n    num = 0\n    for dic in lst:\n        _lst = dic[\"data\"][\"list\"]\n        for _dic in _lst:\n            num += 1\n            pic_url = _dic[\"cover\"]\n            pic_name = _dic[\"title\"]  # + \"_\" + _dic[\"subTitle\"]\n            response = requests.get(pic_url, headers=headers)\n            pic_byte = response.content\n            pic_dirt = str(num) + '_' + pic_name + '.jpg'\n            print(pic_dirt + ' printed')\n            with open(pic_dirt, 'wb') as f:\n                f.write(pic_byte)\n\n\nif __name__ == '__main__':\n    save_pic(get_json())\n</code></pre> ~~\u8fd9\u4e2a\u5b9e\u4f8b\u6709\u70b9\u95ee\u9898\uff0c\u5c31\u662f\u5982\u679c\u65b0\u756a\u7684\u540d\u79f0\u4e2d\u542b\u6709\"\u5947\u7279\"\u7684\u7b26\u53f7\uff0c\u5c31\u4f1a\u62a5\u9519\uff0c\u4e0d\u8fc7\u4e0d\u663e\u793a\u65b0\u756a\u540d\u5b57\uff0c\u7528\u6570\u5b57\u5c31\u884c\u4e86\u3002~~</p>"},{"location":"my%20past/python/spider/#4","title":"4.\u901a\u8fc7\u5206\u6790\u6e90\u4ee3\u7801\u6570\u636e","text":"<p>b\u7ad9\u4e3b\u9875\u7684\u56fe\u7247\u8fd8\u6709\u4e00\u79cd\u83b7\u53d6\u65b9\u6cd5\uff0c\u5c31\u662f\u5c06\u6e90\u4ee3\u7801\u4e2d\u7684\\(script\\)\u6807\u7b7e\u4e2d\u7684\\(json\\)\u4e32\u53d6\u51fa\u6765\uff0c\u5206\u6790\u5176\u4e2d\u7684\u94fe\u63a5\u6765\u83b7\u53d6\u3002\u8fd9\u91cc\u4ee3\u7801\u7701\u7565\u3002</p>"},{"location":"my%20past/python/spider/#5","title":"5.\u603b\u7ed3","text":"<p>\u722c\u866b\u5171\u6709\u4e24\u79cd\u65b9\u6cd5\uff0c\u4e00\u79cd\u662f\u83b7\u53d6\u7f51\u9875\u6e90\u4ee3\u7801\u5e76\u901a\u8fc7\u89e3\u6790\u6807\u7b7e\u83b7\u53d6\u94fe\u63a5\uff1b\u4e00\u79cd\u662f\u901a\u8fc7\u5bf9\u7f51\u7edc\u4f20\u8f93\u7684\u6570\u636e\u8fdb\u884c\u5206\u6790\uff0c\u4ece\u4e2d\u627e\u5230\u89c4\u5f8b\u5e76\u83b7\u53d6\u6709\u7528\u7684\u94fe\u63a5\u3002\u83b7\u53d6\u7f51\u9875\u6e90\u4ee3\u7801\u6807\u7b7e\u53c8\u5206\u4e3a\u9759\u6001\u83b7\u53d6\u548c\u52a8\u6001\u83b7\u53d6\u3002\u5982\u679c\u7f51\u9875\u5b8c\u5168\u9759\u6001\uff0c\u65e0\\(js\\)\u6e32\u67d3\uff0c\u5c31\u53ef\u4ee5\u7528\\(requests\\)\u83b7\u53d6\u7f51\u9875\u6807\u7b7e\u3002\u5982\u679c\u7f51\u9875\u4e3a\u52a8\u6001\u52a0\u8f7d\uff0c\u5219\u9700\u8981\u7528\u5230\\(selenium\\)\u3002\u800c\u6570\u636e\u5206\u6790\u5982\u679c\u505a\u7684\u597d\uff0c\u90a3\u4e48\u52a8\u6001\u7f51\u9875\u4e5f\u53ef\u4ee5\u76f4\u63a5\u901a\u8fc7\\(requests\\)\u8bbf\u95ee\u94fe\u63a5\u3002</p>"},{"location":"my%20past/python/spider/#b_1","title":"\u4e8c.\u83b7\u53d6b\u7ad9\u5f39\u5e55","text":""},{"location":"my%20past/python/spider/#1","title":"1.\u52a8\u6001\u83b7\u53d6","text":"<p>\u901a\u8fc7\u89c2\u5bdf\u7f51\u9875\u6e90\u4ee3\u7801\uff0c\u6211\u4eec\u53d1\u73b0\u5f39\u5e55\u4e5f\u662f\\(js\\)\u6e32\u67d3\u51fa\u6765\u7684\uff0c\u6240\u4ee5\u7406\u8bba\u4e0a\u53ef\u4ee5\u7528\\(selenium\\)\u83b7\u53d6\uff0c\u4f46\u662f\u5f39\u5e55\u65f6\u523b\u5728\u53d8\uff0c\u7528\\(selenium\\)\u5c31\u8981\u628a\u89c6\u9891\u5168\u770b\u4e00\u904d\u624d\u80fd\u83b7\u53d6\u5b8c\u6574\u5f39\u5e55\u3002</p>"},{"location":"my%20past/python/spider/#2","title":"2.\u5206\u6790\u6570\u636e","text":"<p>\u901a\u8fc7\u5206\u6790\u7f51\u7edc\u4f20\u8f93\u7684\u6570\u636e\uff0c\u6211\u4eec\u53d1\u73b0\u5728\\(seg.so\\)\u4e2d\u50a8\u5b58\u7740\u5f39\u5e55\u7684\u6570\u636e\uff0c\u5e76\u4e14\u6240\u6709\u94fe\u63a5\u53ea\u6709\\(index\\)\u4e0d\u540c\uff0c\u53ef\u4ee5\u6279\u91cf\u83b7\u53d6\u3002\u4f46\u662f\uff0c\\(.so\\)\u6587\u4ef6\u4e3a\u4e8c\u8fdb\u5236\u6587\u4ef6\uff0c\u5f88\u96be\u89e3\u7801\u3002~~\u6211\u8bd5\u4e86\u4e00\u5929\uff0c\u65e0\u679c\u3002~~\u8fd9\u79cd\u65b9\u6cd5\u7406\u8bba\u4e0a\u6765\u8bf4\u53ef\u4ee5\u83b7\u53d6\u5168\u90e8\u5f39\u5e55\uff0c\u4f46\u662f\u65e0\u6cd5\u89e3\u6790\u6570\u636e\u6587\u4ef6\uff0c\u5c31\u5bc4\u4e86\u3002</p>"},{"location":"my%20past/python/spider/#3_1","title":"3.\u5947\u5999\u65b9\u6cd5","text":"<p>~~\u901a\u8fc7\u770b\u7f51\u53cb\u4eec\u7684\u65b9\u6cd5~~\uff0c\u6211\u4eec\u53d1\u73b0b\u7ad9\u4e00\u4e2a\u53e4\u8001\uff0c\u5df2\u5e9f\u5f03\u7684\u50a8\u5b58\u5f39\u5e55\u7684\u65b9\u5f0f:\\(https://comment.bilibili.com/{cid}.xml\\),\u8fd9\u4e2a\u94fe\u63a5\u91cc\u5b58\u653e\u7740\u8be5\u89c6\u9891\u90e8\u5206\u7684\u5f39\u5e55(\u6709\u65f6\u5168\uff0c\u6709\u65f6\u4e0d\u5168)\u3002\u800c\\(cid\\)\u5c31\u653e\u5728\u7f51\u9875\u6e90\u4ee3\u7801\u91cc\u3002\u6240\u4ee5\uff0c\u6b64\u6cd5\u53ef\u884c\u3002</p> <p><pre><code>import re\nimport requests\nimport os\nimport openpyxl\nimport openpyxl.styles\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                  '.5112.102 Safari/537.36 Edg/104.0.1293.63'\n}\nor_url = r'https://www.bilibili.com/video/{}?spm_id_from=333.337.search-card.all.click'\ndm_url = r'https://comment.bilibili.com/{}.xml'\n\nbv_id = r'BV1yG4y1r77N'  # input('\u8f93\u5165bv\u53f7:')\ndirt = r'C:\\Users\\Yimen\\Desktop'\n\n\ndef get_html():\n    resp = requests.get(or_url.format(bv_id))\n    html = resp.text\n    with open('danmaku.html', 'w', encoding='utf-8') as f:\n        f.write(html)\n    return html\n\n\ndef get_cid(html):  #\n    tmp = re.compile(r'\"videoData\":.*?\"dynamic\":.*?,\"cid\":(.*?),\"dimension\":')\n    lst = re.findall(tmp, html)\n    cid = lst[0]\n    return cid\n\n\ndef get_title(html):\n    tmp = re.compile(r'\"videoData\":.*?\"pic\":.*?,\"title\":\"(.*?)\",\"pubdate\":')\n    lst = re.findall(tmp, html)\n    title = lst[0]\n    return title\n\n\ndef write_xml(xml):\n    with open('danmaku.xml', 'w', encoding='utf-8') as f:\n        f.write(xml)\n\n\ndef get_xml(cid):\n    resp = requests.get(dm_url.format(cid))\n    xml = resp.content.decode()\n    #write_xml(xml)\n    return xml\n\n\ndef get_time(tm):\n    tm = float(tm)\n    min = int(tm / 60)\n    sec = int(tm - min * 60)\n    smin = str(min)\n    ssec = str(sec)\n    if min &lt; 10:\n        smin = '0' + smin\n    if sec &lt; 10:\n        ssec = '0' + ssec\n    word = smin + ':' + ssec\n    return word\n\n\ndef get_color(cl):\n    color_val = str(hex(cl)).upper()[2:]\n    # print(color_val)\n    color_len = len(color_val)\n    if color_len &lt; 6:\n        for i in range(0, 6 - color_len):\n            color_val = \"0\" + color_val\n    if color_val == \"FFFFFF\":\n        color_val = \"000000\"\n    return color_val\n\n\ndef get_danmaku(xml, title):\n    tmp = re.compile(r'&lt;d p=\"(.*?),.*?,.*?,(.*?),.*?\"&gt;(.*?)&lt;/d&gt;')\n    tmp_lst = re.findall(tmp, xml)\n    lst = []\n    for i in tmp_lst:\n        lst.append([float(i[0]), int(i[1]), i[2]])\n    lst.sort(reverse=False)\n\n    os.chdir(dirt)\n    workbook = openpyxl.Workbook()\n    sheet = workbook.active\n    sheet.title = '\u5f39\u5e55'\n    sheet.append(['\u51fa\u73b0\u65f6\u95f4', '\u5f39\u5e55\u5185\u5bb9'])\n    num = 1\n    sheet.column_dimensions['A'].width = 15\n    sheet.column_dimensions['B'].width = 150\n    sheet.row_dimensions[num].height = 25\n\n    for tm, cl, dm in lst:\n        sheet.append([get_time(tm), dm])\n        num += 1\n        sheet.row_dimensions[num].height = 20\n        pos = 'B' + str(num)\n        cell = sheet[pos]\n        color_val = get_color(cl)\n        cell.font = openpyxl.styles.Font(name=\"\u5fae\u8f6f\u96c5\u9ed1\", size=10, bold=True, italic=False, color=\"\" + color_val + \"\")\n\n    workbook.save(\"\u5f39\u5e55_\" + title + \".xlsx\")\n\n\nif __name__ == '__main__':\n    html = get_html()\n    cid = get_cid(html)\n    title = get_title(html)\n    xml = get_xml(cid)\n    get_danmaku(xml, title)\n</code></pre> \u53e6\u5916\uff0c\u8fd9\u65b9\u6cd5\u83b7\u53d6\u7684\u5f39\u5e55\u4e0d\u53ea\u6709\u5185\u5bb9\uff0c\u8fd8\u6709\u65f6\u95f4\u548c\u989c\u8272\u7b49\u4fe1\u606f\uff0c\u6240\u4ee5\u7528\\(excel\\)\u8868\u683c\u5448\u73b0\u8fd9\u4e9b\u5185\u5bb9\u518d\u5408\u9002\u4e0d\u8fc7\u3002</p>"},{"location":"my%20past/python/spider/#b_2","title":"\u4e09.b\u7ad9\u89c6\u9891\u7684\u83b7\u53d6","text":"<p>~~\u5230\u4e86\u5927boss\u4e86,\u5f53\u521d\u5b66\u722c\u866b\u5c31\u662f\u4e3a\u4e86\u8fd9\u4e2a~~</p>"},{"location":"my%20past/python/spider/#1_1","title":"1.\u7701\u4e8b\u8fd8\u662f\u8d39\u4e8b","text":"<p>\u4e00\u79cd\u7701\u65f6\u53c8\u7701\u4e8b\u7684\u65b9\u6cd5\u662f\u7528\\(you\\)-\\(get\\)\u83b7\u53d6\u89c6\u9891\u3002~~\u56e0\u6b64\uff0c\u6b64\u8d34\u5b8c\u7ed3~~</p>"},{"location":"my%20past/python/spider/#2_1","title":"2.\u5b66\u8fd8\u662f\u4e0d\u5b66","text":"<p>\u6211\u4eec\u5b66\\(python\\)\u722c\u866b\u4e0d\u662f\u4e3a\u4e86\u7701\u4e8b\uff0c\u800c\u662f\u4e3a\u4e86\u5b66\u4e60\u8fd9\u5176\u4e2d\u7684\u539f\u7406\u3002~~\u8981\u662f\u4e3a\u4e86\u7701\u4e8b\uff0c\u82b1\u94b1\u8ba9\u522b\u4eba\u5e2e\u81ea\u5df1\u505a\u5c82\u4e0d\u662f\u66f4\u723d~~</p> <p>\u6211\u4eec\u53d1\u73b0\uff0c\u7f51\u9875\u6e90\u4ee3\u7801\u4e2d\u7684\\(script\\)\u6807\u7b7e\u4e2d\u5c31\u542b\u6709\u89c6\u9891\u7684\u4fe1\u606f\uff0c\u4e0d\u8fc7b\u7ad9\u89c6\u9891\u5206\u4e3a\u89c6\u9891\u548c\u97f3\u9891\u3002</p> <p>\u56e0\u6b64\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u5c06\\(script\\)\u6807\u7b7e\u4e2d\u7684\\(json\\)\u4e32\u53d6\u51fa\u6765\uff0c\u518d\u5206\u6790\u6587\u4ef6\u5f97\u5230\u89c6\u9891\u548c\u97f3\u9891\u7684\u94fe\u63a5\uff0c\u5206\u522b\u4e0b\u8f7d\u5373\u53ef\u3002</p> <p>\u5b9e\u4f8b:\u83b7\u53d6b\u7ad9\u89c6\u9891</p> <pre><code>import os\nimport re\nimport requests as req\nimport json\n\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                  '.5112.102 Safari/537.36 Edg/104.0.1293.63'\n}\n\nor_url = r'https://www.bilibili.com/video/{}'\nep_url = r'https://www.bilibili.com/bangumi/play/{}?from_spmid=666.25.episode.0&amp;from_outer_spmid=333.337.0.0'\nbv_id = r'BV1ua4y1H714?p=2'  # input('\u8f93\u5165bv\u53f7:')\nep_id = r'ep517946'\ndirt = r'C:\\Users\\Yimen\\Desktop\\bilibili_video'\n\nif not os.path.exists(dirt):\n    os.mkdir(dirt)\n\n\ndef write_html(html):\n    with open('video.html', 'w', encoding='utf-8') as f:\n        f.write(html)\n\n\ndef get_html(url):\n    resp = req.get(url, headers=headers)\n    html = resp.content.decode()\n    # write_html(html)\n    return html\n\n\ndef write_json(json_dic):\n    with open('video.json', 'w', encoding='utf-8') as f:\n        json.dump(json_dic, f)\n\n\ndef get_json(html):\n    tmp = re.compile(r'&lt;script&gt;window.__playinfo__=(.*?)&lt;/script&gt;')\n    json_text = re.findall(tmp, html)[0]\n    json_dic = json.loads(json_text)\n    # write_json(json_dic)\n    return json_dic\n\n\ndef get_times():\n    with open('times.json', 'r') as f:\n        dic = json.load(f)\n    cnt = dic[\"times\"]\n    dic[\"times\"] += 1\n    with open('times.json', 'w') as f:\n        json.dump(dic, f)\n    return cnt\n\n\ndef get_video_clip(dic):\n    re_url = or_url.format(bv_id)\n    _headers_ = {\n        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                      '.5112.102 Safari/537.36 Edg/104.0.1293.63',\n        'Referer': re_url\n    }\n\n    cnt = get_times()\n    os.chdir(dirt)\n\n    url = dic['data']['dash']['video'][0]['base_url']\n    print(\"\u89c6\u9891\u94fe\u63a5\u83b7\u53d6\u5b8c\u6bd5\")\n    resp = req.get(url, headers=_headers_)\n    print(\"\u89c6\u9891\u83b7\u53d6\u5b8c\u6bd5\")\n    vid = resp.content\n    print(\"\u6b63\u5728\u4fdd\u5b58\u89c6\u9891...\")\n    with open('video_{}.mp4'.format(cnt), 'wb') as f:\n        f.write(vid)\n    print(\"\u4fdd\u5b58\u5b8c\u6bd5\uff01\")\n\n    url = dic['data']['dash']['audio'][0]['base_url']\n    print(\"\u97f3\u9891\u94fe\u63a5\u83b7\u53d6\u5b8c\u6bd5\")\n    resp = req.get(url, headers=_headers_)\n    print(\"\u97f3\u9891\u83b7\u53d6\u5b8c\u6bd5\")\n    vid = resp.content\n    print(\"\u6b63\u5728\u4fdd\u5b58\u97f3\u9891...\")\n    with open('audio_{}.mp3'.format(cnt), 'wb') as f:\n        f.write(vid)\n    print(\"\u4fdd\u5b58\u5b8c\u6bd5\uff01\")\n\n\ndef init():\n    with open('times.json', 'w') as f:\n        json.dump({\"times\": 0}, f)\n\n\nif __name__ == '__main__':\n    get_video_clip(get_json(get_html(or_url.format(bv_id))))\n</code></pre> <p>\u4ec5\u4ec5\u83b7\u53d6\u5206\u5f00\u7684\u97f3\u9891\u548c\u89c6\u9891\u8fd8\u4e0d\u591f\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u5c06\u4ed6\u4eec\u8fdb\u884c\u5408\u5e76\u3002\u6240\u4ee5\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\\(ffmpeg\\)\u5b9e\u73b0\u5c06\u97f3\u89c6\u9891\u5408\u5e76\u7684\u64cd\u4f5c\u3002\u5f53\u7136\uff0c\u4f7f\u7528\\(moviepy.editor\\)\u4e5f\u53ef\u4ee5\u5408\u5e76\u97f3\u89c6\u9891\uff0c\u4f46\u662f\u901f\u5ea6\u8981\u8fdc\u6162\u4e8e\\(ffmpeg\\)\u3002</p> <p>\u6ce8\u610f\uff0c\\(ffmpeg\\)\u4e3a\u975e\u7cfb\u7edf\u7a0b\u5e8f\uff0c\u6240\u4ee5\u8981\u5c06\u7edd\u5bf9\u8def\u5f84\u8f93\u5165\u547d\u4ee4\u884c\u4e2d\uff0c\u4e0d\u7136\u4f1a\u62a5\u9519\u3002</p> <ul> <li>\u5173\u4e8e\\(ffmpeg\\)\u7684\u5b89\u88c5:\u5148\u5c06\u5b98\u7f51\u4e0b\u8f7d\u7684\\(.zip\\)\u6587\u4ef6\u89e3\u538b\u7f29\uff0c\u5c06\u6587\u4ef6\u5939\u653e\u5165\u4efb\u610f\u4f4d\u7f6e\uff0c\u5e76\u5728\u7cfb\u7edf\u53d8\u91cf\u4e2d\u6dfb\u52a0\\(bin\\)\u6587\u4ef6\u5939\u7684\u7edd\u5bf9\u8def\u5f84\u3002</li> </ul> <pre><code># merge_video_audio.py\nimport os\nimport moviepy.editor as me\n\n\ndef run_by_moviepy(audio_name, video_name, output_name):\n    audio = me.AudioFileClip(audio_name)\n    video = me.VideoFileClip(video_name)\n    output = video.set_audio(audio)\n    output.write_videofile(output_name)\n\n\ndef run_by_ffmpeg(audio_name, video_name, output_name):\n    cmd = f'C:\\\\Windows\\\\ffmpeg-5.1-essentials_build\\\\bin\\\\ffmpeg.exe -i {audio_name} -i {video_name} -acodec copy -vcodec copy {output_name}'\n    os.system(cmd)\n</code></pre> <pre><code># normal_get_video.py\nimport os\nimport re\nimport requests as req\nimport json\nimport merge_video_audio as mva\n\n\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                  '.5112.102 Safari/537.36 Edg/104.0.1293.63'\n}\n\nor_url = r'https://www.bilibili.com/video/{}'\nep_url = r'https://www.bilibili.com/bangumi/play/{}?from_spmid=666.25.episode.0&amp;from_outer_spmid=333.337.0.0'\nbv_id = r'BV1xa411V7Tq'  # input('\u8f93\u5165bv\u53f7:')\nep_id = r'ep517946'\ndirt = r'C:\\Users\\Yimen\\Desktop\\bilibili_video'\n\nif not os.path.exists(dirt):\n    os.mkdir(dirt)\n\n\ndef write_html(html):\n    with open('video.html', 'w', encoding='utf-8') as f:\n        f.write(html)\n\n\ndef get_html(url):\n    resp = req.get(url, headers=headers)\n    html = resp.content.decode()\n    # write_html(html)\n    return html\n\n\ndef write_json(json_dic):\n    with open('video.json', 'w', encoding='utf-8') as f:\n        json.dump(json_dic, f)\n\n\ndef get_json(html):\n    tmp = re.compile(r'&lt;script&gt;window.__playinfo__=(.*?)&lt;/script&gt;')\n    json_text = re.findall(tmp, html)[0]\n    json_dic = json.loads(json_text)\n    # write_json(json_dic)\n    return json_dic\n\n\ndef get_times():\n    with open('times.json', 'r') as f:\n        dic = json.load(f)\n    cnt = dic[\"times\"]\n    dic[\"times\"] += 1\n    with open('times.json', 'w') as f:\n        json.dump(dic, f)\n    return cnt\n\n\ndef get_title(html):\n    tmp = re.compile(r'\"videoData\":.*?\"pic\":.*?,\"title\":\"(.*?)\",\"pubdate\":')\n    lst = re.findall(tmp, html)\n    title = lst[0]\n    return title\n\n\ndef get_video_clip(dic):\n\n    re_url = or_url.format(bv_id)\n    title = get_title(get_html(re_url))\n\n    _headers_ = {\n        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                      '.5112.102 Safari/537.36 Edg/104.0.1293.63',\n        'Referer': re_url\n    }\n\n    cnt = get_times()\n    os.chdir(dirt)\n\n    url = dic['data']['dash']['video'][0]['base_url']\n    print(\"\u89c6\u9891\u94fe\u63a5\u83b7\u53d6\u5b8c\u6bd5,\u6b63\u5728\u4e0b\u8f7d\u89c6\u9891...\")\n    resp = req.get(url, headers=_headers_)\n    print(\"\u89c6\u9891\u83b7\u53d6\u5b8c\u6bd5\")\n    vid = resp.content\n    print(\"\u6b63\u5728\u4fdd\u5b58\u89c6\u9891...\")\n    video_name = 'video_{}.mp4'.format(cnt)\n    with open(video_name, 'wb') as f:\n        f.write(vid)\n    print(\"\u4fdd\u5b58\u5b8c\u6bd5\uff01\")\n    print(\"--------------------\")\n    url = dic['data']['dash']['audio'][0]['base_url']\n    print(\"\u97f3\u9891\u94fe\u63a5\u83b7\u53d6\u5b8c\u6bd5\")\n    resp = req.get(url, headers=_headers_)\n    print(\"\u97f3\u9891\u83b7\u53d6\u5b8c\u6bd5\")\n    vid = resp.content\n    print(\"\u6b63\u5728\u4fdd\u5b58\u97f3\u9891...\")\n    audio_name = 'audio_{}.mp3'.format(cnt)\n    with open(audio_name, 'wb') as f:\n        f.write(vid)\n    print(\"\u4fdd\u5b58\u5b8c\u6bd5\uff01\")\n    print(\"--------------------\")\n    print(\"\u6b63\u5728\u5408\u5e76\u97f3\u89c6\u9891...\")\n\n    output_name = 'output_{}.mp4'.format(cnt)\n    rename = title + '.mp4'\n    mva.run_by_ffmpeg(audio_name, video_name, output_name)\n    os.rename(output_name, rename)\n    print(\"\u5408\u6210\u5b8c\u6bd5!\")\n    print(\"--------------------\")\n    print(\"\u6b63\u5728\u6e05\u7406\u6570\u636e\u6587\u4ef6...\")\n    os.remove(audio_name)\n    os.remove(video_name)\n    print(\"\u6e05\u7406\u5b8c\u6bd5!\")\n\n\ndef init():\n    with open('times.json', 'w') as f:\n        json.dump({\"times\": 0}, f)\n\n\nif __name__ == '__main__':\n    get_video_clip(get_json(get_html(or_url.format(bv_id))))\n</code></pre> <p>\u540c\u65f6\uff0c\u7531\u4e8e\u901a\u8fc7\u89c6\u9891\u94fe\u63a5\u83b7\u53d6\u89c6\u9891\u7f51\u9875\u6e90\u7801\u7684\u8fc7\u7a0b\u6bd4\u8f83\u6162\uff0c\u53ef\u4ee5\u505a\u4e00\u4e2a\u8fdb\u5ea6\u6761\u6765\u663e\u793a\u5f53\u524d\u7684\u4e0b\u8f7d\u8fdb\u5ea6\u3002\u518d\u5b58\u50a8\u89c6\u9891\u6587\u4ef6\u65f6\uff0c\u6211\u4eec\u8fd8\u8981\u6ce8\u610f\u547d\u540d:\u5982\u679c\u51fa\u73b0\u91cd\u540d\uff0c\u8981\u81ea\u52a8\u751f\u6210\u65b0\u540d\u5b57(\"_\" + \u6570\u5b57)\uff1b\u5982\u679c\u540d\u5b57\u4e2d\u542b\u6709\u975e\u6cd5\u5b57\u7b26\uff0c\u5c31\u81ea\u52a8\u4fdd\u5b58\u4e3a\u6307\u5b9a\u7684\u540d\u5b57(\"output.mp4\")\u3002</p> <p><pre><code># download_process_bar.py\nfrom contextlib import closing\nimport requests as req\n\nhea = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                  '.5112.102 Safari/537.36 Edg/104.0.1293.63'\n}\n\n\ndef download_with_process_bar(url, filename, headers=None):\n    if headers is None:\n        headers = hea\n    with closing(req.get(url, headers=headers, stream=True)) as resp:\n        chunk_size = 1024\n        content_size = int(resp.headers['content-length'])\n        data_count = 0\n        with open(filename, 'wb') as f:\n            for data in resp.iter_content(chunk_size=chunk_size):\n                f.write(data)\n                done_block = int((data_count / content_size) * 50)\n                data_count = data_count + len(data)\n                now_percent = (data_count / content_size) * 100\n                print(\"\\r [%s%s] %d%% \" % (done_block * '\u2588', ' ' * (50 - 1 - done_block), now_percent), end=\" \")\n</code></pre> \u8fd9\u91cc\u7684\\(closing\\)\u662f\u4e3a\u4e86\u5c06\\(req.get\\)\u81ea\u52a8\u751f\u6210\u4e0a\u4e0b\u6587\u7ba1\u7406\uff0c\u8fd9\u6837\u624d\u80fd\u7528\\(with\\)\u6253\u5f00\uff1b\\(resp.iter\\_content\\)\u5219\u53ef\u4ee5\u5c06\u6587\u4ef6\u5206\u6bb5\uff0c\u4ee5\u663e\u793a\u51fa\u8fdb\u5ea6\u6761\u3002'\\r'\u662f\u4e3a\u4e86\u8ba9\u8f93\u51fa\u663e\u793a\u5728\u540c\u4e00\u884c\uff0c\u4f5c\u7528\u662f\u8ba9\u5149\u6807\u56de\u5230\u884c\u9996\u3002 <pre><code># normal_get_video.py\nimport os\nimport re\nimport requests as req\nimport json\nimport merge_video_audio as mva\nimport download_process_bar as dpb\nheaders = {\n    'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                  '.5112.102 Safari/537.36 Edg/104.0.1293.63'\n}\n\nor_url = r'https://www.bilibili.com/video/{}'\nep_url = r'https://www.bilibili.com/bangumi/play/{}?from_spmid=666.25.episode.0&amp;from_outer_spmid=333.337.0.0'\nbv_id = r'BV1254y187SE'  # input('\u8f93\u5165bv\u53f7:')\nep_id = r'ep517946'\ndirt = r'C:\\Users\\Yimen\\Desktop\\bilibili_video'\n\nif not os.path.exists(dirt):\n    os.mkdir(dirt)\n\n\ndef write_html(html):\n    with open('video.html', 'w', encoding='utf-8') as f:\n        f.write(html)\n\n\ndef get_html(url):\n    resp = req.get(url, headers=headers)\n    html = resp.content.decode()\n    # write_html(html)\n    return html\n\n\ndef write_json(json_dic):\n    with open('video.json', 'w', encoding='utf-8') as f:\n        json.dump(json_dic, f)\n\n\ndef get_json(html):\n    tmp = re.compile(r'&lt;script&gt;window.__playinfo__=(.*?)&lt;/script&gt;')\n    json_text = re.findall(tmp, html)[0]\n    json_dic = json.loads(json_text)\n    # write_json(json_dic)\n    return json_dic\n\n\ndef get_times():\n    with open('times.json', 'r') as f:\n        dic = json.load(f)\n    cnt = dic[\"times\"]\n    dic[\"times\"] += 1\n    with open('times.json', 'w') as f:\n        json.dump(dic, f)\n    return cnt\n\n\ndef get_title(html):\n    tmp = re.compile(r'\"videoData\":.*?\"pic\":.*?,\"title\":\"(.*?)\",\"pubdate\":')\n    lst = re.findall(tmp, html)\n    title = lst[0]\n    return title\n\n\ndef get_video_clip(dic):\n    re_url = or_url.format(bv_id)\n    title = get_title(get_html(re_url))\n\n    _headers_ = {\n        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0'\n                      '.5112.102 Safari/537.36 Edg/104.0.1293.63',\n        'Referer': re_url\n    }\n\n    cnt = get_times()\n    os.chdir(dirt)\n\n    url = dic['data']['dash']['video'][0]['base_url']\n    print(\"\u89c6\u9891\u94fe\u63a5\u83b7\u53d6\u5b8c\u6bd5,\u6b63\u5728\u4e0b\u8f7d\u89c6\u9891...\")\n    video_name = 'video_{}.mp4'.format(cnt)\n    dpb.download_with_process_bar(url, video_name, _headers_)\n    print(\"\u4e0b\u8f7d\u5b8c\u6bd5\uff01\")\n    print(\"--------------------\")\n    url = dic['data']['dash']['audio'][0]['base_url']\n    print(\"\u97f3\u9891\u94fe\u63a5\u83b7\u53d6\u5b8c\u6bd5\")\n    resp = req.get(url, headers=_headers_)\n    print(\"\u97f3\u9891\u83b7\u53d6\u5b8c\u6bd5\")\n    vid = resp.content\n    print(\"\u6b63\u5728\u4fdd\u5b58\u97f3\u9891...\")\n    audio_name = 'audio_{}.mp3'.format(cnt)\n    with open(audio_name, 'wb') as f:\n        f.write(vid)\n    print(\"\u4fdd\u5b58\u5b8c\u6bd5\uff01\")\n    print(\"--------------------\")\n    print(\"\u6b63\u5728\u5408\u5e76\u97f3\u89c6\u9891...\")\n\n    output_name = 'output_{}.mp4'.format(cnt)\n    rename = title + '.mp4'\n    mva.run_by_ffmpeg(audio_name, video_name, output_name)\n    num = 0\n    while os.path.exists(rename):\n        rename = title + '_' + str(num) + '.mp4'\n        num += 1\n    try:\n        os.rename(output_name, rename)\n    except OSError:\n        print(\"\u6587\u4ef6\u540d\u4e0d\u6b63\u786e\uff0c\u6587\u4ef6\u5c06\u81ea\u52a8\u547d\u540d\u4e3a \" + output_name + '.')\n        pass\n    print(\"\u5408\u6210\u5b8c\u6bd5!\")\n    print(\"--------------------\")\n    print(\"\u6b63\u5728\u6e05\u7406\u6570\u636e\u6587\u4ef6...\")\n    os.remove(audio_name)\n    os.remove(video_name)\n    print(\"\u6e05\u7406\u5b8c\u6bd5!\")\n\n\ndef init():\n    with open('times.json', 'w') as f:\n        json.dump({\"times\": 0}, f)\n\n\nif __name__ == '__main__':\n    get_video_clip(get_json(get_html(or_url.format(bv_id))))\n</code></pre></p>"},{"location":"my%20past/python/spider/#b_3","title":"\u56db.\u83b7\u53d6b\u7ad9\u8bc4\u8bba","text":"<p>b\u7ad9\u8bc4\u8bba\u4e0eb\u7ad9\u89c6\u9891\u7684\u83b7\u53d6\u65b9\u6cd5\u5982\u51fa\u4e00\u8f99\uff0c\u4e5f\u662f\u4ece\\(script\\)\u6807\u7b7e\u4e2d\u53d6\u51fa\\(json\\)\u4e32\uff0c\u5728\u8fdb\u884c\u4fdd\u5b58\u3002\u4e0d\u8fc7\uff0c\u8bc4\u8bba\u5177\u6709\u6811\u5f62\u7ed3\u6784\uff0c\u6240\u4ee5\u9700\u8981\u5c06\u6bcf\u4e2a\u8bc4\u8bba\u4e0b\u9762\u7684\u8ddf\u8bc4\u4e5f\u4e0b\u8f7d\u4e0b\u6765\u3002</p> <p>\u8fd9\u4e2a\u8fc7\u7a0b\u5b58\u5728\u5927\u91cf\u8bbf\u95ee\u4e0d\u540c\u5730\u5740\u7684\u60c5\u51b5\uff0c\u53ef\u80fd\u4f1a\u88ab\u62e6\u622a\u3002\u56e0\u6b64\u4e3a\u4e86\u8ba9\u7a0b\u5e8f\u4e0d\u7ec8\u6b62\uff0c\u9700\u8981\u6dfb\u52a0\u4e00\u4e9b\u7279\u5224\u3002\u5e76\u4e14\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u968f\u5373\u5207\u6362\u4ee3\u7406\\(IP\\),\u8bf7\u6c42\u5934\u7684\u9a9a\u64cd\u4f5c\u5c1d\u8bd5\u4e0d\u88ab\u8bc6\u522b\u4e3a\u7a0b\u5e8f\u3002</p> <p>~~\u4e8b\u5b9e\u4e0a\u5e76\u6ca1\u4ec0\u4e48\u5375\u7528\uff0c200\u4e2a\u8bf7\u6c42\u540e\u4e00\u5b9a\u4f1a\u88ab\u62e6\u622a~~</p> <p>\u5b9e\u4f8b:\u83b7\u53d6b\u7ad9\u8bc4\u8bba <pre><code># my_headers.py\n\nimport random\nmy_headers = [\n    \"Mozilla/5.0 (Windows NT 6.3; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/39.0.2171.95 Safari/537.36\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/35.0.1916.153 Safari/537.36\",\n    \"Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0\",\n    \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_2) AppleWebKit/537.75.14 (KHTML, like Gecko) Version/7.0.3 Safari/537.75.14\",\n    \"Mozilla/5.0 (compatible; MSIE 10.0; Windows NT 6.2; Win64; x64; Trident/6.0)\",\n    'Mozilla/5.0 (Windows; U; Windows NT 5.1; it; rv:1.8.1.11) Gecko/20071127 Firefox/2.0.0.11',\n    'Opera/9.25 (Windows NT 5.1; U; en)',\n    'Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1; SV1; .NET CLR 1.1.4322; .NET CLR 2.0.50727)',\n    'Mozilla/5.0 (compatible; Konqueror/3.5; Linux) KHTML/3.5.5 (like Gecko) (Kubuntu)',\n    'Mozilla/5.0 (X11; U; Linux i686; en-US; rv:1.8.0.12) Gecko/20070731 Ubuntu/dapper-security Firefox/1.5.0.12',\n    'Lynx/2.8.5rel.1 libwww-FM/2.14 SSL-MM/1.4.1 GNUTLS/1.2.9',\n    \"Mozilla/5.0 (X11; Linux i686) AppleWebKit/535.7 (KHTML, like Gecko) Ubuntu/11.04 Chromium/16.0.912.77 Chrome/16.0.912.77 Safari/535.7\",\n    \"Mozilla/5.0 (X11; Ubuntu; Linux i686; rv:10.0) Gecko/20100101 Firefox/10.0 \",\n    'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/104.0.5112.102 Safari/537.36 Edg/104.0.1293.63'\n]\n\n\nproxy_list = [\n    '183.95.80.102:8080',\n    '123.160.31.71:8080',\n    '115.231.128.79:8080',\n    '166.111.77.32:80',\n    '43.240.138.31:8080',\n    '218.201.98.196:3128',\n    '47.94.230.42:9999',\n    '192.168.131.1:8080'\n]\n\n\ndef headers(origin_url):\n    num = random.randint(0, 13)\n    hea = {\n        'user-agent': my_headers[num],\n        'referer': origin_url\n    }\n    return hea\n\n\ndef proxy():\n    num = random.randint(0, 7)\n    pro = {\n        'http': proxy_list[num]\n    }\n    return pro\n\n\ndef Proxy():\n    prox = ''\n    for i in range(0, 4):\n        num = random.randint(1, 255)\n        if i == 3:\n            prox = prox + str(num) + ':'\n        else:\n            prox = prox + str(num) + '.'\n    prox = prox + '8080'\n    pro = {\n        'http': prox\n    }\n    return pro\n</code></pre></p> <pre><code># normal_get_review.py\nimport os\nimport requests as req\nimport json\nimport re\nimport openpyxl\nimport openpyxl.styles\nimport my_headers as mh\n\n\nor_url = r'https://api.bilibili.com/x/v2/reply/main?csrf=289e176593e8271d3d55f66616' \\\n         r'bc8ed0&amp;mode=3&amp;next={}&amp;oid=845534966&amp;plat=1&amp;type=1'\n\nbv_url = r'https://www.bilibili.com/video/BV1Q54y157AT?spm_id_from=333.999.0.' \\\n         r'0&amp;vd_source=291e2d237373b8b9b036cf97aa555083'\n\nmore_rev_url = r'https://api.bilibili.com/x/v2/reply/reply?csrf=289e176593e8271d3d55f66616bc8ed0&amp;oid=84553496' \\\n               r'6&amp;pn={}&amp;ps=10&amp;root={}&amp;type=1'\n\ndirt = r'C:\\Users\\Yimen\\Desktop\\bilibili_review'\n\nif not os.path.exists(dirt):\n    os.mkdir(dirt)\n\n\ndef get_title(html):\n    tmp = re.compile(r'\"videoData\":.*?\"pic\":.*?,\"title\":\"(.*?)\",\"pubdate\":')\n    lst = re.findall(tmp, html)\n    title = lst[0]\n    return title\n\n\ndef get_html(url):\n    h = mh.headers(bv_url)\n    p = mh.Proxy()\n    # print(p['http'] + h['user-agent'])\n    resp = req.get(url, headers=h, proxies=p)\n    html = resp.text\n    return html\n\n\ndef write_json(json_dic, cnt):\n    obj = json.dumps(json_dic, ensure_ascii=False)\n    with open('review{}.json'.format(cnt), 'w', encoding='utf-8') as f:\n        f.write(obj)\n\n\ndef get_json(html, cnt):\n    json_dic = json.loads(html)\n    write_json(json_dic, cnt)\n    return json_dic\n\n\ndef write_rev(dic, rev_lst, num):\n    name = dic[\"member\"][\"uname\"]\n    if num &gt; 0:\n        name = str(num) + '_' + name\n    content = dic[\"content\"][\"message\"]\n    rev_lst.append([name, content])\n    return dic[\"rpid\"]\n\n\ndef write_review():\n    os.chdir(dirt)\n    rev_lst = []\n    title = get_title(get_html(bv_url))\n\n    for i in range(0, 10):\n        now_url = or_url.format(i)\n        html = get_html(now_url)\n        dic = get_json(html, i)\n        lst = dic[\"data\"][\"replies\"]\n        user_num = 1\n\n        for new_dic in lst:\n            rpid = write_rev(new_dic, rev_lst, -1)\n            cnt = 1\n            while True:\n                try:\n                    more_url = more_rev_url.format(cnt, rpid)\n                    tmp_html = get_html(more_url)\n                    tmp_dic = get_json(tmp_html, i)\n                    state = tmp_dic[\"message\"]\n                    if state == \"\u8bf7\u6c42\u88ab\u62e6\u622a\":\n                        print(state)\n                        break\n                    else:\n                        tmp_lst = tmp_dic[\"data\"][\"replies\"]\n                        if type(tmp_lst) == type([]):\n                            for every_dic in tmp_lst:\n                                write_rev(every_dic, rev_lst, user_num)\n                        else:\n                            break\n                except req.exceptions.InvalidURL:\n                    break\n                cnt += 1\n            # print(cnt)\n            user_num += 1\n\n    workbook = openpyxl.Workbook()\n    sheet = workbook.active\n    sheet.title = '\u8bc4\u8bba'\n    sheet.append(['\u7528\u6237\u540d\u79f0', '\u8bc4\u8bba\u5185\u5bb9'])\n    num = 1\n    sheet.column_dimensions['A'].width = 30\n    sheet.column_dimensions['B'].width = 300\n    sheet.row_dimensions[num].height = 25\n\n    for name, content in rev_lst:\n        sheet.append([name, content])\n        num += 1\n        sheet.row_dimensions[num].height = 20\n\n    workbook.save(\"\u8bc4\u8bba_1_\" + title + \".xlsx\")\n\n\nif __name__ == '__main__':\n    write_review()\n</code></pre>"},{"location":"my%20past/python/spider/#94-update","title":"9.4 update","text":"<p>\u540e\u6765\u53d1\u73b0\uff0c\u53ea\u8981\u5728\u8bf7\u6c42\u4e4b\u95f4\u52a0\u4e2a\u4e00\u79d2\u95f4\u9694<code>time.sleep(1)</code>\u5c31\u4e0d\u4f1a\u88ab\u62e6\u622a\u4e86\uff0c\u4e50</p>"},{"location":"my%20past/python/spider/#pixiv","title":"\u4e94.\u722c\u53d6pixiv \u56fe\u7247","text":"<p>\u6316\u4e2a\u5751\uff0c\u5bd2\u5047\u518d\u586b</p>"},{"location":"my%20past/python/spider/#pythonvpn","title":"\u516d.\u7eafpython\u7684vpn","text":"<p>\u5bd2\u5047\u586b\u5751</p> <p>update 2023.1.25 \u5bd2\u5047\u586bnmb\u5751\uff0c\u8fd8\u670950\u5929\u82f1\u8bed\u9ad8\u8003\u4e86 \u6691\u5047\u518d\u586b</p>"},{"location":"my%20past/python/tool/","title":"Python\u5e38\u7528\u5e93/\u5de5\u5177","text":""},{"location":"my%20past/python/tool/#pip","title":"pip","text":""},{"location":"my%20past/python/tool/#_1","title":"\u4f7f\u7528","text":"<p>\u5728\\(cmd\\)\u754c\u9762\u4e2d\u5207\u6362\u5230\u5f53\u524d\u5b89\u88c5\u76ee\u5f55\u4e2d(\u542b\u6709\\(pip.exe\\))</p> <p><code>&gt;&gt;&gt;cd C:/...</code></p> <p>\u68c0\u67e5<code>&gt;&gt;&gt;pip</code>\u662f\u5426\u5b89\u88c5</p> <p>\u7136\u540e\u5c31\u53ef\u4ee5\u7528<code>&gt;&gt;&gt;pip install xxx</code>\u6765\u5b89\u88c5\u6240\u9700\u7684\u5e93\u4e86</p>"},{"location":"my%20past/python/tool/#pyautogui","title":"pyautogui","text":""},{"location":"my%20past/python/tool/#_2","title":"\u4f7f\u7528","text":"<pre><code>import pyautogui as py\n\n# \u9f20\u6807\u70b9\u51fb\n\npy.click()\n\n# \u952e\u76d8\n\npy.keyUp('s')\npy.keyDown('s')\npy.press('s')\npy.hotkey('win'+'r')\n</code></pre>"},{"location":"my%20past/python/tool/#pyuserinput","title":"PyUserInput","text":"<pre><code>from pykeyboard import PyKeyboard\nfrom pymouse import PyMouse\n\nm=PyMouse()\nk=PyKeyboard()\n</code></pre>"},{"location":"my%20past/python/tool/#turtle","title":"turtle","text":"<pre><code>import turtle\n\nforward(100)\nleft(90)\nforward(100)\nleft(90)\nforward(100)\nleft(90)\nforward(100)\nleft(90)\ngoto(50,0)\nleft(90)\ncircle(50)\ngoto(50,50)\nDot()\n</code></pre>"},{"location":"my%20past/python/tool/#os","title":"os","text":"<p>\u7528\u4e8e\u6587\u4ef6\u5939\uff0c\u8def\u5f84\u64cd\u4f5c</p>"},{"location":"my%20past/python/tool/#pygame","title":"pygame","text":"<p>\u7528\u6765\u505a\u6e38\u620f\u6216\u5c0f\u8f6f\u4ef6</p>"},{"location":"my%20past/python/tool/#pynput","title":"pynput","text":"<p>\u7528\u4e8e\u952e\u76d8\uff0c\u9f20\u6807\u7684\u76d1\u542c</p>"},{"location":"my%20past/python/tool/#moviepy","title":"moviepy","text":"<p>\u7528\u4e8e\u89c6\u9891\u97f3\u9891\u7684\u7f16\u8f91\uff0c\u8f6c\u6362\u7b49</p>"},{"location":"my%20past/python/tool/#ctypes","title":"ctypes","text":"<p>1.\u7528\u4e8e\u83b7\u53d6\u5c4f\u5e55\u989c\u8272 2.\u5176\u4ed6()</p>"},{"location":"my%20past/python/tool/#pil","title":"PIL","text":"<p>\u7528\u4e8e\u56fe\u50cf\u5904\u7406</p>"}]}